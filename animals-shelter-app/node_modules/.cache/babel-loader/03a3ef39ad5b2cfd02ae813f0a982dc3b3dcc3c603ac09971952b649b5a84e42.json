{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina Aghei\\\\facultate\\\\licenta\\\\parteaPractica\\\\animals-shelter-app\\\\src\\\\components\\\\find-clinics.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { Search, MapPin, ChevronLeft, ChevronRight, Loader2 } from \"lucide-react\";\nimport Button from \"./ui/Button\";\nimport Input from \"./ui/Input\";\nimport { Card, CardContent } from \"./ui/Card\";\n\n// Fix Leaflet icon issues more thoroughly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\"\n});\n\n// Create clinic icon once and reuse it\nconst clinicIcon = new L.Icon({\n  iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Create selected clinic icon (different color)\nconst selectedClinicIcon = new L.Icon({\n  iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n  iconSize: [30, 49],\n  iconAnchor: [15, 49],\n  popupAnchor: [1, -34],\n  shadowSize: [49, 49]\n});\nexport default function FindVetClinics() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchAddress, setSearchAddress] = useState(\"\");\n  const [clinics, setClinics] = useState([]);\n  const [clinicLocations, setClinicLocations] = useState({});\n  const [geocodingProgress, setGeocodingProgress] = useState({\n    current: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]); // București\n  const [zoomLevel, setZoomLevel] = useState(13);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [selectedClinic, setSelectedClinic] = useState(null);\n  const mapRef = useRef(null);\n  const API_BASE_URL = \"http://localhost:8083\";\n\n  // Remove this line:\n  // const SEARCH_QUERY = \"clinica veterinara\" // Fixed search query\n\n  // For debugging - set to false for normal operation\n  const DEBUG_LARGE_SEARCH = false;\n\n  // Dynamic radius calculation based on zoom level (same as in ShelterMap but more generous)\n  const calculateRadius = zoom => {\n    // Invert the logic: lower zoom = larger radius, higher zoom = smaller radius\n    // Make the radius more generous to ensure we get more results\n    return Math.max(5, 200 / Math.pow(1.1, zoom - 8));\n  };\n\n  // Convert radius in kilometers to lat/lng degrees (more generous calculation)\n  const radiusToLatLngDegrees = radiusKm => {\n    // Use a more generous conversion: 1 degree ≈ 100 km (instead of 111)\n    // This will create a larger bounding box\n    return radiusKm / 100;\n  };\n\n  // Calculate bounding box from center point and radius\n  const calculateBoundingBox = (centerLat, centerLng, radiusKm) => {\n    const radiusDegrees = radiusToLatLngDegrees(radiusKm);\n    return {\n      latMin: centerLat - radiusDegrees,\n      latMax: centerLat + radiusDegrees,\n      lonMin: centerLng - radiusDegrees,\n      lonMax: centerLng + radiusDegrees\n    };\n  };\n  const geocodeClinicNames = async clinicNames => {\n    const locations = {};\n    const total = clinicNames.length;\n    const BATCH_SIZE = 3; // Process 3 clinics at once\n    const DELAY_BETWEEN_BATCHES = 800; // Delay between batches\n\n    console.log(\"Starting optimized geocoding for clinics:\", clinicNames);\n    setGeocodingProgress({\n      current: 0,\n      total\n    });\n\n    // Process clinics in batches\n    for (let i = 0; i < clinicNames.length; i += BATCH_SIZE) {\n      const batch = clinicNames.slice(i, i + BATCH_SIZE);\n\n      // Process batch in parallel\n      const batchPromises = batch.map(async (name, batchIndex) => {\n        const globalIndex = i + batchIndex;\n        try {\n          console.log(`Geocoding clinic ${globalIndex + 1}/${total}: \"${name}\"`);\n\n          // Strategy 1: Search for the exact clinic name\n          let response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=3`);\n          let data = await response.json();\n\n          // Strategy 2: If no results, try with \"veterinar\" appended\n          if (!data || data.length === 0) {\n            response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=3`);\n            data = await response.json();\n          }\n          if (data && data.length > 0) {\n            const result = data[0];\n            const lat = Number.parseFloat(result.lat);\n            const lng = Number.parseFloat(result.lon);\n\n            // Validate coordinates before storing\n            if (!isNaN(lat) && !isNaN(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\n              const location = {\n                latitude: lat,\n                longitude: lng,\n                address: result.display_name\n              };\n\n              // Update locations immediately as we get results\n              setClinicLocations(prev => ({\n                ...prev,\n                [name]: location\n              }));\n              console.log(`✓ Successfully geocoded \"${name}\"`);\n              return {\n                name,\n                location\n              };\n            } else {\n              throw new Error(\"Invalid coordinates\");\n            }\n          } else {\n            throw new Error(\"No geocoding results\");\n          }\n        } catch (error) {\n          console.error(`✗ Error geocoding clinic \"${name}\":`, error);\n          // Fallback location in Bucharest\n          const randomOffset = () => (Math.random() - 0.5) * 0.02;\n          const fallbackLocation = {\n            latitude: 44.4268 + randomOffset(),\n            longitude: 26.1025 + randomOffset(),\n            address: name + \" (locație aproximativă)\"\n          };\n\n          // Update locations immediately with fallback\n          setClinicLocations(prev => ({\n            ...prev,\n            [name]: fallbackLocation\n          }));\n          console.log(`⚠ Using fallback location for \"${name}\"`);\n          return {\n            name,\n            location: fallbackLocation\n          };\n        }\n      });\n\n      // Wait for current batch to complete\n      const batchResults = await Promise.allSettled(batchPromises);\n\n      // Update progress\n      const completedCount = Math.min(i + BATCH_SIZE, total);\n      setGeocodingProgress({\n        current: completedCount,\n        total\n      });\n\n      // Add delay between batches (except for the last batch)\n      if (i + BATCH_SIZE < clinicNames.length) {\n        await new Promise(resolve => setTimeout(resolve, DELAY_BETWEEN_BATCHES));\n      }\n    }\n    setGeocodingProgress({\n      current: 0,\n      total: 0\n    }); // Reset progress\n    console.log(`Optimized geocoding complete: ${Object.keys(locations).length}/${total} locations processed`);\n    return locations; // This won't be used since we're updating state directly\n  };\n  const fetchNearbyClinics = useCallback(async (lat, lng, zoom = zoomLevel) => {\n    setLoading(true);\n    setError(\"\");\n    setSelectedClinic(null); // Clear selection when searching\n\n    try {\n      // Get the current map bounds instead of calculating from center and radius\n      let bounds;\n      if (mapRef.current) {\n        const mapBounds = mapRef.current.getBounds();\n        bounds = {\n          latMin: mapBounds.getSouth(),\n          latMax: mapBounds.getNorth(),\n          lonMin: mapBounds.getWest(),\n          lonMax: mapBounds.getEast()\n        };\n      } else {\n        // Fallback: calculate bounds from center and zoom level\n        const radiusKm = calculateRadius(zoom);\n        bounds = calculateBoundingBox(lat, lng, radiusKm);\n      }\n      console.log(\"=== CLINIC SEARCH DEBUG ===\");\n      console.log(`Zoom level: ${zoom}`);\n      console.log(`Center coordinates: [${lat}, ${lng}]`);\n      console.log(\"Map bounds:\", {\n        latMin: bounds.latMin.toFixed(6),\n        latMax: bounds.latMax.toFixed(6),\n        lonMin: bounds.lonMin.toFixed(6),\n        lonMax: bounds.lonMax.toFixed(6),\n        latRange: (bounds.latMax - bounds.latMin).toFixed(6),\n        lonRange: (bounds.lonMax - bounds.lonMin).toFixed(6)\n      });\n      const requestBody = {\n        latMin: bounds.latMin,\n        latMax: bounds.latMax,\n        lonMin: bounds.lonMin,\n        lonMax: bounds.lonMax,\n        query: \"veterinar\" // Fixed query as requested\n      };\n      console.log(\"Request body:\", requestBody);\n      const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody),\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        let errorMessage = `Failed to fetch nearby clinics: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          errorMessage = (errorData === null || errorData === void 0 ? void 0 : errorData.message) || (errorData === null || errorData === void 0 ? void 0 : errorData[0]) || errorMessage;\n        } catch (e) {\n          // If response is not JSON, use the default error message\n        }\n        throw new Error(errorMessage);\n      }\n      const clinicNames = await response.json();\n      console.log(`API returned ${clinicNames.length} clinic names:`, clinicNames);\n\n      // Check if the response contains error messages\n      if (clinicNames.some(name => name.toLowerCase().includes(\"eroare\"))) {\n        console.warn(\"API returned error messages:\", clinicNames);\n        setError(\"Serviciul de căutare clinici nu este disponibil momentan.\");\n        setClinics([]);\n        setClinicLocations({});\n        return;\n      }\n      if (clinicNames && clinicNames.length > 0) {\n        // Immediately set the clinics to show them in the sidebar\n        setClinics(clinicNames);\n\n        // Clear old locations\n        setClinicLocations({});\n\n        // Start geocoding in the background (locations will appear as they're found)\n        console.log(\"Starting background geocoding process...\");\n        geocodeClinicNames(clinicNames); // Don't await - let it run in background\n\n        console.log(`✓ Search complete: ${clinicNames.length} clinics found, geocoding in progress`);\n      } else {\n        console.log(\"No clinics found\");\n        setClinics([]);\n        setClinicLocations({});\n      }\n    } catch (error) {\n      console.error(\"Error fetching nearby clinics:\", error);\n      setError(`A apărut o eroare la căutare: ${error.message || error}.`);\n      setClinics([]);\n      setClinicLocations({});\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE_URL, zoomLevel]);\n\n  // Debounced search to prevent too many API calls\n  const debouncedSearch = useCallback((() => {\n    let timeoutId;\n    return (lat, lng, zoom) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        fetchNearbyClinics(lat, lng, zoom);\n      }, 500); // 500ms delay\n    };\n  })(), [fetchNearbyClinics]);\n  useEffect(() => {\n    // Use debounced search for automatic updates\n    debouncedSearch(mapCenter[0], mapCenter[1], zoomLevel);\n  }, [debouncedSearch, mapCenter, zoomLevel]);\n  const searchByAddress = async e => {\n    e.preventDefault();\n    if (!searchAddress.trim()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        const {\n          lat,\n          lon\n        } = data[0];\n        const newLat = Number.parseFloat(lat);\n        const newLng = Number.parseFloat(lon);\n        if (!isNaN(newLat) && !isNaN(newLng)) {\n          setMapCenter([newLat, newLng]);\n          if (mapRef.current) {\n            mapRef.current.setView([newLat, newLng], zoomLevel);\n          }\n          // Use immediate search for manual address search\n          fetchNearbyClinics(newLat, newLng, zoomLevel);\n        } else {\n          setError(\"Coordonate invalide pentru adresa specificată\");\n        }\n      } else {\n        setError(\"Adresa nu a putut fi găsită\");\n      }\n    } catch (err) {\n      console.error(\"Error searching address:\", err);\n      setError(\"Eroare la căutarea adresei\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const MapController = () => {\n    _s();\n    const map = useMap();\n    mapRef.current = map;\n    useMapEvents({\n      moveend: () => {\n        const center = map.getCenter();\n        const newCenter = [center.lat, center.lng];\n        const newZoom = map.getZoom();\n\n        // Only update if there's a significant change\n        if (Math.abs(newCenter[0] - mapCenter[0]) > 0.005 || Math.abs(newCenter[1] - mapCenter[1]) > 0.005 || newZoom !== zoomLevel) {\n          setMapCenter(newCenter);\n          setZoomLevel(newZoom);\n        }\n      },\n      zoomend: () => {\n        // Trigger search immediately when zoom changes\n        const center = map.getCenter();\n        const newZoom = map.getZoom();\n        setZoomLevel(newZoom);\n        // Use immediate search for zoom changes to get fresh results\n        fetchNearbyClinics(center.lat, center.lng, newZoom);\n      },\n      click: () => {\n        setSelectedClinic(null);\n      }\n    });\n    return null;\n  };\n  _s(MapController, \"tmcOhplWkk/SgX5HNxHxB5dt97g=\", false, function () {\n    return [useMap, useMapEvents];\n  });\n  const centerMapOnClinic = clinicName => {\n    const location = clinicLocations[clinicName];\n    if (!location || !location.latitude || !location.longitude) return;\n    const lat = Number(location.latitude);\n    const lng = Number(location.longitude);\n    if (!isNaN(lat) && !isNaN(lng)) {\n      if (mapRef.current) {\n        mapRef.current.setView([lat, lng], 15);\n      }\n      setSelectedClinic(clinicName);\n    }\n  };\n  const handleMarkerClick = clinicName => {\n    setSelectedClinic(clinicName);\n    // Scroll to the clinic in the sidebar\n    const clinicElement = document.getElementById(`clinic-card-${clinicName}`);\n    if (clinicElement) {\n      clinicElement.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      });\n    }\n  };\n  const clinicMarkers = useMemo(() => {\n    return Object.entries(clinicLocations).map(([clinicName, location]) => {\n      const isSelected = selectedClinic === clinicName;\n      return {\n        key: clinicName,\n        clinicName: clinicName,\n        position: [location.latitude, location.longitude],\n        location: location,\n        isSelected: isSelected\n      };\n    });\n  }, [clinicLocations, selectedClinic]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b bg-white z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex h-16 items-center justify-between px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-3 p-2 rounded-full hover:bg-teal-50 transition-colors flex items-center\",\n            onClick: () => window.history.back(),\n            title: \"\\xCEnapoi\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              className: \"text-teal-600\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 12H5M12 19L5 12L12 5\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\",\n            onClick: () => setSidebarOpen(!sidebarOpen),\n            children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl font-bold\",\n            children: \"G\\u0103se\\u0219te Clinici Veterinare \\xEEn apropiere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"} bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: searchByAddress,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Caut\\u0103 o adres\\u0103...\",\n              value: searchAddress,\n              onChange: e => setSearchAddress(e.target.value),\n              className: \"flex-grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: loading,\n              className: \"px-3\",\n              children: /*#__PURE__*/_jsxDEV(Search, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold\",\n                children: [\"Rezultate (\", clinics.length, \")\", clinicMarkers.length !== clinics.length && clinics.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-500 ml-1\",\n                  children: [\"(\", clinicMarkers.length, \" pe hart\\u0103)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 33\n              }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Se \\xEEncarc\\u0103...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 29\n            }, this), geocodingProgress.total > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 p-3 bg-blue-50 border border-blue-200 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                  className: \"h-4 w-4 animate-spin text-blue-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-blue-700\",\n                  children: [\"Localizez clinicile: \", geocodingProgress.current, \"/\", geocodingProgress.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 w-full bg-blue-200 rounded-full h-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n                  style: {\n                    width: `${geocodingProgress.current / geocodingProgress.total * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 33\n            }, this), !loading && clinics.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                className: \"h-12 w-12 mx-auto text-gray-400 mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"Nu s-au g\\u0103sit clinici veterinare \\xEEn aceast\\u0103 zon\\u0103.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-sm mt-2\",\n                children: \"\\xCEncerca\\u021Bi s\\u0103 c\\u0103uta\\u021Bi o alt\\u0103 adres\\u0103 sau s\\u0103 v\\u0103 deplasa\\u021Bi pe hart\\u0103.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: clinics.map((clinicName, index) => {\n                var _hasLocation$latitude, _hasLocation$longitud;\n                const hasLocation = clinicLocations[clinicName];\n                const isSelected = selectedClinic === clinicName;\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  id: `clinic-card-${clinicName}`,\n                  className: `overflow-hidden cursor-pointer hover:shadow-md transition-all duration-200 ${isSelected ? \"border-blue-500 border-2 bg-blue-50\" : \"\"} ${!hasLocation ? \"opacity-60\" : \"\"}`,\n                  onClick: () => centerMapOnClinic(clinicName),\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    className: \"p-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-start\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center mr-2 mt-0.5\",\n                        children: hasLocation ? /*#__PURE__*/_jsxDEV(MapPin, {\n                          className: `h-5 w-5 flex-shrink-0 ${isSelected ? \"text-blue-600\" : \"text-red-500\"}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 61\n                        }, this) : /*#__PURE__*/_jsxDEV(Loader2, {\n                          className: \"h-4 w-4 animate-spin text-gray-400 flex-shrink-0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 541,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: `font-bold text-lg ${isSelected ? \"text-blue-700\" : \"\"}`,\n                          children: clinicName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 545,\n                          columnNumber: 57\n                        }, this), hasLocation && hasLocation.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-600 text-sm mt-1\",\n                          children: hasLocation.address\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 547,\n                          columnNumber: 61\n                        }, this), hasLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-500 mt-1\",\n                          children: [\"Lat: \", (_hasLocation$latitude = hasLocation.latitude) === null || _hasLocation$latitude === void 0 ? void 0 : _hasLocation$latitude.toFixed(4), \", Lng: \", (_hasLocation$longitud = hasLocation.longitude) === null || _hasLocation$longitud === void 0 ? void 0 : _hasLocation$longitud.toFixed(4)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 550,\n                          columnNumber: 61\n                        }, this), !hasLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-400 mt-1\",\n                          children: \"Se localizeaz\\u0103...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 74\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 45\n                  }, this)\n                }, `clinic-${index}-${clinicName}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-t text-xs text-gray-500 text-center\",\n          children: [\"Raza de c\\u0103utare: \", calculateRadius(zoomLevel).toFixed(1), \" km | Pinuri: \", clinicMarkers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow relative\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoomLevel,\n          className: \"h-full w-full\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MapController, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 25\n          }, this), clinicMarkers.map(marker => {\n            var _marker$location$lati, _marker$location$long;\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: marker.position,\n              icon: marker.isSelected ? selectedClinicIcon : clinicIcon,\n              eventHandlers: {\n                click: () => handleMarkerClick(marker.clinicName)\n              },\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center max-w-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-xl font-semibold mb-2\",\n                    children: marker.clinicName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 41\n                  }, this), marker.location.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 mb-1\",\n                    children: marker.location.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 69\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [(_marker$location$lati = marker.location.latitude) === null || _marker$location$lati === void 0 ? void 0 : _marker$location$lati.toFixed(4), \", \", (_marker$location$long = marker.location.longitude) === null || _marker$location$long === void 0 ? void 0 : _marker$location$long.toFixed(4)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 33\n              }, this)\n            }, marker.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 29\n            }, this);\n          })]\n        }, \"map-container\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\",\n          onClick: () => setSidebarOpen(!sidebarOpen),\n          children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 9\n  }, this);\n}\n_s2(FindVetClinics, \"cg0MoHR4Vlz8GJQsNNo0DArLuLQ=\");\n_c = FindVetClinics;\nvar _c;\n$RefreshReg$(_c, \"FindVetClinics\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","useMemo","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","Search","MapPin","ChevronLeft","ChevronRight","Loader2","Button","Input","Card","CardContent","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","clinicIcon","iconSize","iconAnchor","popupAnchor","shadowSize","selectedClinicIcon","FindVetClinics","_s2","_s","$RefreshSig$","searchAddress","setSearchAddress","clinics","setClinics","clinicLocations","setClinicLocations","geocodingProgress","setGeocodingProgress","current","total","loading","setLoading","error","setError","mapCenter","setMapCenter","zoomLevel","setZoomLevel","sidebarOpen","setSidebarOpen","selectedClinic","setSelectedClinic","mapRef","API_BASE_URL","DEBUG_LARGE_SEARCH","calculateRadius","zoom","Math","max","pow","radiusToLatLngDegrees","radiusKm","calculateBoundingBox","centerLat","centerLng","radiusDegrees","latMin","latMax","lonMin","lonMax","geocodeClinicNames","clinicNames","locations","length","BATCH_SIZE","DELAY_BETWEEN_BATCHES","console","log","i","batch","slice","batchPromises","map","name","batchIndex","globalIndex","response","fetch","encodeURIComponent","data","json","result","lat","Number","parseFloat","lng","lon","isNaN","location","latitude","longitude","address","display_name","prev","Error","randomOffset","random","fallbackLocation","batchResults","Promise","allSettled","completedCount","min","resolve","setTimeout","Object","keys","fetchNearbyClinics","bounds","mapBounds","getBounds","getSouth","getNorth","getWest","getEast","toFixed","latRange","lonRange","requestBody","query","method","headers","body","JSON","stringify","credentials","ok","errorMessage","status","errorData","message","e","some","toLowerCase","includes","warn","debouncedSearch","timeoutId","clearTimeout","searchByAddress","preventDefault","trim","newLat","newLng","setView","err","MapController","moveend","center","getCenter","newCenter","newZoom","getZoom","abs","zoomend","click","centerMapOnClinic","clinicName","handleMarkerClick","clinicElement","document","getElementById","scrollIntoView","behavior","block","clinicMarkers","entries","isSelected","key","position","className","children","onClick","window","history","back","title","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","size","onSubmit","type","placeholder","value","onChange","target","disabled","style","index","_hasLocation$latitude","_hasLocation$longitud","hasLocation","id","url","attribution","marker","_marker$location$lati","_marker$location$long","icon","eventHandlers","_c","$RefreshReg$"],"sources":["C:/Users/Cristina Aghei/facultate/licenta/parteaPractica/animals-shelter-app/src/components/find-clinics.js"],"sourcesContent":["import { useState, useEffect, useCallback, useRef, useMemo } from \"react\"\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\"\r\nimport \"leaflet/dist/leaflet.css\"\r\nimport L from \"leaflet\"\r\nimport { Search, MapPin, ChevronLeft, ChevronRight, Loader2 } from \"lucide-react\"\r\nimport Button from \"./ui/Button\"\r\nimport Input from \"./ui/Input\"\r\nimport { Card, CardContent } from \"./ui/Card\"\r\n\r\n// Fix Leaflet icon issues more thoroughly\r\ndelete L.Icon.Default.prototype._getIconUrl\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\r\n    iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n})\r\n\r\n// Create clinic icon once and reuse it\r\nconst clinicIcon = new L.Icon({\r\n    iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41],\r\n})\r\n\r\n// Create selected clinic icon (different color)\r\nconst selectedClinicIcon = new L.Icon({\r\n    iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n    iconSize: [30, 49],\r\n    iconAnchor: [15, 49],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [49, 49],\r\n})\r\n\r\nexport default function FindVetClinics() {\r\n    const [searchAddress, setSearchAddress] = useState(\"\")\r\n    const [clinics, setClinics] = useState([])\r\n    const [clinicLocations, setClinicLocations] = useState({})\r\n    const [geocodingProgress, setGeocodingProgress] = useState({ current: 0, total: 0 })\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]) // București\r\n    const [zoomLevel, setZoomLevel] = useState(13)\r\n    const [sidebarOpen, setSidebarOpen] = useState(true)\r\n    const [selectedClinic, setSelectedClinic] = useState(null)\r\n    const mapRef = useRef(null)\r\n    const API_BASE_URL = \"http://localhost:8083\"\r\n\r\n    // Remove this line:\r\n    // const SEARCH_QUERY = \"clinica veterinara\" // Fixed search query\r\n\r\n    // For debugging - set to false for normal operation\r\n    const DEBUG_LARGE_SEARCH = false\r\n\r\n    // Dynamic radius calculation based on zoom level (same as in ShelterMap but more generous)\r\n    const calculateRadius = (zoom) => {\r\n        // Invert the logic: lower zoom = larger radius, higher zoom = smaller radius\r\n        // Make the radius more generous to ensure we get more results\r\n        return Math.max(5, 200 / Math.pow(1.1, zoom - 8))\r\n    }\r\n\r\n    // Convert radius in kilometers to lat/lng degrees (more generous calculation)\r\n    const radiusToLatLngDegrees = (radiusKm) => {\r\n        // Use a more generous conversion: 1 degree ≈ 100 km (instead of 111)\r\n        // This will create a larger bounding box\r\n        return radiusKm / 100\r\n    }\r\n\r\n    // Calculate bounding box from center point and radius\r\n    const calculateBoundingBox = (centerLat, centerLng, radiusKm) => {\r\n        const radiusDegrees = radiusToLatLngDegrees(radiusKm)\r\n\r\n        return {\r\n            latMin: centerLat - radiusDegrees,\r\n            latMax: centerLat + radiusDegrees,\r\n            lonMin: centerLng - radiusDegrees,\r\n            lonMax: centerLng + radiusDegrees,\r\n        }\r\n    }\r\n\r\n    const geocodeClinicNames = async (clinicNames) => {\r\n        const locations = {}\r\n        const total = clinicNames.length\r\n        const BATCH_SIZE = 3 // Process 3 clinics at once\r\n        const DELAY_BETWEEN_BATCHES = 800 // Delay between batches\r\n\r\n        console.log(\"Starting optimized geocoding for clinics:\", clinicNames)\r\n        setGeocodingProgress({ current: 0, total })\r\n\r\n        // Process clinics in batches\r\n        for (let i = 0; i < clinicNames.length; i += BATCH_SIZE) {\r\n            const batch = clinicNames.slice(i, i + BATCH_SIZE)\r\n\r\n            // Process batch in parallel\r\n            const batchPromises = batch.map(async (name, batchIndex) => {\r\n                const globalIndex = i + batchIndex\r\n\r\n                try {\r\n                    console.log(`Geocoding clinic ${globalIndex + 1}/${total}: \"${name}\"`)\r\n\r\n                    // Strategy 1: Search for the exact clinic name\r\n                    let response = await fetch(\r\n                        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=3`,\r\n                    )\r\n                    let data = await response.json()\r\n\r\n                    // Strategy 2: If no results, try with \"veterinar\" appended\r\n                    if (!data || data.length === 0) {\r\n                        response = await fetch(\r\n                            `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=3`,\r\n                        )\r\n                        data = await response.json()\r\n                    }\r\n\r\n                    if (data && data.length > 0) {\r\n                        const result = data[0]\r\n                        const lat = Number.parseFloat(result.lat)\r\n                        const lng = Number.parseFloat(result.lon)\r\n\r\n                        // Validate coordinates before storing\r\n                        if (!isNaN(lat) && !isNaN(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\r\n                            const location = {\r\n                                latitude: lat,\r\n                                longitude: lng,\r\n                                address: result.display_name,\r\n                            }\r\n\r\n                            // Update locations immediately as we get results\r\n                            setClinicLocations((prev) => ({\r\n                                ...prev,\r\n                                [name]: location,\r\n                            }))\r\n\r\n                            console.log(`✓ Successfully geocoded \"${name}\"`)\r\n                            return { name, location }\r\n                        } else {\r\n                            throw new Error(\"Invalid coordinates\")\r\n                        }\r\n                    } else {\r\n                        throw new Error(\"No geocoding results\")\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`✗ Error geocoding clinic \"${name}\":`, error)\r\n                    // Fallback location in Bucharest\r\n                    const randomOffset = () => (Math.random() - 0.5) * 0.02\r\n                    const fallbackLocation = {\r\n                        latitude: 44.4268 + randomOffset(),\r\n                        longitude: 26.1025 + randomOffset(),\r\n                        address: name + \" (locație aproximativă)\",\r\n                    }\r\n\r\n                    // Update locations immediately with fallback\r\n                    setClinicLocations((prev) => ({\r\n                        ...prev,\r\n                        [name]: fallbackLocation,\r\n                    }))\r\n\r\n                    console.log(`⚠ Using fallback location for \"${name}\"`)\r\n                    return { name, location: fallbackLocation }\r\n                }\r\n            })\r\n\r\n            // Wait for current batch to complete\r\n            const batchResults = await Promise.allSettled(batchPromises)\r\n\r\n            // Update progress\r\n            const completedCount = Math.min(i + BATCH_SIZE, total)\r\n            setGeocodingProgress({ current: completedCount, total })\r\n\r\n            // Add delay between batches (except for the last batch)\r\n            if (i + BATCH_SIZE < clinicNames.length) {\r\n                await new Promise((resolve) => setTimeout(resolve, DELAY_BETWEEN_BATCHES))\r\n            }\r\n        }\r\n\r\n        setGeocodingProgress({ current: 0, total: 0 }) // Reset progress\r\n        console.log(`Optimized geocoding complete: ${Object.keys(locations).length}/${total} locations processed`)\r\n        return locations // This won't be used since we're updating state directly\r\n    }\r\n\r\n    const fetchNearbyClinics = useCallback(\r\n        async (lat, lng, zoom = zoomLevel) => {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            setSelectedClinic(null) // Clear selection when searching\r\n\r\n            try {\r\n                // Get the current map bounds instead of calculating from center and radius\r\n                let bounds\r\n                if (mapRef.current) {\r\n                    const mapBounds = mapRef.current.getBounds()\r\n                    bounds = {\r\n                        latMin: mapBounds.getSouth(),\r\n                        latMax: mapBounds.getNorth(),\r\n                        lonMin: mapBounds.getWest(),\r\n                        lonMax: mapBounds.getEast(),\r\n                    }\r\n                } else {\r\n                    // Fallback: calculate bounds from center and zoom level\r\n                    const radiusKm = calculateRadius(zoom)\r\n                    bounds = calculateBoundingBox(lat, lng, radiusKm)\r\n                }\r\n\r\n                console.log(\"=== CLINIC SEARCH DEBUG ===\")\r\n                console.log(`Zoom level: ${zoom}`)\r\n                console.log(`Center coordinates: [${lat}, ${lng}]`)\r\n                console.log(\"Map bounds:\", {\r\n                    latMin: bounds.latMin.toFixed(6),\r\n                    latMax: bounds.latMax.toFixed(6),\r\n                    lonMin: bounds.lonMin.toFixed(6),\r\n                    lonMax: bounds.lonMax.toFixed(6),\r\n                    latRange: (bounds.latMax - bounds.latMin).toFixed(6),\r\n                    lonRange: (bounds.lonMax - bounds.lonMin).toFixed(6),\r\n                })\r\n\r\n                const requestBody = {\r\n                    latMin: bounds.latMin,\r\n                    latMax: bounds.latMax,\r\n                    lonMin: bounds.lonMin,\r\n                    lonMax: bounds.lonMax,\r\n                    query: \"veterinar\", // Fixed query as requested\r\n                }\r\n\r\n                console.log(\"Request body:\", requestBody)\r\n\r\n                const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(requestBody),\r\n                    credentials: \"include\",\r\n                })\r\n\r\n                if (!response.ok) {\r\n                    let errorMessage = `Failed to fetch nearby clinics: ${response.status}`\r\n                    try {\r\n                        const errorData = await response.json()\r\n                        errorMessage = errorData?.message || errorData?.[0] || errorMessage\r\n                    } catch (e) {\r\n                        // If response is not JSON, use the default error message\r\n                    }\r\n                    throw new Error(errorMessage)\r\n                }\r\n\r\n                const clinicNames = await response.json()\r\n                console.log(`API returned ${clinicNames.length} clinic names:`, clinicNames)\r\n\r\n                // Check if the response contains error messages\r\n                if (clinicNames.some((name) => name.toLowerCase().includes(\"eroare\"))) {\r\n                    console.warn(\"API returned error messages:\", clinicNames)\r\n                    setError(\"Serviciul de căutare clinici nu este disponibil momentan.\")\r\n                    setClinics([])\r\n                    setClinicLocations({})\r\n                    return\r\n                }\r\n\r\n                if (clinicNames && clinicNames.length > 0) {\r\n                    // Immediately set the clinics to show them in the sidebar\r\n                    setClinics(clinicNames)\r\n\r\n                    // Clear old locations\r\n                    setClinicLocations({})\r\n\r\n                    // Start geocoding in the background (locations will appear as they're found)\r\n                    console.log(\"Starting background geocoding process...\")\r\n                    geocodeClinicNames(clinicNames) // Don't await - let it run in background\r\n\r\n                    console.log(`✓ Search complete: ${clinicNames.length} clinics found, geocoding in progress`)\r\n                } else {\r\n                    console.log(\"No clinics found\")\r\n                    setClinics([])\r\n                    setClinicLocations({})\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching nearby clinics:\", error)\r\n                setError(`A apărut o eroare la căutare: ${error.message || error}.`)\r\n                setClinics([])\r\n                setClinicLocations({})\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        },\r\n        [API_BASE_URL, zoomLevel],\r\n    )\r\n\r\n    // Debounced search to prevent too many API calls\r\n    const debouncedSearch = useCallback(\r\n        (() => {\r\n            let timeoutId\r\n            return (lat, lng, zoom) => {\r\n                clearTimeout(timeoutId)\r\n                timeoutId = setTimeout(() => {\r\n                    fetchNearbyClinics(lat, lng, zoom)\r\n                }, 500) // 500ms delay\r\n            }\r\n        })(),\r\n        [fetchNearbyClinics],\r\n    )\r\n\r\n    useEffect(() => {\r\n        // Use debounced search for automatic updates\r\n        debouncedSearch(mapCenter[0], mapCenter[1], zoomLevel)\r\n    }, [debouncedSearch, mapCenter, zoomLevel])\r\n\r\n    const searchByAddress = async (e) => {\r\n        e.preventDefault()\r\n        if (!searchAddress.trim()) return\r\n\r\n        setLoading(true)\r\n        try {\r\n            const response = await fetch(\r\n                `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`,\r\n            )\r\n            const data = await response.json()\r\n\r\n            if (data && data.length > 0) {\r\n                const { lat, lon } = data[0]\r\n                const newLat = Number.parseFloat(lat)\r\n                const newLng = Number.parseFloat(lon)\r\n\r\n                if (!isNaN(newLat) && !isNaN(newLng)) {\r\n                    setMapCenter([newLat, newLng])\r\n                    if (mapRef.current) {\r\n                        mapRef.current.setView([newLat, newLng], zoomLevel)\r\n                    }\r\n                    // Use immediate search for manual address search\r\n                    fetchNearbyClinics(newLat, newLng, zoomLevel)\r\n                } else {\r\n                    setError(\"Coordonate invalide pentru adresa specificată\")\r\n                }\r\n            } else {\r\n                setError(\"Adresa nu a putut fi găsită\")\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error searching address:\", err)\r\n            setError(\"Eroare la căutarea adresei\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const MapController = () => {\r\n        const map = useMap()\r\n        mapRef.current = map\r\n\r\n        useMapEvents({\r\n            moveend: () => {\r\n                const center = map.getCenter()\r\n                const newCenter = [center.lat, center.lng]\r\n                const newZoom = map.getZoom()\r\n\r\n                // Only update if there's a significant change\r\n                if (\r\n                    Math.abs(newCenter[0] - mapCenter[0]) > 0.005 ||\r\n                    Math.abs(newCenter[1] - mapCenter[1]) > 0.005 ||\r\n                    newZoom !== zoomLevel\r\n                ) {\r\n                    setMapCenter(newCenter)\r\n                    setZoomLevel(newZoom)\r\n                }\r\n            },\r\n            zoomend: () => {\r\n                // Trigger search immediately when zoom changes\r\n                const center = map.getCenter()\r\n                const newZoom = map.getZoom()\r\n                setZoomLevel(newZoom)\r\n                // Use immediate search for zoom changes to get fresh results\r\n                fetchNearbyClinics(center.lat, center.lng, newZoom)\r\n            },\r\n            click: () => {\r\n                setSelectedClinic(null)\r\n            },\r\n        })\r\n\r\n        return null\r\n    }\r\n\r\n    const centerMapOnClinic = (clinicName) => {\r\n        const location = clinicLocations[clinicName]\r\n        if (!location || !location.latitude || !location.longitude) return\r\n\r\n        const lat = Number(location.latitude)\r\n        const lng = Number(location.longitude)\r\n\r\n        if (!isNaN(lat) && !isNaN(lng)) {\r\n            if (mapRef.current) {\r\n                mapRef.current.setView([lat, lng], 15)\r\n            }\r\n            setSelectedClinic(clinicName)\r\n        }\r\n    }\r\n\r\n    const handleMarkerClick = (clinicName) => {\r\n        setSelectedClinic(clinicName)\r\n        // Scroll to the clinic in the sidebar\r\n        const clinicElement = document.getElementById(`clinic-card-${clinicName}`)\r\n        if (clinicElement) {\r\n            clinicElement.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n        }\r\n    }\r\n\r\n    const clinicMarkers = useMemo(() => {\r\n        return Object.entries(clinicLocations).map(([clinicName, location]) => {\r\n            const isSelected = selectedClinic === clinicName\r\n            return {\r\n                key: clinicName,\r\n                clinicName: clinicName,\r\n                position: [location.latitude, location.longitude],\r\n                location: location,\r\n                isSelected: isSelected,\r\n            }\r\n        })\r\n    }, [clinicLocations, selectedClinic])\r\n\r\n    return (\r\n        <div className=\"h-screen flex flex-col\">\r\n            <header className=\"border-b bg-white z-10\">\r\n                <div className=\"container flex h-16 items-center justify-between px-4\">\r\n                    <div className=\"flex items-center\">\r\n                        {/* Back arrow button */}\r\n                        <button\r\n                            className=\"mr-3 p-2 rounded-full hover:bg-teal-50 transition-colors flex items-center\"\r\n                            onClick={() => window.history.back()}\r\n                            title=\"Înapoi\"\r\n                        >\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" className=\"text-teal-600\">\r\n                                <path\r\n                                    d=\"M19 12H5M12 19L5 12L12 5\"\r\n                                    stroke=\"currentColor\"\r\n                                    strokeWidth=\"2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\"\r\n                            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                        >\r\n                            {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                        </button>\r\n                        <h1 className=\"text-xl font-bold\">Găsește Clinici Veterinare în apropiere</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"flex flex-1 overflow-hidden\">\r\n                {/* Sidebar */}\r\n                <div\r\n                    className={`${\r\n                        sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"\r\n                    } bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`}\r\n                >\r\n                    <div className=\"p-4 border-b\">\r\n                        {/* Address search - simplified */}\r\n                        <form onSubmit={searchByAddress} className=\"flex gap-2\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Caută o adresă...\"\r\n                                value={searchAddress}\r\n                                onChange={(e) => setSearchAddress(e.target.value)}\r\n                                className=\"flex-grow\"\r\n                            />\r\n                            <Button type=\"submit\" disabled={loading} className=\"px-3\">\r\n                                <Search className=\"h-4 w-4\" />\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 overflow-y-auto\">\r\n                        <div className=\"p-4\">\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                                <h2 className=\"text-lg font-semibold\">\r\n                                    Rezultate ({clinics.length})\r\n                                    {clinicMarkers.length !== clinics.length && clinics.length > 0 && (\r\n                                        <span className=\"text-sm text-gray-500 ml-1\">({clinicMarkers.length} pe hartă)</span>\r\n                                    )}\r\n                                </h2>\r\n                                {loading && <span className=\"text-sm text-gray-500\">Se încarcă...</span>}\r\n                            </div>\r\n\r\n                            {/* Geocoding progress */}\r\n                            {geocodingProgress.total > 0 && (\r\n                                <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Loader2 className=\"h-4 w-4 animate-spin text-blue-600\" />\r\n                                        <span className=\"text-sm text-blue-700\">\r\n                      Localizez clinicile: {geocodingProgress.current}/{geocodingProgress.total}\r\n                    </span>\r\n                                    </div>\r\n                                    <div className=\"mt-2 w-full bg-blue-200 rounded-full h-2\">\r\n                                        <div\r\n                                            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                                            style={{ width: `${(geocodingProgress.current / geocodingProgress.total) * 100}%` }}\r\n                                        ></div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {error && (\r\n                                <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">{error}</div>\r\n                            )}\r\n\r\n                            {!loading && clinics.length === 0 && !error && (\r\n                                <div className=\"text-center py-8\">\r\n                                    <MapPin className=\"h-12 w-12 mx-auto text-gray-400 mb-2\" />\r\n                                    <p className=\"text-gray-500\">Nu s-au găsit clinici veterinare în această zonă.</p>\r\n                                    <p className=\"text-gray-500 text-sm mt-2\">\r\n                                        Încercați să căutați o altă adresă sau să vă deplasați pe hartă.\r\n                                    </p>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"space-y-4\">\r\n                                {clinics.map((clinicName, index) => {\r\n                                    const hasLocation = clinicLocations[clinicName]\r\n                                    const isSelected = selectedClinic === clinicName\r\n\r\n                                    return (\r\n                                        <Card\r\n                                            key={`clinic-${index}-${clinicName}`}\r\n                                            id={`clinic-card-${clinicName}`}\r\n                                            className={`overflow-hidden cursor-pointer hover:shadow-md transition-all duration-200 ${\r\n                                                isSelected ? \"border-blue-500 border-2 bg-blue-50\" : \"\"\r\n                                            } ${!hasLocation ? \"opacity-60\" : \"\"}`}\r\n                                            onClick={() => centerMapOnClinic(clinicName)}\r\n                                        >\r\n                                            <CardContent className=\"p-4\">\r\n                                                <div className=\"flex items-start\">\r\n                                                    <div className=\"flex items-center mr-2 mt-0.5\">\r\n                                                        {hasLocation ? (\r\n                                                            <MapPin\r\n                                                                className={`h-5 w-5 flex-shrink-0 ${isSelected ? \"text-blue-600\" : \"text-red-500\"}`}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <Loader2 className=\"h-4 w-4 animate-spin text-gray-400 flex-shrink-0\" />\r\n                                                        )}\r\n                                                    </div>\r\n                                                    <div className=\"flex-1\">\r\n                                                        <h3 className={`font-bold text-lg ${isSelected ? \"text-blue-700\" : \"\"}`}>{clinicName}</h3>\r\n                                                        {hasLocation && hasLocation.address && (\r\n                                                            <p className=\"text-gray-600 text-sm mt-1\">{hasLocation.address}</p>\r\n                                                        )}\r\n                                                        {hasLocation && (\r\n                                                            <p className=\"text-xs text-gray-500 mt-1\">\r\n                                                                Lat: {hasLocation.latitude?.toFixed(4)}, Lng: {hasLocation.longitude?.toFixed(4)}\r\n                                                            </p>\r\n                                                        )}\r\n                                                        {!hasLocation && <p className=\"text-xs text-gray-400 mt-1\">Se localizează...</p>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-3 border-t text-xs text-gray-500 text-center\">\r\n                        Raza de căutare: {calculateRadius(zoomLevel).toFixed(1)} km | Pinuri: {clinicMarkers.length}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Map container */}\r\n                <div className=\"flex-grow relative\">\r\n                    <MapContainer\r\n                        center={mapCenter}\r\n                        zoom={zoomLevel}\r\n                        className=\"h-full w-full\"\r\n                        key=\"map-container\" // Stable key to prevent remounting\r\n                    >\r\n                        <TileLayer\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                        />\r\n                        <MapController />\r\n\r\n                        {/* Render clinic markers - synchronized with sidebar results */}\r\n                        {clinicMarkers.map((marker) => (\r\n                            <Marker\r\n                                key={marker.key}\r\n                                position={marker.position}\r\n                                icon={marker.isSelected ? selectedClinicIcon : clinicIcon}\r\n                                eventHandlers={{\r\n                                    click: () => handleMarkerClick(marker.clinicName),\r\n                                }}\r\n                            >\r\n                                <Popup>\r\n                                    <div className=\"text-center max-w-xs\">\r\n                                        <h2 className=\"text-xl font-semibold mb-2\">{marker.clinicName}</h2>\r\n                                        {marker.location.address && <p className=\"text-gray-600 mb-1\">{marker.location.address}</p>}\r\n                                        <p className=\"text-xs text-gray-500\">\r\n                                            {marker.location.latitude?.toFixed(4)}, {marker.location.longitude?.toFixed(4)}\r\n                                        </p>\r\n                                    </div>\r\n                                </Popup>\r\n                            </Marker>\r\n                        ))}\r\n                    </MapContainer>\r\n\r\n                    <button\r\n                        className=\"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\"\r\n                        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                    >\r\n                        {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}