{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina Aghei\\\\facultate\\\\licenta\\\\parteaPractica\\\\animals-shelter-app\\\\src\\\\components\\\\book-adoption.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { format, addDays } from \"date-fns\";\nimport { ro } from \"date-fns/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL;\n\n// Helper function to capitalize first letter\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nconst AdoptionBooking = () => {\n  _s();\n  const [availableDates, setAvailableDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  useEffect(() => {\n    // Fetch available dates from the API\n    const fetchAvailableDates = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/available-dates`);\n        const data = await response.json();\n        setAvailableDates(data);\n      } catch (error) {\n        console.error(\"Error fetching available dates:\", error);\n      }\n    };\n    fetchAvailableDates();\n  }, []);\n  useEffect(() => {\n    // Fetch available times for the selected date\n    const fetchAvailableTimes = async () => {\n      if (selectedDate) {\n        try {\n          const response = await fetch(`${API_BASE_URL}/api/available-times?date=${selectedDate}`);\n          const data = await response.json();\n          setAvailableTimes(data);\n        } catch (error) {\n          console.error(\"Error fetching available times:\", error);\n        }\n      }\n    };\n    fetchAvailableTimes();\n  }, [selectedDate]);\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n    setSelectedTime(\"\"); // Reset selected time when date changes\n  };\n  const handleTimeChange = event => {\n    setSelectedTime(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Basic validation\n    if (!selectedDate || !selectedTime) {\n      alert(\"Please select both a date and a time.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/book-appointment`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          time: selectedTime\n        })\n      });\n      if (response.ok) {\n        alert(\"Appointment booked successfully!\");\n        // Reset form\n        setSelectedDate(\"\");\n        setSelectedTime(\"\");\n      } else {\n        alert(\"Failed to book appointment.\");\n      }\n    } catch (error) {\n      console.error(\"Error booking appointment:\", error);\n      alert(\"An error occurred while booking the appointment.\");\n    }\n  };\n\n  // Generate date options for the select element\n  const dateOptions = Array.from({\n    length: 7\n  }).map((_, index) => {\n    const day = addDays(new Date(), index);\n    return {\n      value: format(day, \"yyyy-MM-dd\"),\n      label: format(day, \"dd/MM/yyyy\"),\n      dayName: format(day, \"EEEE\", {\n        locale: ro\n      }) // Using Romanian locale for day names\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book an Adoption Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Select Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"date\",\n          value: selectedDate,\n          onChange: handleDateChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), dateOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: [index === 0 ? \"Astăzi\" : index === 1 ? \"Mâine\" : capitalizeFirstLetter(option.dayName), \" -\", \" \", option.label]\n          }, option.value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"Select Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"time\",\n          value: selectedTime,\n          onChange: handleTimeChange,\n          disabled: !selectedDate,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: time,\n            children: time\n          }, time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(AdoptionBooking, \"j/FvoKsdU9q9gB2Abw+96PTdyLk=\");\n_c = AdoptionBooking;\nexport default AdoptionBooking;\nvar _c;\n$RefreshReg$(_c, \"AdoptionBooking\");","map":{"version":3,"names":["useState","useEffect","format","addDays","ro","jsxDEV","_jsxDEV","API_BASE_URL","process","env","NEXT_PUBLIC_API_URL","capitalizeFirstLetter","string","charAt","toUpperCase","slice","AdoptionBooking","_s","availableDates","setAvailableDates","selectedDate","setSelectedDate","availableTimes","setAvailableTimes","selectedTime","setSelectedTime","fetchAvailableDates","response","fetch","data","json","error","console","fetchAvailableTimes","handleDateChange","event","target","value","handleTimeChange","handleSubmit","preventDefault","alert","method","headers","body","JSON","stringify","date","time","ok","dateOptions","Array","from","length","map","_","index","day","Date","label","dayName","locale","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","option","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/Cristina Aghei/facultate/licenta/parteaPractica/animals-shelter-app/src/components/book-adoption.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { format, addDays } from \"date-fns\"\r\nimport { ro } from \"date-fns/locale\"\r\n\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL\r\n\r\n// Helper function to capitalize first letter\r\nconst capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nconst AdoptionBooking = () => {\r\n    const [availableDates, setAvailableDates] = useState([])\r\n    const [selectedDate, setSelectedDate] = useState(\"\")\r\n    const [availableTimes, setAvailableTimes] = useState([])\r\n    const [selectedTime, setSelectedTime] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        // Fetch available dates from the API\r\n        const fetchAvailableDates = async () => {\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/api/available-dates`)\r\n                const data = await response.json()\r\n                setAvailableDates(data)\r\n            } catch (error) {\r\n                console.error(\"Error fetching available dates:\", error)\r\n            }\r\n        }\r\n\r\n        fetchAvailableDates()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // Fetch available times for the selected date\r\n        const fetchAvailableTimes = async () => {\r\n            if (selectedDate) {\r\n                try {\r\n                    const response = await fetch(`${API_BASE_URL}/api/available-times?date=${selectedDate}`)\r\n                    const data = await response.json()\r\n                    setAvailableTimes(data)\r\n                } catch (error) {\r\n                    console.error(\"Error fetching available times:\", error)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchAvailableTimes()\r\n    }, [selectedDate])\r\n\r\n    const handleDateChange = (event) => {\r\n        setSelectedDate(event.target.value)\r\n        setSelectedTime(\"\") // Reset selected time when date changes\r\n    }\r\n\r\n    const handleTimeChange = (event) => {\r\n        setSelectedTime(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        // Basic validation\r\n        if (!selectedDate || !selectedTime) {\r\n            alert(\"Please select both a date and a time.\")\r\n            return\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/book-appointment`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ date: selectedDate, time: selectedTime }),\r\n            })\r\n\r\n            if (response.ok) {\r\n                alert(\"Appointment booked successfully!\")\r\n                // Reset form\r\n                setSelectedDate(\"\")\r\n                setSelectedTime(\"\")\r\n            } else {\r\n                alert(\"Failed to book appointment.\")\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error booking appointment:\", error)\r\n            alert(\"An error occurred while booking the appointment.\")\r\n        }\r\n    }\r\n\r\n    // Generate date options for the select element\r\n    const dateOptions = Array.from({ length: 7 }).map((_, index) => {\r\n        const day = addDays(new Date(), index)\r\n        return {\r\n            value: format(day, \"yyyy-MM-dd\"),\r\n            label: format(day, \"dd/MM/yyyy\"),\r\n            dayName: format(day, \"EEEE\", { locale: ro }), // Using Romanian locale for day names\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h1>Book an Adoption Appointment</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"date\">Select Date:</label>\r\n                    <select id=\"date\" value={selectedDate} onChange={handleDateChange}>\r\n                        <option value=\"\">Select a date</option>\r\n                        {dateOptions.map((option, index) => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {index === 0 ? \"Astăzi\" : index === 1 ? \"Mâine\" : capitalizeFirstLetter(option.dayName)} -{\" \"}\r\n                                {option.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"time\">Select Time:</label>\r\n                    <select id=\"time\" value={selectedTime} onChange={handleTimeChange} disabled={!selectedDate}>\r\n                        <option value=\"\">Select a time</option>\r\n                        {availableTimes.map((time) => (\r\n                            <option key={time} value={time}>\r\n                                {time}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <button type=\"submit\">Book Appointment</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdoptionBooking\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}