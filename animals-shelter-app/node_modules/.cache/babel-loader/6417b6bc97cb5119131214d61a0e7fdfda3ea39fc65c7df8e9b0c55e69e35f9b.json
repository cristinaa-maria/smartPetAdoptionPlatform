{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina Aghei\\\\facultate\\\\licenta\\\\parteaPractica\\\\animals-shelter-app\\\\src\\\\components\\\\editor_catalog.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { LogOut, PawPrint, Pencil, Trash, X, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport Button from \"./ui/Button\";\nimport Input from \"./ui/Input\";\nimport Label from \"./ui/Label\";\nimport Textarea from \"./ui/Textarea\";\nimport { RadioGroup, RadioGroupItem } from \"./ui/Radio-group\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/Card\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditorCatalog = () => {\n  _s();\n  const [animals, setAnimals] = useState([]);\n  const [newAnimal, setNewAnimal] = useState({\n    name: \"\",\n    species: \"\",\n    description: \"\",\n    imageUrls: [],\n    // Array of image URLs for preview\n    imageFiles: [],\n    // Array of image files\n    imageBytes: [],\n    // Array of byte arrays\n    userId: \"\"\n  });\n  const [location, setLocation] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [userType, setUserType] = useState(\"individual\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState({}); // Track current image index for each animal\n\n  const API_BASE_URL = \"http://localhost:8083\";\n  useEffect(() => {\n    fetchCurrentUserId();\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      fetchUserAnimals();\n      fetchUserInfo();\n    }\n  }, [userId]);\n\n  // Initialize current image index for each animal\n  useEffect(() => {\n    const initialIndices = {};\n    animals.forEach(animal => {\n      initialIndices[animal.id] = 0;\n    });\n    setCurrentImageIndex(initialIndices);\n  }, [animals]);\n  const fetchCurrentUserId = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/currentUserId`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          window.location.href = \"/login\";\n          return;\n        }\n        throw new Error(\"Failed to fetch user session\");\n      }\n      const userId = await response.text();\n      if (userId) {\n        setUserId(userId);\n        console.log(\"Current user ID:\", userId);\n      } else {\n        throw new Error(\"Invalid user data received\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching user ID:\", err);\n      setError(\"Nu sunteți conectat. Vă rugăm să vă autentificați.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUserInfo = async () => {\n    if (!userId) return;\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        console.error(\"Failed to fetch user info:\", response.status, response.statusText);\n        return;\n      }\n      const userData = await response.json();\n      console.log(\"User data:\", userData);\n\n      // Update state with user data\n      if (userData.contact) setContact(userData.contact);\n      if (userData.type) setUserType(userData.type);\n    } catch (err) {\n      console.error(\"Error fetching user info:\", err);\n    }\n  };\n\n  // Replace the byteArrayToImageUrl function with this new function that can handle both byte arrays and Base64 strings\n  const byteArrayToImageUrl = imageData => {\n    if (!imageData) return null;\n\n    // Check if the data is already a Base64 string (starts with /9j/ for JPEG)\n    if (typeof imageData === \"string\") {\n      // If it's a Base64 string that starts with the actual data (without the data:image prefix)\n      if (imageData.startsWith(\"/9j/\") || imageData.startsWith(\"iVBOR\") || imageData.startsWith(\"R0lGOD\")) {\n        // Add the proper data URL prefix based on the image format\n        let prefix = \"data:image/jpeg;base64,\";\n        if (imageData.startsWith(\"iVBOR\")) {\n          prefix = \"data:image/png;base64,\";\n        } else if (imageData.startsWith(\"R0lGOD\")) {\n          prefix = \"data:image/gif;base64,\";\n        }\n\n        // Return the complete data URL\n        return prefix + imageData;\n      }\n\n      // If it already has the data:image prefix, return as is\n      if (imageData.startsWith(\"data:image/\")) {\n        return imageData;\n      }\n\n      // If it's some other string format, try to parse it\n      try {\n        // Check if it's a stringified array\n        const parsedData = JSON.parse(imageData);\n        if (Array.isArray(parsedData)) {\n          // Convert the array back to Uint8Array\n          const uint8Array = new Uint8Array(parsedData);\n          // Create a blob and URL\n          const blob = new Blob([uint8Array], {\n            type: \"image/jpeg\"\n          });\n          return URL.createObjectURL(blob);\n        }\n      } catch (e) {\n        console.error(\"Failed to parse image data:\", e);\n      }\n\n      // If all else fails, try to use it as is\n      return imageData;\n    }\n\n    // Handle byte array (original functionality)\n    if (Array.isArray(imageData) && imageData.length) {\n      // Convert the array to Uint8Array\n      const uint8Array = new Uint8Array(imageData);\n\n      // Try to detect image type from the first few bytes\n      let imageType = \"image/jpeg\"; // Default type\n\n      // Simple magic number detection for common image formats\n      if (uint8Array.length > 2) {\n        // Check for PNG signature\n        if (uint8Array[0] === 0x89 && uint8Array[1] === 0x50 && uint8Array[2] === 0x4e) {\n          imageType = \"image/png\";\n        }\n        // Check for GIF signature\n        else if (uint8Array[0] === 0x47 && uint8Array[1] === 0x49 && uint8Array[2] === 0x46) {\n          imageType = \"image/gif\";\n        }\n        // JPEG starts with FF D8\n        else if (uint8Array[0] === 0xff && uint8Array[1] === 0xd8) {\n          imageType = \"image/jpeg\";\n        }\n      }\n\n      // Create a blob from the byte array with detected type\n      const blob = new Blob([uint8Array], {\n        type: imageType\n      });\n\n      // Create a URL for the blob\n      return URL.createObjectURL(blob);\n    }\n    return null;\n  };\n\n  // Update the fetchUserAnimals function to handle both Base64 strings and byte arrays\n  const fetchUserAnimals = async () => {\n    if (!userId) return;\n    try {\n      setLoading(true);\n      console.log(\"Fetching animals for user:\", userId);\n      const response = await fetch(`${API_BASE_URL}/animalCatalog?userId=${userId}`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch animals: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log(\"Fetched animals:\", data);\n\n      // Process the animals to convert any image data to imageUrl\n      const processedAnimals = data.map(animal => {\n        // Initialize an array for multiple images\n        const imageUrls = [];\n\n        // Process main image if it exists\n        if (animal.image) {\n          console.log(`Processing main image for animal ${animal.id}, type:`, typeof animal.image);\n          const imageUrl = byteArrayToImageUrl(animal.image);\n          if (imageUrl) imageUrls.push(imageUrl);\n        } else if (animal.imageBytes && animal.imageBytes.length) {\n          const imageUrl = byteArrayToImageUrl(animal.imageBytes);\n          if (imageUrl) imageUrls.push(imageUrl);\n        }\n\n        // Process additional images if they exist\n        if (animal.additionalImages && Array.isArray(animal.additionalImages)) {\n          animal.additionalImages.forEach((img, index) => {\n            console.log(`Processing additional image ${index} for animal ${animal.id}`);\n            const imageUrl = byteArrayToImageUrl(img);\n            if (imageUrl) imageUrls.push(imageUrl);\n          });\n        }\n        return {\n          ...animal,\n          imageUrls: imageUrls.length > 0 ? imageUrls : []\n        };\n      });\n      setAnimals(processedAnimals);\n    } catch (err) {\n      console.error(\"Error fetching animals:\", err);\n      setError(\"Failed to load animals. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Convert file to byte array\n  const fileToByteArray = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = () => {\n        const arrayBuffer = reader.result;\n        const bytes = new Uint8Array(arrayBuffer);\n        resolve(Array.from(bytes));\n      };\n      reader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n  const handleImageUpload = async e => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    try {\n      setLoading(true);\n\n      // Process each file\n      const imageUrls = [...newAnimal.imageUrls];\n      const imageFiles = [...newAnimal.imageFiles];\n      const imageBytes = [...newAnimal.imageBytes];\n      for (const file of files) {\n        // Create URL for preview\n        const imageUrl = URL.createObjectURL(file);\n        imageUrls.push(imageUrl);\n\n        // Add file to files array\n        imageFiles.push(file);\n\n        // Convert file to byte array\n        const byteArray = await fileToByteArray(file);\n        imageBytes.push(byteArray);\n        console.log(`Image ${imageFiles.length} converted to byte array, length:`, byteArray.length);\n      }\n      setNewAnimal({\n        ...newAnimal,\n        imageUrls,\n        imageFiles,\n        imageBytes\n      });\n      console.log(`Added ${files.length} images, total: ${imageUrls.length}`);\n    } catch (error) {\n      console.error(\"Error converting images to byte arrays:\", error);\n      setError(\"Nu s-au putut procesa imaginile. Vă rugăm să încercați din nou.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeImage = index => {\n    const imageUrls = [...newAnimal.imageUrls];\n    const imageFiles = [...newAnimal.imageFiles];\n    const imageBytes = [...newAnimal.imageBytes];\n\n    // Remove the image at the specified index\n    imageUrls.splice(index, 1);\n    imageFiles.splice(index, 1);\n    imageBytes.splice(index, 1);\n    setNewAnimal({\n      ...newAnimal,\n      imageUrls,\n      imageFiles,\n      imageBytes\n    });\n  };\n\n  // Navigate through images for an animal\n  const navigateImage = (animalId, direction) => {\n    setCurrentImageIndex(prev => {\n      const animal = animals.find(a => a.id === animalId);\n      if (!animal || !animal.imageUrls || animal.imageUrls.length <= 1) return prev;\n      const currentIndex = prev[animalId] || 0;\n      const totalImages = animal.imageUrls.length;\n      let newIndex;\n      if (direction === \"next\") {\n        newIndex = (currentIndex + 1) % totalImages;\n      } else {\n        newIndex = (currentIndex - 1 + totalImages) % totalImages;\n      }\n      return {\n        ...prev,\n        [animalId]: newIndex\n      };\n    });\n  };\n\n  // Modify the addAnimal function to handle multiple images\n  const addAnimal = async e => {\n    e.preventDefault();\n    if (!userId) {\n      setError(\"Vă rugăm să vă autentificați pentru a adăuga un anunț.\");\n      return;\n    }\n    if (!newAnimal.name || !newAnimal.species) {\n      setError(\"Numele și specia animalului sunt obligatorii.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccessMessage(null);\n      const currentId = userId;\n      if (!currentId) {\n        throw new Error(\"User ID is not available\");\n      }\n      const animalDTO = {\n        name: newAnimal.name,\n        species: newAnimal.species,\n        description: newAnimal.description,\n        image: newAnimal.imageBytes.length > 0 ? newAnimal.imageBytes[0] : null,\n        // Primary image\n        additionalImages: newAnimal.imageBytes.length > 1 ? newAnimal.imageBytes.slice(1) : [],\n        // Additional images\n        userId: currentId\n      };\n      console.log(\"Creating animal with data:\", {\n        ...animalDTO,\n        image: animalDTO.image ? `[Byte array with ${animalDTO.image.length} bytes]` : null,\n        additionalImages: `[${animalDTO.additionalImages.length} additional images]`\n      });\n      const animalResponse = await fetch(`${API_BASE_URL}/createAnimal`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(animalDTO),\n        credentials: \"include\"\n      });\n      const animalResponseText = await animalResponse.text();\n      console.log(\"Animal creation response:\", animalResponseText);\n      if (!animalResponse.ok) {\n        console.error(\"Failed to create animal:\", animalResponseText);\n        throw new Error(\"Failed to create animal\");\n      }\n      console.log(\"Animal created successfully\");\n      let hasErrors = false;\n      const errorMessages = [];\n      if (location) {\n        try {\n          console.log(\"Updating location with:\", location);\n          const locationResponse = await fetch(`${API_BASE_URL}/${currentId}/update-location`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              location: location\n            }),\n            credentials: \"include\"\n          });\n          const responseText = await locationResponse.text();\n          console.log(\"Location update response:\", responseText);\n          if (!locationResponse.ok) {\n            console.error(\"Location update failed:\", responseText);\n            hasErrors = true;\n            errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost salvat\");\n          }\n        } catch (err) {\n          console.error(\"Location update error:\", err);\n          hasErrors = true;\n          errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost salvat\");\n        }\n      }\n      if (userType || contact) {\n        try {\n          const updateData = {};\n          if (userType) updateData.type = userType;\n          if (contact) updateData.contact = contact;\n          console.log(\"Updating user info with:\", updateData);\n          const userInfoResponse = await fetch(`${API_BASE_URL}/update-info`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(updateData),\n            credentials: \"include\"\n          });\n          const responseText = await userInfoResponse.text();\n          console.log(\"User info update response:\", responseText);\n          if (!userInfoResponse.ok) {\n            console.error(\"User info update failed:\", responseText);\n            hasErrors = true;\n            errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost salvat\");\n          }\n        } catch (err) {\n          console.error(\"User info update error:\", err);\n          hasErrors = true;\n          errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost salvat\");\n        }\n      }\n\n      // Fetch the updated animals list which will include the newly created animal with image\n      await fetchUserAnimals();\n\n      // Reset form\n      setNewAnimal({\n        name: \"\",\n        species: \"\",\n        description: \"\",\n        imageUrls: [],\n        imageFiles: [],\n        imageBytes: [],\n        userId: \"\"\n      });\n      setLocation(\"\");\n      setIsEditing(false);\n      setEditingId(null);\n      if (hasErrors) {\n        setError(`Animalul a fost salvat, dar unele actualizări au eșuat: ${errorMessages.join(\", \")}`);\n      } else {\n        setSuccessMessage(\"Animalul a fost adăugat cu succes!\");\n        setError(null);\n      }\n    } catch (err) {\n      console.error(\"Error adding animal:\", err);\n      setError(\"Nu s-a putut salva animalul. Vă rugăm să încercați din nou.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateAnimal = async e => {\n    e.preventDefault();\n    if (!userId || !editingId) {\n      setError(\"Nu se poate actualiza animalul.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccessMessage(null);\n      const currentId = userId;\n      if (!currentId) {\n        throw new Error(\"User ID is not available\");\n      }\n      const animalFields = {\n        name: newAnimal.name,\n        species: newAnimal.species,\n        description: newAnimal.description,\n        image: newAnimal.imageBytes.length > 0 ? newAnimal.imageBytes[0] : undefined,\n        additionalImages: newAnimal.imageBytes.length > 1 ? newAnimal.imageBytes.slice(1) : [],\n        userId: currentId\n      };\n      const updateData = Object.fromEntries(Object.entries(animalFields).filter(([_, value]) => value !== undefined && value !== null && value !== \"\"));\n      let hasErrors = false;\n      const errorMessages = [];\n      if (Object.keys(updateData).length > 0) {\n        console.log(\"Updating animal with data:\", {\n          ...updateData,\n          image: updateData.image ? `[Byte array with ${updateData.image.length} bytes]` : undefined,\n          additionalImages: updateData.additionalImages ? `[${updateData.additionalImages.length} additional images]` : []\n        });\n        const animalResponse = await fetch(`${API_BASE_URL}/updateFullAnimal/${editingId}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(updateData),\n          credentials: \"include\"\n        });\n        const responseText = await animalResponse.text();\n        console.log(\"Animal update response:\", responseText);\n        if (!animalResponse.ok) {\n          console.error(\"Failed to update animal:\", responseText);\n          throw new Error(\"Failed to update animal\");\n        }\n      }\n      if (location) {\n        try {\n          console.log(\"Updating location with:\", location);\n          const locationResponse = await fetch(`${API_BASE_URL}/${currentId}/update-location`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              location: location\n            }),\n            credentials: \"include\"\n          });\n          const responseText = await locationResponse.text();\n          console.log(\"Location update response:\", responseText);\n          if (!locationResponse.ok) {\n            console.error(\"Location update failed:\", responseText);\n            hasErrors = true;\n            errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost actualizat\");\n          }\n        } catch (err) {\n          console.error(\"Location update error:\", err);\n          hasErrors = true;\n          errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost actualizat\");\n        }\n      }\n\n      // Step 3: Update user type and contact\n      if (userType || contact) {\n        try {\n          const userUpdateData = {};\n          if (userType) userUpdateData.type = userType;\n          if (contact) userUpdateData.contact = contact;\n          console.log(\"Updating user info with:\", userUpdateData);\n          const userInfoResponse = await fetch(`${API_BASE_URL}/update-info`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userUpdateData),\n            credentials: \"include\"\n          });\n          const responseText = await userInfoResponse.text();\n          console.log(\"User info update response:\", responseText);\n          if (!userInfoResponse.ok) {\n            console.error(\"User info update failed:\", responseText);\n            hasErrors = true;\n            errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost actualizat\");\n          }\n        } catch (err) {\n          console.error(\"User info update error:\", err);\n          hasErrors = true;\n          errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost actualizat\");\n        }\n      }\n\n      // Step 4: Refresh the animals list\n      await fetchUserAnimals();\n\n      // Reset form\n      setNewAnimal({\n        name: \"\",\n        species: \"\",\n        description: \"\",\n        imageUrls: [],\n        imageFiles: [],\n        imageBytes: [],\n        userId: \"\"\n      });\n      setLocation(\"\");\n      setIsEditing(false);\n      setEditingId(null);\n\n      // Show warning if there were partial failures, but don't treat it as a complete error\n      if (hasErrors) {\n        setError(`Animalul a fost actualizat, dar unele actualizări au eșuat: ${errorMessages.join(\", \")}`);\n      } else {\n        // Show success message\n        setSuccessMessage(\"Animalul a fost actualizat cu succes!\");\n        setError(null); // Clear any previous errors\n      }\n    } catch (err) {\n      console.error(\"Error updating animal:\", err);\n      setError(\"Nu s-a putut actualiza animalul. Vă rugăm să încercați din nou.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteAnimal = async id => {\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccessMessage(null);\n      console.log(\"Deleting animal with ID:\", id);\n      const response = await fetch(`${API_BASE_URL}/deleteAnimal/${id}`, {\n        method: \"DELETE\",\n        credentials: \"include\"\n      });\n      const responseText = await response.text();\n      console.log(\"Delete response:\", responseText);\n      if (!response.ok) {\n        console.error(\"Failed to delete animal:\", responseText);\n        throw new Error(\"Failed to delete animal\");\n      }\n      await fetchUserAnimals();\n      setSuccessMessage(\"Animalul a fost șters cu succes!\");\n    } catch (err) {\n      console.error(\"Error deleting animal:\", err);\n      setError(\"Nu s-a putut șterge animalul. Vă rugăm să încercați din nou.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEdit = async animal => {\n    // Convert existing images to the new format\n    const imageUrls = animal.imageUrls || [];\n    setNewAnimal({\n      name: animal.name,\n      species: animal.species,\n      description: animal.description,\n      imageUrls: imageUrls,\n      imageFiles: [],\n      imageBytes: [],\n      // We'll only use new images for updates\n      userId: animal.userId\n    });\n    setLocation(animal.place || \"\");\n    setContact(animal.contact || \"\");\n    setUserType(animal.type || \"individual\");\n    setIsEditing(true);\n    setEditingId(animal.id);\n    setError(null);\n    setSuccessMessage(null);\n  };\n  const handleCancel = () => {\n    setNewAnimal({\n      name: \"\",\n      species: \"\",\n      description: \"\",\n      imageUrls: [],\n      imageFiles: [],\n      imageBytes: [],\n      userId: \"\"\n    });\n    setLocation(\"\");\n    setContact(\"\");\n    setIsEditing(false);\n    setEditingId(null);\n    setError(null);\n    setSuccessMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex h-16 items-center justify-between px-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/home\",\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PawPrint, {\n            className: \"h-6 w-6 text-green-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl font-bold\",\n            children: \"PetPal Adoptions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"flex gap-6 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-sm font-medium hover:text-green-600 transition-colors\",\n            href: \"/home\",\n            children: \"Acas\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-sm font-medium hover:text-green-600 transition-colors\",\n            href: \"/adoption\",\n            children: \"Adopt\\u0103 acum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-sm font-medium hover:text-green-600 transition-colors\",\n            href: \"/editor_catalog\",\n            children: \"Adaug\\u0103 anun\\u021B adop\\u021Bie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-sm font-medium hover:text-green-600 transition-colors\",\n            href: \"/info\",\n            children: \"\\xCEntreab\\u0103PetPal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-sm font-medium hover:text-green-600 transition-colors\",\n            href: \"/community\",\n            children: \"Al\\u0103tur\\u0103-te comunit\\u0103\\u021Bii\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex items-center gap-1 text-sm font-medium text-red-600 hover:text-red-700 transition-colors ml-2\",\n            onClick: () => {\n              console.log(\"Logging out\");\n              window.location.href = \"/login\";\n            },\n            children: [/*#__PURE__*/_jsxDEV(LogOut, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 29\n            }, this), \"Deconectare\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto px-4 py-8 max-w-3xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6 text-center\",\n        children: \"Adaug\\u0103 anun\\u021B nou\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n        children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"float-right font-bold\",\n          onClick: () => setError(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 21\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\",\n        children: [successMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"float-right font-bold\",\n          onClick: () => setSuccessMessage(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-8 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: isEditing ? \"Editează Anunț\" : \"Detalii Anunț\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: isEditing ? updateAnimal : addAnimal,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"userType\",\n                children: \"Tip Utilizator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: userType,\n                onValueChange: setUserType,\n                className: \"flex flex-col space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(RadioGroupItem, {\n                    value: \"individual\",\n                    id: \"individual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"individual\",\n                    children: \"Individual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(RadioGroupItem, {\n                    value: \"shelter\",\n                    id: \"shelter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 801,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"shelter\",\n                    children: \"Ad\\u0103post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 802,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                children: \"Nume Animal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"name\",\n                value: newAnimal.name,\n                onChange: e => setNewAnimal({\n                  ...newAnimal,\n                  name: e.target.value\n                }),\n                placeholder: \"Introduce\\u021Bi numele animalului\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"species\",\n                children: \"Specie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"species\",\n                value: newAnimal.species,\n                onChange: e => setNewAnimal({\n                  ...newAnimal,\n                  species: e.target.value\n                }),\n                placeholder: \"Introduce\\u021Bi specia\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"description\",\n                children: \"Descriere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                id: \"description\",\n                value: newAnimal.description,\n                onChange: e => setNewAnimal({\n                  ...newAnimal,\n                  description: e.target.value\n                }),\n                placeholder: \"Introduce\\u021Bi descrierea\",\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"location\",\n                children: \"Loca\\u021Bie (Adres\\u0103)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"location\",\n                value: location,\n                onChange: e => setLocation(e.target.value),\n                placeholder: \"Introduce\\u021Bi loca\\u021Bia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"contact\",\n                children: \"Informa\\u021Bii de Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"contact\",\n                value: contact,\n                onChange: e => setContact(e.target.value),\n                placeholder: \"Telefon sau email pentru contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"imageUpload\",\n                children: \"Imagini (pute\\u021Bi selecta mai multe)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"imageUpload\",\n                accept: \"image/*\",\n                onChange: handleImageUpload,\n                className: \"block w-full text-sm border border-gray-300 rounded-lg p-2\",\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 33\n              }, this), newAnimal.imageBytes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 text-sm text-green-600\",\n                children: [newAnimal.imageBytes.length, \" imagini \\xEEnc\\u0103rcate\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 37\n              }, this), newAnimal.imageUrls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 grid grid-cols-3 gap-2\",\n                children: newAnimal.imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: url || \"/placeholder.svg\",\n                    alt: `Preview ${index + 1}`,\n                    className: \"w-full h-24 object-cover rounded-lg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 875,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => removeImage(index),\n                    className: \"absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 w-6 h-6 flex items-center justify-center\",\n                    children: /*#__PURE__*/_jsxDEV(X, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 885,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"px-6 py-3 text-lg\",\n                disabled: loading || !userId,\n                children: loading ? \"Se procesează...\" : isEditing ? \"Salvează Modificările\" : \"Adaugă Animal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 33\n              }, this), isEditing && /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"px-6 py-3 text-lg ml-4 bg-gray-500 hover:bg-gray-600\",\n                onClick: handleCancel,\n                children: \"Anuleaz\\u0103\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Animalele tale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          children: \"Se \\xEEncarc\\u0103...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 33\n        }, this), animals.length === 0 && !loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-500\",\n          children: \"Nu ai ad\\u0103ugat \\xEEnc\\u0103 niciun animal.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: animals.map(animal => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full h-48 bg-gray-100\",\n              children: animal.imageUrls && animal.imageUrls.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: animal.imageUrls[currentImageIndex[animal.id] || 0],\n                  alt: animal.name,\n                  className: \"w-full h-48 object-cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 49\n                }, this), animal.imageUrls.length > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => navigateImage(animal.id, \"prev\"),\n                    className: \"absolute left-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-1\",\n                    children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                      className: \"h-5 w-5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => navigateImage(animal.id, \"next\"),\n                    className: \"absolute right-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-1\",\n                    children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                      className: \"h-5 w-5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 943,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 939,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute bottom-2 right-2 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded-full\",\n                    children: [(currentImageIndex[animal.id] || 0) + 1, \"/\", animal.imageUrls.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 947,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full flex items-center justify-center text-gray-400\",\n                children: \"F\\u0103r\\u0103 imagine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              className: \"p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-bold\",\n                children: animal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: animal.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2\",\n                children: animal.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 41\n              }, this), animal.place && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Loca\\u021Bie:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 49\n                }, this), \" \", animal.place]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 45\n              }, this), animal.contact && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Contact:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 49\n                }, this), \" \", animal.contact]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 45\n              }, this), animal.location && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Coordonate:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 49\n                }, this), \" \", animal.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 45\n              }, this), animal.type && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Tip:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 49\n                }, this), \" \", animal.type === \"individual\" ? \"Individual\" : \"Adăpost\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-end mt-4 space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleEdit(animal),\n                  className: \"p-2 bg-blue-500 hover:bg-blue-600\",\n                  children: [/*#__PURE__*/_jsxDEV(Pencil, {\n                    className: \"h-4 w-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 983,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sr-only\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 984,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => deleteAnimal(animal.id),\n                  className: \"p-2 bg-red-500 hover:bg-red-600\",\n                  disabled: loading,\n                  children: [/*#__PURE__*/_jsxDEV(Trash, {\n                    className: \"h-4 w-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 991,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sr-only\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 992,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 986,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 37\n            }, this)]\n          }, animal.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 730,\n    columnNumber: 9\n  }, this);\n};\n_s(EditorCatalog, \"r3F61ISOwtt+9pQZgOdBaQMJrSE=\");\n_c = EditorCatalog;\nexport default EditorCatalog;\nvar _c;\n$RefreshReg$(_c, \"EditorCatalog\");","map":{"version":3,"names":["useState","useEffect","LogOut","PawPrint","Pencil","Trash","X","ChevronLeft","ChevronRight","Button","Input","Label","Textarea","RadioGroup","RadioGroupItem","Card","CardContent","CardHeader","CardTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","EditorCatalog","_s","animals","setAnimals","newAnimal","setNewAnimal","name","species","description","imageUrls","imageFiles","imageBytes","userId","location","setLocation","contact","setContact","userType","setUserType","isEditing","setIsEditing","editingId","setEditingId","loading","setLoading","error","setError","setUserId","successMessage","setSuccessMessage","currentImageIndex","setCurrentImageIndex","API_BASE_URL","fetchCurrentUserId","fetchUserAnimals","fetchUserInfo","initialIndices","forEach","animal","id","response","fetch","method","credentials","headers","ok","status","window","href","Error","text","console","log","err","statusText","userData","json","type","byteArrayToImageUrl","imageData","startsWith","prefix","parsedData","JSON","parse","Array","isArray","uint8Array","Uint8Array","blob","Blob","URL","createObjectURL","e","length","imageType","Authorization","localStorage","getItem","data","processedAnimals","map","image","imageUrl","push","additionalImages","img","index","fileToByteArray","file","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","arrayBuffer","result","bytes","from","onerror","handleImageUpload","files","target","byteArray","removeImage","splice","navigateImage","animalId","direction","prev","find","a","currentIndex","totalImages","newIndex","addAnimal","preventDefault","currentId","animalDTO","slice","animalResponse","body","stringify","animalResponseText","hasErrors","errorMessages","locationResponse","responseText","updateData","userInfoResponse","join","updateAnimal","animalFields","undefined","Object","fromEntries","entries","filter","_","value","keys","userUpdateData","deleteAnimal","handleEdit","place","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","onValueChange","onChange","placeholder","required","rows","accept","multiple","url","src","alt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Cristina Aghei/facultate/licenta/parteaPractica/animals-shelter-app/src/components/editor_catalog.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { LogOut, PawPrint, Pencil, Trash, X, ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport Button from \"./ui/Button\"\r\nimport Input from \"./ui/Input\"\r\nimport Label from \"./ui/Label\"\r\nimport Textarea from \"./ui/Textarea\"\r\nimport { RadioGroup, RadioGroupItem } from \"./ui/Radio-group\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/Card\"\r\n\r\nconst EditorCatalog = () => {\r\n    const [animals, setAnimals] = useState([])\r\n    const [newAnimal, setNewAnimal] = useState({\r\n        name: \"\",\r\n        species: \"\",\r\n        description: \"\",\r\n        imageUrls: [], // Array of image URLs for preview\r\n        imageFiles: [], // Array of image files\r\n        imageBytes: [], // Array of byte arrays\r\n        userId: \"\",\r\n    })\r\n    const [location, setLocation] = useState(\"\")\r\n    const [contact, setContact] = useState(\"\")\r\n    const [userType, setUserType] = useState(\"individual\")\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [editingId, setEditingId] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [userId, setUserId] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n    const [currentImageIndex, setCurrentImageIndex] = useState({}) // Track current image index for each animal\r\n\r\n    const API_BASE_URL = \"http://localhost:8083\"\r\n\r\n    useEffect(() => {\r\n        fetchCurrentUserId()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetchUserAnimals()\r\n            fetchUserInfo()\r\n        }\r\n    }, [userId])\r\n\r\n    // Initialize current image index for each animal\r\n    useEffect(() => {\r\n        const initialIndices = {}\r\n        animals.forEach((animal) => {\r\n            initialIndices[animal.id] = 0\r\n        })\r\n        setCurrentImageIndex(initialIndices)\r\n    }, [animals])\r\n\r\n    const fetchCurrentUserId = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const response = await fetch(`${API_BASE_URL}/currentUserId`, {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n\r\n            if (!response.ok) {\r\n                if (response.status === 401) {\r\n                    window.location.href = \"/login\"\r\n                    return\r\n                }\r\n                throw new Error(\"Failed to fetch user session\")\r\n            }\r\n\r\n            const userId = await response.text()\r\n            if (userId) {\r\n                setUserId(userId)\r\n                console.log(\"Current user ID:\", userId)\r\n            } else {\r\n                throw new Error(\"Invalid user data received\")\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error fetching user ID:\", err)\r\n            setError(\"Nu sunteți conectat. Vă rugăm să vă autentificați.\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchUserInfo = async () => {\r\n        if (!userId) return\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n            })\r\n\r\n            if (!response.ok) {\r\n                console.error(\"Failed to fetch user info:\", response.status, response.statusText)\r\n                return\r\n            }\r\n\r\n            const userData = await response.json()\r\n            console.log(\"User data:\", userData)\r\n\r\n            // Update state with user data\r\n            if (userData.contact) setContact(userData.contact)\r\n            if (userData.type) setUserType(userData.type)\r\n        } catch (err) {\r\n            console.error(\"Error fetching user info:\", err)\r\n        }\r\n    }\r\n\r\n    // Replace the byteArrayToImageUrl function with this new function that can handle both byte arrays and Base64 strings\r\n    const byteArrayToImageUrl = (imageData) => {\r\n        if (!imageData) return null\r\n\r\n        // Check if the data is already a Base64 string (starts with /9j/ for JPEG)\r\n        if (typeof imageData === \"string\") {\r\n            // If it's a Base64 string that starts with the actual data (without the data:image prefix)\r\n            if (imageData.startsWith(\"/9j/\") || imageData.startsWith(\"iVBOR\") || imageData.startsWith(\"R0lGOD\")) {\r\n                // Add the proper data URL prefix based on the image format\r\n                let prefix = \"data:image/jpeg;base64,\"\r\n                if (imageData.startsWith(\"iVBOR\")) {\r\n                    prefix = \"data:image/png;base64,\"\r\n                } else if (imageData.startsWith(\"R0lGOD\")) {\r\n                    prefix = \"data:image/gif;base64,\"\r\n                }\r\n\r\n                // Return the complete data URL\r\n                return prefix + imageData\r\n            }\r\n\r\n            // If it already has the data:image prefix, return as is\r\n            if (imageData.startsWith(\"data:image/\")) {\r\n                return imageData\r\n            }\r\n\r\n            // If it's some other string format, try to parse it\r\n            try {\r\n                // Check if it's a stringified array\r\n                const parsedData = JSON.parse(imageData)\r\n                if (Array.isArray(parsedData)) {\r\n                    // Convert the array back to Uint8Array\r\n                    const uint8Array = new Uint8Array(parsedData)\r\n                    // Create a blob and URL\r\n                    const blob = new Blob([uint8Array], { type: \"image/jpeg\" })\r\n                    return URL.createObjectURL(blob)\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Failed to parse image data:\", e)\r\n            }\r\n\r\n            // If all else fails, try to use it as is\r\n            return imageData\r\n        }\r\n\r\n        // Handle byte array (original functionality)\r\n        if (Array.isArray(imageData) && imageData.length) {\r\n            // Convert the array to Uint8Array\r\n            const uint8Array = new Uint8Array(imageData)\r\n\r\n            // Try to detect image type from the first few bytes\r\n            let imageType = \"image/jpeg\" // Default type\r\n\r\n            // Simple magic number detection for common image formats\r\n            if (uint8Array.length > 2) {\r\n                // Check for PNG signature\r\n                if (uint8Array[0] === 0x89 && uint8Array[1] === 0x50 && uint8Array[2] === 0x4e) {\r\n                    imageType = \"image/png\"\r\n                }\r\n                // Check for GIF signature\r\n                else if (uint8Array[0] === 0x47 && uint8Array[1] === 0x49 && uint8Array[2] === 0x46) {\r\n                    imageType = \"image/gif\"\r\n                }\r\n                // JPEG starts with FF D8\r\n                else if (uint8Array[0] === 0xff && uint8Array[1] === 0xd8) {\r\n                    imageType = \"image/jpeg\"\r\n                }\r\n            }\r\n\r\n            // Create a blob from the byte array with detected type\r\n            const blob = new Blob([uint8Array], { type: imageType })\r\n\r\n            // Create a URL for the blob\r\n            return URL.createObjectURL(blob)\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    // Update the fetchUserAnimals function to handle both Base64 strings and byte arrays\r\n    const fetchUserAnimals = async () => {\r\n        if (!userId) return\r\n\r\n        try {\r\n            setLoading(true)\r\n            console.log(\"Fetching animals for user:\", userId)\r\n\r\n            const response = await fetch(`${API_BASE_URL}/animalCatalog?userId=${userId}`, {\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch animals: ${response.status} ${response.statusText}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n            console.log(\"Fetched animals:\", data)\r\n\r\n            // Process the animals to convert any image data to imageUrl\r\n            const processedAnimals = data.map((animal) => {\r\n                // Initialize an array for multiple images\r\n                const imageUrls = []\r\n\r\n                // Process main image if it exists\r\n                if (animal.image) {\r\n                    console.log(`Processing main image for animal ${animal.id}, type:`, typeof animal.image)\r\n                    const imageUrl = byteArrayToImageUrl(animal.image)\r\n                    if (imageUrl) imageUrls.push(imageUrl)\r\n                } else if (animal.imageBytes && animal.imageBytes.length) {\r\n                    const imageUrl = byteArrayToImageUrl(animal.imageBytes)\r\n                    if (imageUrl) imageUrls.push(imageUrl)\r\n                }\r\n\r\n                // Process additional images if they exist\r\n                if (animal.additionalImages && Array.isArray(animal.additionalImages)) {\r\n                    animal.additionalImages.forEach((img, index) => {\r\n                        console.log(`Processing additional image ${index} for animal ${animal.id}`)\r\n                        const imageUrl = byteArrayToImageUrl(img)\r\n                        if (imageUrl) imageUrls.push(imageUrl)\r\n                    })\r\n                }\r\n\r\n                return {\r\n                    ...animal,\r\n                    imageUrls: imageUrls.length > 0 ? imageUrls : [],\r\n                }\r\n            })\r\n\r\n            setAnimals(processedAnimals)\r\n        } catch (err) {\r\n            console.error(\"Error fetching animals:\", err)\r\n            setError(\"Failed to load animals. Please try again later.\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // Convert file to byte array\r\n    const fileToByteArray = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsArrayBuffer(file)\r\n            reader.onload = () => {\r\n                const arrayBuffer = reader.result\r\n                const bytes = new Uint8Array(arrayBuffer)\r\n                resolve(Array.from(bytes))\r\n            }\r\n            reader.onerror = (error) => {\r\n                reject(error)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        const files = Array.from(e.target.files)\r\n        if (files.length === 0) return\r\n\r\n        try {\r\n            setLoading(true)\r\n\r\n            // Process each file\r\n            const imageUrls = [...newAnimal.imageUrls]\r\n            const imageFiles = [...newAnimal.imageFiles]\r\n            const imageBytes = [...newAnimal.imageBytes]\r\n\r\n            for (const file of files) {\r\n                // Create URL for preview\r\n                const imageUrl = URL.createObjectURL(file)\r\n                imageUrls.push(imageUrl)\r\n\r\n                // Add file to files array\r\n                imageFiles.push(file)\r\n\r\n                // Convert file to byte array\r\n                const byteArray = await fileToByteArray(file)\r\n                imageBytes.push(byteArray)\r\n\r\n                console.log(`Image ${imageFiles.length} converted to byte array, length:`, byteArray.length)\r\n            }\r\n\r\n            setNewAnimal({\r\n                ...newAnimal,\r\n                imageUrls,\r\n                imageFiles,\r\n                imageBytes,\r\n            })\r\n\r\n            console.log(`Added ${files.length} images, total: ${imageUrls.length}`)\r\n        } catch (error) {\r\n            console.error(\"Error converting images to byte arrays:\", error)\r\n            setError(\"Nu s-au putut procesa imaginile. Vă rugăm să încercați din nou.\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const removeImage = (index) => {\r\n        const imageUrls = [...newAnimal.imageUrls]\r\n        const imageFiles = [...newAnimal.imageFiles]\r\n        const imageBytes = [...newAnimal.imageBytes]\r\n\r\n        // Remove the image at the specified index\r\n        imageUrls.splice(index, 1)\r\n        imageFiles.splice(index, 1)\r\n        imageBytes.splice(index, 1)\r\n\r\n        setNewAnimal({\r\n            ...newAnimal,\r\n            imageUrls,\r\n            imageFiles,\r\n            imageBytes,\r\n        })\r\n    }\r\n\r\n    // Navigate through images for an animal\r\n    const navigateImage = (animalId, direction) => {\r\n        setCurrentImageIndex((prev) => {\r\n            const animal = animals.find((a) => a.id === animalId)\r\n            if (!animal || !animal.imageUrls || animal.imageUrls.length <= 1) return prev\r\n\r\n            const currentIndex = prev[animalId] || 0\r\n            const totalImages = animal.imageUrls.length\r\n\r\n            let newIndex\r\n            if (direction === \"next\") {\r\n                newIndex = (currentIndex + 1) % totalImages\r\n            } else {\r\n                newIndex = (currentIndex - 1 + totalImages) % totalImages\r\n            }\r\n\r\n            return { ...prev, [animalId]: newIndex }\r\n        })\r\n    }\r\n\r\n    // Modify the addAnimal function to handle multiple images\r\n    const addAnimal = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!userId) {\r\n            setError(\"Vă rugăm să vă autentificați pentru a adăuga un anunț.\")\r\n            return\r\n        }\r\n\r\n        if (!newAnimal.name || !newAnimal.species) {\r\n            setError(\"Numele și specia animalului sunt obligatorii.\")\r\n            return\r\n        }\r\n\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            setSuccessMessage(null)\r\n\r\n            const currentId = userId\r\n\r\n            if (!currentId) {\r\n                throw new Error(\"User ID is not available\")\r\n            }\r\n\r\n            const animalDTO = {\r\n                name: newAnimal.name,\r\n                species: newAnimal.species,\r\n                description: newAnimal.description,\r\n                image: newAnimal.imageBytes.length > 0 ? newAnimal.imageBytes[0] : null, // Primary image\r\n                additionalImages: newAnimal.imageBytes.length > 1 ? newAnimal.imageBytes.slice(1) : [], // Additional images\r\n                userId: currentId,\r\n            }\r\n\r\n            console.log(\"Creating animal with data:\", {\r\n                ...animalDTO,\r\n                image: animalDTO.image ? `[Byte array with ${animalDTO.image.length} bytes]` : null,\r\n                additionalImages: `[${animalDTO.additionalImages.length} additional images]`,\r\n            })\r\n\r\n            const animalResponse = await fetch(`${API_BASE_URL}/createAnimal`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(animalDTO),\r\n                credentials: \"include\",\r\n            })\r\n\r\n            const animalResponseText = await animalResponse.text()\r\n            console.log(\"Animal creation response:\", animalResponseText)\r\n\r\n            if (!animalResponse.ok) {\r\n                console.error(\"Failed to create animal:\", animalResponseText)\r\n                throw new Error(\"Failed to create animal\")\r\n            }\r\n\r\n            console.log(\"Animal created successfully\")\r\n\r\n            let hasErrors = false\r\n            const errorMessages = []\r\n\r\n            if (location) {\r\n                try {\r\n                    console.log(\"Updating location with:\", location)\r\n                    const locationResponse = await fetch(`${API_BASE_URL}/${currentId}/update-location`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify({\r\n                            location: location,\r\n                        }),\r\n                        credentials: \"include\",\r\n                    })\r\n\r\n                    const responseText = await locationResponse.text()\r\n                    console.log(\"Location update response:\", responseText)\r\n\r\n                    if (!locationResponse.ok) {\r\n                        console.error(\"Location update failed:\", responseText)\r\n                        hasErrors = true\r\n                        errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost salvat\")\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"Location update error:\", err)\r\n                    hasErrors = true\r\n                    errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost salvat\")\r\n                }\r\n            }\r\n\r\n            if (userType || contact) {\r\n                try {\r\n                    const updateData = {}\r\n                    if (userType) updateData.type = userType\r\n                    if (contact) updateData.contact = contact\r\n\r\n                    console.log(\"Updating user info with:\", updateData)\r\n                    const userInfoResponse = await fetch(`${API_BASE_URL}/update-info`, {\r\n                        method: \"PATCH\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify(updateData),\r\n                        credentials: \"include\",\r\n                    })\r\n\r\n                    const responseText = await userInfoResponse.text()\r\n                    console.log(\"User info update response:\", responseText)\r\n\r\n                    if (!userInfoResponse.ok) {\r\n                        console.error(\"User info update failed:\", responseText)\r\n                        hasErrors = true\r\n                        errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost salvat\")\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"User info update error:\", err)\r\n                    hasErrors = true\r\n                    errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost salvat\")\r\n                }\r\n            }\r\n\r\n            // Fetch the updated animals list which will include the newly created animal with image\r\n            await fetchUserAnimals()\r\n\r\n            // Reset form\r\n            setNewAnimal({\r\n                name: \"\",\r\n                species: \"\",\r\n                description: \"\",\r\n                imageUrls: [],\r\n                imageFiles: [],\r\n                imageBytes: [],\r\n                userId: \"\",\r\n            })\r\n            setLocation(\"\")\r\n            setIsEditing(false)\r\n            setEditingId(null)\r\n\r\n            if (hasErrors) {\r\n                setError(`Animalul a fost salvat, dar unele actualizări au eșuat: ${errorMessages.join(\", \")}`)\r\n            } else {\r\n                setSuccessMessage(\"Animalul a fost adăugat cu succes!\")\r\n                setError(null)\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error adding animal:\", err)\r\n            setError(\"Nu s-a putut salva animalul. Vă rugăm să încercați din nou.\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const updateAnimal = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!userId || !editingId) {\r\n            setError(\"Nu se poate actualiza animalul.\")\r\n            return\r\n        }\r\n\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            setSuccessMessage(null)\r\n\r\n            const currentId = userId\r\n\r\n            if (!currentId) {\r\n                throw new Error(\"User ID is not available\")\r\n            }\r\n\r\n            const animalFields = {\r\n                name: newAnimal.name,\r\n                species: newAnimal.species,\r\n                description: newAnimal.description,\r\n                image: newAnimal.imageBytes.length > 0 ? newAnimal.imageBytes[0] : undefined,\r\n                additionalImages: newAnimal.imageBytes.length > 1 ? newAnimal.imageBytes.slice(1) : [],\r\n                userId: currentId,\r\n            }\r\n\r\n            const updateData = Object.fromEntries(\r\n                Object.entries(animalFields).filter(([_, value]) => value !== undefined && value !== null && value !== \"\"),\r\n            )\r\n\r\n            let hasErrors = false\r\n            const errorMessages = []\r\n\r\n            if (Object.keys(updateData).length > 0) {\r\n                console.log(\"Updating animal with data:\", {\r\n                    ...updateData,\r\n                    image: updateData.image ? `[Byte array with ${updateData.image.length} bytes]` : undefined,\r\n                    additionalImages: updateData.additionalImages\r\n                        ? `[${updateData.additionalImages.length} additional images]`\r\n                        : [],\r\n                })\r\n\r\n                const animalResponse = await fetch(`${API_BASE_URL}/updateFullAnimal/${editingId}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(updateData),\r\n                    credentials: \"include\",\r\n                })\r\n\r\n                const responseText = await animalResponse.text()\r\n                console.log(\"Animal update response:\", responseText)\r\n\r\n                if (!animalResponse.ok) {\r\n                    console.error(\"Failed to update animal:\", responseText)\r\n                    throw new Error(\"Failed to update animal\")\r\n                }\r\n            }\r\n\r\n            if (location) {\r\n                try {\r\n                    console.log(\"Updating location with:\", location)\r\n                    const locationResponse = await fetch(`${API_BASE_URL}/${currentId}/update-location`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify({\r\n                            location: location,\r\n                        }),\r\n                        credentials: \"include\",\r\n                    })\r\n\r\n                    const responseText = await locationResponse.text()\r\n                    console.log(\"Location update response:\", responseText)\r\n\r\n                    if (!locationResponse.ok) {\r\n                        console.error(\"Location update failed:\", responseText)\r\n                        hasErrors = true\r\n                        errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost actualizat\")\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"Location update error:\", err)\r\n                    hasErrors = true\r\n                    errorMessages.push(\"Locația nu a putut fi actualizată, dar animalul a fost actualizat\")\r\n                }\r\n            }\r\n\r\n            // Step 3: Update user type and contact\r\n            if (userType || contact) {\r\n                try {\r\n                    const userUpdateData = {}\r\n                    if (userType) userUpdateData.type = userType\r\n                    if (contact) userUpdateData.contact = contact\r\n\r\n                    console.log(\"Updating user info with:\", userUpdateData)\r\n                    const userInfoResponse = await fetch(`${API_BASE_URL}/update-info`, {\r\n                        method: \"PATCH\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify(userUpdateData),\r\n                        credentials: \"include\",\r\n                    })\r\n\r\n                    const responseText = await userInfoResponse.text()\r\n                    console.log(\"User info update response:\", responseText)\r\n\r\n                    if (!userInfoResponse.ok) {\r\n                        console.error(\"User info update failed:\", responseText)\r\n                        hasErrors = true\r\n                        errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost actualizat\")\r\n                    }\r\n                } catch (err) {\r\n                    console.error(\"User info update error:\", err)\r\n                    hasErrors = true\r\n                    errorMessages.push(\"Informațiile utilizatorului nu au putut fi actualizate, dar animalul a fost actualizat\")\r\n                }\r\n            }\r\n\r\n            // Step 4: Refresh the animals list\r\n            await fetchUserAnimals()\r\n\r\n            // Reset form\r\n            setNewAnimal({\r\n                name: \"\",\r\n                species: \"\",\r\n                description: \"\",\r\n                imageUrls: [],\r\n                imageFiles: [],\r\n                imageBytes: [],\r\n                userId: \"\",\r\n            })\r\n            setLocation(\"\")\r\n            setIsEditing(false)\r\n            setEditingId(null)\r\n\r\n            // Show warning if there were partial failures, but don't treat it as a complete error\r\n            if (hasErrors) {\r\n                setError(`Animalul a fost actualizat, dar unele actualizări au eșuat: ${errorMessages.join(\", \")}`)\r\n            } else {\r\n                // Show success message\r\n                setSuccessMessage(\"Animalul a fost actualizat cu succes!\")\r\n                setError(null) // Clear any previous errors\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error updating animal:\", err)\r\n            setError(\"Nu s-a putut actualiza animalul. Vă rugăm să încercați din nou.\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const deleteAnimal = async (id) => {\r\n        try {\r\n            setLoading(true)\r\n            setError(null)\r\n            setSuccessMessage(null)\r\n\r\n            console.log(\"Deleting animal with ID:\", id)\r\n            const response = await fetch(`${API_BASE_URL}/deleteAnimal/${id}`, {\r\n                method: \"DELETE\",\r\n                credentials: \"include\",\r\n            })\r\n\r\n            const responseText = await response.text()\r\n            console.log(\"Delete response:\", responseText)\r\n\r\n            if (!response.ok) {\r\n                console.error(\"Failed to delete animal:\", responseText)\r\n                throw new Error(\"Failed to delete animal\")\r\n            }\r\n\r\n            await fetchUserAnimals()\r\n            setSuccessMessage(\"Animalul a fost șters cu succes!\")\r\n        } catch (err) {\r\n            console.error(\"Error deleting animal:\", err)\r\n            setError(\"Nu s-a putut șterge animalul. Vă rugăm să încercați din nou.\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleEdit = async (animal) => {\r\n        // Convert existing images to the new format\r\n        const imageUrls = animal.imageUrls || []\r\n\r\n        setNewAnimal({\r\n            name: animal.name,\r\n            species: animal.species,\r\n            description: animal.description,\r\n            imageUrls: imageUrls,\r\n            imageFiles: [],\r\n            imageBytes: [], // We'll only use new images for updates\r\n            userId: animal.userId,\r\n        })\r\n        setLocation(animal.place || \"\")\r\n        setContact(animal.contact || \"\")\r\n        setUserType(animal.type || \"individual\")\r\n        setIsEditing(true)\r\n        setEditingId(animal.id)\r\n        setError(null)\r\n        setSuccessMessage(null)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setNewAnimal({\r\n            name: \"\",\r\n            species: \"\",\r\n            description: \"\",\r\n            imageUrls: [],\r\n            imageFiles: [],\r\n            imageBytes: [],\r\n            userId: \"\",\r\n        })\r\n        setLocation(\"\")\r\n        setContact(\"\")\r\n        setIsEditing(false)\r\n        setEditingId(null)\r\n        setError(null)\r\n        setSuccessMessage(null)\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen\">\r\n            <header className=\"border-b\">\r\n                <div className=\"container flex h-16 items-center justify-between px-4\">\r\n                    <a href=\"/home\" className=\"flex items-center gap-2\">\r\n                        <PawPrint className=\"h-6 w-6 text-green-600\" />\r\n                        <span className=\"text-xl font-bold\">PetPal Adoptions</span>\r\n                    </a>\r\n                    <nav className=\"flex gap-6 items-center\">\r\n                        <a className=\"text-sm font-medium hover:text-green-600 transition-colors\" href=\"/home\">\r\n                            Acasă\r\n                        </a>\r\n                        <a className=\"text-sm font-medium hover:text-green-600 transition-colors\" href=\"/adoption\">\r\n                            Adoptă acum\r\n                        </a>\r\n                        <a className=\"text-sm font-medium hover:text-green-600 transition-colors\" href=\"/editor_catalog\">\r\n                            Adaugă anunț adopție\r\n                        </a>\r\n                        <a className=\"text-sm font-medium hover:text-green-600 transition-colors\" href=\"/info\">\r\n                            ÎntreabăPetPal\r\n                        </a>\r\n                        <a className=\"text-sm font-medium hover:text-green-600 transition-colors\" href=\"/community\">\r\n                            Alătură-te comunității\r\n                        </a>\r\n                        <button\r\n                            className=\"flex items-center gap-1 text-sm font-medium text-red-600 hover:text-red-700 transition-colors ml-2\"\r\n                            onClick={() => {\r\n                                console.log(\"Logging out\")\r\n                                window.location.href = \"/login\"\r\n                            }}\r\n                        >\r\n                            <LogOut className=\"h-4 w-4\" />\r\n                            Deconectare\r\n                        </button>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            <main className=\"container mx-auto px-4 py-8 max-w-3xl\">\r\n                <h1 className=\"text-3xl font-bold mb-6 text-center\">Adaugă anunț nou</h1>\r\n\r\n                {error && (\r\n                    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n                        {error}\r\n                        <button className=\"float-right font-bold\" onClick={() => setError(null)}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {successMessage && (\r\n                    <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\r\n                        {successMessage}\r\n                        <button className=\"float-right font-bold\" onClick={() => setSuccessMessage(null)}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                <Card className=\"mb-8 w-full\">\r\n                    <CardHeader>\r\n                        <CardTitle>{isEditing ? \"Editează Anunț\" : \"Detalii Anunț\"}</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <form onSubmit={isEditing ? updateAnimal : addAnimal} className=\"space-y-4\">\r\n                            <div>\r\n                                <Label htmlFor=\"userType\">Tip Utilizator</Label>\r\n                                <RadioGroup value={userType} onValueChange={setUserType} className=\"flex flex-col space-y-2\">\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <RadioGroupItem value=\"individual\" id=\"individual\" />\r\n                                        <Label htmlFor=\"individual\">Individual</Label>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <RadioGroupItem value=\"shelter\" id=\"shelter\" />\r\n                                        <Label htmlFor=\"shelter\">Adăpost</Label>\r\n                                    </div>\r\n                                </RadioGroup>\r\n                            </div>\r\n                            <div>\r\n                                <Label htmlFor=\"name\">Nume Animal</Label>\r\n                                <Input\r\n                                    id=\"name\"\r\n                                    value={newAnimal.name}\r\n                                    onChange={(e) => setNewAnimal({ ...newAnimal, name: e.target.value })}\r\n                                    placeholder=\"Introduceți numele animalului\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Label htmlFor=\"species\">Specie</Label>\r\n                                <Input\r\n                                    id=\"species\"\r\n                                    value={newAnimal.species}\r\n                                    onChange={(e) => setNewAnimal({ ...newAnimal, species: e.target.value })}\r\n                                    placeholder=\"Introduceți specia\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Label htmlFor=\"description\">Descriere</Label>\r\n                                <Textarea\r\n                                    id=\"description\"\r\n                                    value={newAnimal.description}\r\n                                    onChange={(e) => setNewAnimal({ ...newAnimal, description: e.target.value })}\r\n                                    placeholder=\"Introduceți descrierea\"\r\n                                    rows={3}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Label htmlFor=\"location\">Locație (Adresă)</Label>\r\n                                <Input\r\n                                    id=\"location\"\r\n                                    value={location}\r\n                                    onChange={(e) => setLocation(e.target.value)}\r\n                                    placeholder=\"Introduceți locația\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Label htmlFor=\"contact\">Informații de Contact</Label>\r\n                                <Input\r\n                                    id=\"contact\"\r\n                                    value={contact}\r\n                                    onChange={(e) => setContact(e.target.value)}\r\n                                    placeholder=\"Telefon sau email pentru contact\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Label htmlFor=\"imageUpload\">Imagini (puteți selecta mai multe)</Label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"imageUpload\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleImageUpload}\r\n                                    className=\"block w-full text-sm border border-gray-300 rounded-lg p-2\"\r\n                                    multiple\r\n                                />\r\n                                {newAnimal.imageBytes.length > 0 && (\r\n                                    <div className=\"mt-2 text-sm text-green-600\">{newAnimal.imageBytes.length} imagini încărcate</div>\r\n                                )}\r\n\r\n                                {/* Image preview gallery */}\r\n                                {newAnimal.imageUrls.length > 0 && (\r\n                                    <div className=\"mt-4 grid grid-cols-3 gap-2\">\r\n                                        {newAnimal.imageUrls.map((url, index) => (\r\n                                            <div key={index} className=\"relative\">\r\n                                                <img\r\n                                                    src={url || \"/placeholder.svg\"}\r\n                                                    alt={`Preview ${index + 1}`}\r\n                                                    className=\"w-full h-24 object-cover rounded-lg\"\r\n                                                />\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => removeImage(index)}\r\n                                                    className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 w-6 h-6 flex items-center justify-center\"\r\n                                                >\r\n                                                    <X className=\"h-4 w-4\" />\r\n                                                </button>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"flex justify-center\">\r\n                                <Button type=\"submit\" className=\"px-6 py-3 text-lg\" disabled={loading || !userId}>\r\n                                    {loading ? \"Se procesează...\" : isEditing ? \"Salvează Modificările\" : \"Adaugă Animal\"}\r\n                                </Button>\r\n                                {isEditing && (\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        className=\"px-6 py-3 text-lg ml-4 bg-gray-500 hover:bg-gray-600\"\r\n                                        onClick={handleCancel}\r\n                                    >\r\n                                        Anulează\r\n                                    </Button>\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"mt-8\">\r\n                    <h2 className=\"text-2xl font-bold mb-4\">Animalele tale</h2>\r\n                    {loading && <p className=\"text-center\">Se încarcă...</p>}\r\n\r\n                    {animals.length === 0 && !loading ? (\r\n                        <p className=\"text-center text-gray-500\">Nu ai adăugat încă niciun animal.</p>\r\n                    ) : (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            {animals.map((animal) => (\r\n                                <Card key={animal.id} className=\"overflow-hidden\">\r\n                                    {/* Image carousel */}\r\n                                    <div className=\"relative w-full h-48 bg-gray-100\">\r\n                                        {animal.imageUrls && animal.imageUrls.length > 0 ? (\r\n                                            <>\r\n                                                <img\r\n                                                    src={animal.imageUrls[currentImageIndex[animal.id] || 0]}\r\n                                                    alt={animal.name}\r\n                                                    className=\"w-full h-48 object-cover\"\r\n                                                />\r\n\r\n                                                {/* Image navigation controls */}\r\n                                                {animal.imageUrls.length > 1 && (\r\n                                                    <>\r\n                                                        <button\r\n                                                            onClick={() => navigateImage(animal.id, \"prev\")}\r\n                                                            className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-1\"\r\n                                                        >\r\n                                                            <ChevronLeft className=\"h-5 w-5\" />\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => navigateImage(animal.id, \"next\")}\r\n                                                            className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-1\"\r\n                                                        >\r\n                                                            <ChevronRight className=\"h-5 w-5\" />\r\n                                                        </button>\r\n\r\n                                                        {/* Image counter */}\r\n                                                        <div className=\"absolute bottom-2 right-2 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded-full\">\r\n                                                            {(currentImageIndex[animal.id] || 0) + 1}/{animal.imageUrls.length}\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                            </>\r\n                                        ) : (\r\n                                            <div className=\"w-full h-full flex items-center justify-center text-gray-400\">Fără imagine</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <CardContent className=\"p-4\">\r\n                                        <h3 className=\"text-xl font-bold\">{animal.name}</h3>\r\n                                        <p className=\"text-sm text-gray-500\">{animal.species}</p>\r\n                                        <p className=\"mt-2\">{animal.description}</p>\r\n                                        {animal.place && (\r\n                                            <p className=\"text-sm mt-2\">\r\n                                                <strong>Locație:</strong> {animal.place}\r\n                                            </p>\r\n                                        )}\r\n                                        {animal.contact && (\r\n                                            <p className=\"text-sm mt-2\">\r\n                                                <strong>Contact:</strong> {animal.contact}\r\n                                            </p>\r\n                                        )}\r\n                                        {animal.location && (\r\n                                            <p className=\"text-sm mt-2\">\r\n                                                <strong>Coordonate:</strong> {animal.location}\r\n                                            </p>\r\n                                        )}\r\n                                        {animal.type && (\r\n                                            <p className=\"text-sm mt-2\">\r\n                                                <strong>Tip:</strong> {animal.type === \"individual\" ? \"Individual\" : \"Adăpost\"}\r\n                                            </p>\r\n                                        )}\r\n                                        <div className=\"flex justify-end mt-4 space-x-2\">\r\n                                            <Button onClick={() => handleEdit(animal)} className=\"p-2 bg-blue-500 hover:bg-blue-600\">\r\n                                                <Pencil className=\"h-4 w-4\" />\r\n                                                <span className=\"sr-only\">Edit</span>\r\n                                            </Button>\r\n                                            <Button\r\n                                                onClick={() => deleteAnimal(animal.id)}\r\n                                                className=\"p-2 bg-red-500 hover:bg-red-600\"\r\n                                                disabled={loading}\r\n                                            >\r\n                                                <Trash className=\"h-4 w-4\" />\r\n                                                <span className=\"sr-only\">Delete</span>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditorCatalog\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}