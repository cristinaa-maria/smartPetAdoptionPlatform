{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina Aghei\\\\facultate\\\\licenta\\\\parteaPractica\\\\animals-shelter-app\\\\src\\\\components\\\\find-clinics.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { Search, MapPin, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport Button from \"./ui/Button\";\nimport Input from \"./ui/Input\";\nimport { Card, CardContent } from \"./ui/Card\";\n\n// Fix Leaflet icon issues more thoroughly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\"\n});\n\n// Create clinic icon once and reuse it\nconst clinicIcon = new L.Icon({\n  iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nexport default function FindVetClinics() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchAddress, setSearchAddress] = useState(\"\");\n  const [clinics, setClinics] = useState([]);\n  const [clinicLocations, setClinicLocations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]); // București\n  const [zoomLevel, setZoomLevel] = useState(13);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [selectedClinic, setSelectedClinic] = useState(null);\n  const [searchRadius, setSearchRadius] = useState(5); // Default 5km radius\n  const [searchQuery, setSearchQuery] = useState(\"clinica veterinara\"); // Default search query\n  const mapRef = useRef(null);\n  const API_BASE_URL = \"http://localhost:8083\";\n\n  // Memoize the clinic markers to prevent unnecessary re-renders\n  const clinicMarkers = useMemo(() => {\n    const markers = [];\n    Object.entries(clinicLocations).forEach(([clinicName, location], index) => {\n      if (!location || !location.latitude || !location.longitude) {\n        console.warn(`Skipping marker for \"${clinicName}\" - invalid location:`, location);\n        return;\n      }\n\n      // Validate coordinates\n      const lat = Number(location.latitude);\n      const lng = Number(location.longitude);\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        console.warn(`Invalid coordinates for \"${clinicName}\":`, {\n          lat,\n          lng\n        });\n        return;\n      }\n      markers.push({\n        key: `${clinicName}-${index}`,\n        // Stable key\n        position: [lat, lng],\n        clinicName,\n        location\n      });\n    });\n    console.log(`Generated ${markers.length} valid markers`);\n    return markers;\n  }, [clinicLocations]);\n\n  // Convert radius in kilometers to lat/lng degrees (approximate)\n  const radiusToLatLngDegrees = radiusKm => {\n    // Rough conversion: 1 degree ≈ 111 km\n    return radiusKm / 111;\n  };\n\n  // Calculate bounding box from center point and radius\n  const calculateBoundingBox = (centerLat, centerLng, radiusKm) => {\n    const radiusDegrees = radiusToLatLngDegrees(radiusKm);\n    return {\n      latMin: centerLat - radiusDegrees,\n      latMax: centerLat + radiusDegrees,\n      lonMin: centerLng - radiusDegrees,\n      lonMax: centerLng + radiusDegrees\n    };\n  };\n\n  // Enhanced function to geocode clinic names with better error handling\n  const geocodeClinicNames = async clinicNames => {\n    const locations = {};\n    console.log(\"Starting geocoding for clinics:\", clinicNames);\n    for (const name of clinicNames) {\n      try {\n        console.log(`Geocoding clinic: \"${name}\"`);\n\n        // Strategy 1: Search for the exact clinic name\n        let response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=5`);\n        let data = await response.json();\n\n        // Strategy 2: If no results, try with \"veterinar\" appended\n        if (!data || data.length === 0) {\n          response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=5`);\n          data = await response.json();\n        }\n\n        // Strategy 3: If still no results, try searching just the address part\n        if (!data || data.length === 0) {\n          const addressParts = name.match(/(Strada|Șoseaua|Bulevardul|Calea|Piața)\\s+[^,]+/gi);\n          if (addressParts && addressParts.length > 0) {\n            const addressQuery = addressParts[0] + \", București, România\";\n            response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(addressQuery)}&countrycodes=ro&limit=5`);\n            data = await response.json();\n          }\n        }\n        if (data && data.length > 0) {\n          const result = data[0];\n          const lat = Number.parseFloat(result.lat);\n          const lng = Number.parseFloat(result.lon);\n\n          // Validate coordinates before storing\n          if (!isNaN(lat) && !isNaN(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\n            locations[name] = {\n              latitude: lat,\n              longitude: lng,\n              address: result.display_name\n            };\n            console.log(`Successfully geocoded \"${name}\":`, locations[name]);\n          } else {\n            console.warn(`Invalid coordinates returned for \"${name}\":`, {\n              lat,\n              lng\n            });\n            throw new Error(\"Invalid coordinates\");\n          }\n        } else {\n          throw new Error(\"No geocoding results\");\n        }\n\n        // Add a delay to be respectful to the geocoding service\n        await new Promise(resolve => setTimeout(resolve, 300));\n      } catch (error) {\n        console.error(`Error geocoding clinic \"${name}\":`, error);\n        // Fallback location in Bucharest with validation\n        const randomOffset = () => (Math.random() - 0.5) * 0.02; // ~1km radius\n        const fallbackLat = 44.4268 + randomOffset();\n        const fallbackLng = 26.1025 + randomOffset();\n        locations[name] = {\n          latitude: fallbackLat,\n          longitude: fallbackLng,\n          address: name + \" (locație aproximativă)\"\n        };\n        console.log(`Using fallback location for \"${name}\":`, locations[name]);\n      }\n    }\n    console.log(\"Final geocoded locations:\", locations);\n    return locations;\n  };\n  const fetchNearbyClinics = useCallback(async (lat, lng, radiusKm, query) => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      console.log(`Searching for clinics with radius: ${radiusKm}km at [${lat}, ${lng}] with query: \"${query}\"`);\n\n      // Calculate bounding box\n      const boundingBox = calculateBoundingBox(lat, lng, radiusKm);\n      console.log(\"Calculated bounding box:\", boundingBox);\n      const requestBody = {\n        latMin: boundingBox.latMin,\n        latMax: boundingBox.latMax,\n        lonMin: boundingBox.lonMin,\n        lonMax: boundingBox.lonMax,\n        query: query\n      };\n      const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody),\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        let errorMessage = `Failed to fetch nearby clinics: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          errorMessage = (errorData === null || errorData === void 0 ? void 0 : errorData.message) || (errorData === null || errorData === void 0 ? void 0 : errorData[0]) || errorMessage;\n        } catch (e) {\n          // If response is not JSON, use the default error message\n        }\n        throw new Error(errorMessage);\n      }\n      const clinicNames = await response.json();\n      console.log(\"Received clinic names:\", clinicNames);\n      if (clinicNames && clinicNames.length > 0) {\n        setClinics(clinicNames);\n\n        // Geocode clinic names to get their locations\n        console.log(\"Starting geocoding process...\");\n        const locations = await geocodeClinicNames(clinicNames);\n        setClinicLocations(locations);\n        console.log(`Found ${clinicNames.length} clinics`);\n      } else {\n        console.log(\"No clinics found\");\n        setClinics([]);\n        setClinicLocations({});\n      }\n    } catch (error) {\n      console.error(\"Error fetching nearby clinics:\", error);\n      setError(`A apărut o eroare la căutare: ${error.message || error}.`);\n      setClinics([]);\n      setClinicLocations({});\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE_URL]);\n\n  // Debounced search to prevent too many API calls\n  const debouncedSearch = useCallback((() => {\n    let timeoutId;\n    return (lat, lng, radiusKm, query) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        fetchNearbyClinics(lat, lng, radiusKm, query);\n      }, 500); // 500ms delay\n    };\n  })(), [fetchNearbyClinics]);\n  useEffect(() => {\n    // Use debounced search for automatic updates\n    debouncedSearch(mapCenter[0], mapCenter[1], searchRadius, searchQuery);\n  }, [debouncedSearch, mapCenter, searchRadius, searchQuery]);\n  const searchByAddress = async e => {\n    e.preventDefault();\n    if (!searchAddress.trim()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        const {\n          lat,\n          lon\n        } = data[0];\n        const newLat = Number.parseFloat(lat);\n        const newLng = Number.parseFloat(lon);\n        if (!isNaN(newLat) && !isNaN(newLng)) {\n          setMapCenter([newLat, newLng]);\n          if (mapRef.current) {\n            mapRef.current.setView([newLat, newLng], zoomLevel);\n          }\n          // Use immediate search for manual address search\n          fetchNearbyClinics(newLat, newLng, searchRadius, searchQuery);\n        } else {\n          setError(\"Coordonate invalide pentru adresa specificată\");\n        }\n      } else {\n        setError(\"Adresa nu a putut fi găsită\");\n      }\n    } catch (err) {\n      console.error(\"Error searching address:\", err);\n      setError(\"Eroare la căutarea adresei\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const MapController = () => {\n    _s();\n    const map = useMap();\n    mapRef.current = map;\n    useMapEvents({\n      moveend: () => {\n        const center = map.getCenter();\n        const newCenter = [center.lat, center.lng];\n        const newZoom = map.getZoom();\n\n        // Only update if there's a significant change\n        if (Math.abs(newCenter[0] - mapCenter[0]) > 0.005 || Math.abs(newCenter[1] - mapCenter[1]) > 0.005 || newZoom !== zoomLevel) {\n          setMapCenter(newCenter);\n          setZoomLevel(newZoom);\n        }\n      },\n      click: () => {\n        setSelectedClinic(null);\n      }\n    });\n    return null;\n  };\n  _s(MapController, \"tmcOhplWkk/SgX5HNxHxB5dt97g=\", false, function () {\n    return [useMap, useMapEvents];\n  });\n  const centerMapOnClinic = clinicName => {\n    const location = clinicLocations[clinicName];\n    if (!location || !location.latitude || !location.longitude) return;\n    const lat = Number(location.latitude);\n    const lng = Number(location.longitude);\n    if (!isNaN(lat) && !isNaN(lng)) {\n      if (mapRef.current) {\n        mapRef.current.setView([lat, lng], 15);\n      }\n      setSelectedClinic(clinicName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b bg-white z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex h-16 items-center justify-between px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\",\n            onClick: () => setSidebarOpen(!sidebarOpen),\n            children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl font-bold\",\n            children: \"G\\u0103se\\u0219te Clinici Veterinare \\xEEn apropiere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"} bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: searchByAddress,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Caut\\u0103 o adres\\u0103...\",\n              value: searchAddress,\n              onChange: e => setSearchAddress(e.target.value),\n              className: \"flex-grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: loading,\n              className: \"px-3\",\n              children: /*#__PURE__*/_jsxDEV(Search, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium whitespace-nowrap\",\n              children: \"Raza:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"range\",\n              min: \"1\",\n              max: \"20\",\n              step: \"1\",\n              value: searchRadius,\n              onChange: e => setSearchRadius(Number(e.target.value)),\n              className: \"flex-grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600 whitespace-nowrap\",\n              children: [searchRadius, \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium whitespace-nowrap\",\n              children: \"C\\u0103utare:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"clinica veterinara\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value),\n              className: \"flex-grow text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold\",\n                children: [\"Rezultate (\", clinics.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 33\n              }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Se \\xEEncarc\\u0103...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 33\n            }, this), !loading && clinics.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                className: \"h-12 w-12 mx-auto text-gray-400 mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"Nu s-au g\\u0103sit clinici veterinare \\xEEn aceast\\u0103 zon\\u0103.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-sm mt-2\",\n                children: \"\\xCEncerca\\u021Bi s\\u0103 m\\u0103ri\\u021Bi raza de c\\u0103utare sau s\\u0103 schimba\\u021Bi termenul de c\\u0103utare.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: clinics.map((clinicName, index) => {\n                var _clinicLocations$clin, _clinicLocations$clin2;\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  className: `overflow-hidden cursor-pointer hover:shadow-md transition-shadow ${selectedClinic === clinicName ? \"border-blue-500 border-2\" : \"\"}`,\n                  onClick: () => centerMapOnClinic(clinicName),\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    className: \"p-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-start\",\n                      children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                        className: \"h-5 w-5 mr-2 mt-0.5 text-blue-500 flex-shrink-0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"font-bold text-lg\",\n                          children: clinicName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 53\n                        }, this), clinicLocations[clinicName] && clinicLocations[clinicName].address && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-600 text-sm mt-1\",\n                          children: clinicLocations[clinicName].address\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 441,\n                          columnNumber: 57\n                        }, this), clinicLocations[clinicName] && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-500 mt-1\",\n                          children: [\"Lat: \", (_clinicLocations$clin = clinicLocations[clinicName].latitude) === null || _clinicLocations$clin === void 0 ? void 0 : _clinicLocations$clin.toFixed(4), \", Lng:\", \" \", (_clinicLocations$clin2 = clinicLocations[clinicName].longitude) === null || _clinicLocations$clin2 === void 0 ? void 0 : _clinicLocations$clin2.toFixed(4)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 444,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 41\n                  }, this)\n                }, `clinic-${index}-${clinicName}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-t text-xs text-gray-500 text-center\",\n          children: [\"Raza de c\\u0103utare: \", searchRadius, \" km | Query: \\\"\", searchQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow relative\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoomLevel,\n          className: \"h-full w-full\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MapController, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this), clinicMarkers.map(marker => {\n            var _marker$location$lati, _marker$location$long;\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: marker.position,\n              icon: clinicIcon,\n              eventHandlers: {\n                click: () => setSelectedClinic(marker.clinicName)\n              },\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center max-w-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-xl font-semibold mb-2\",\n                    children: marker.clinicName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 41\n                  }, this), marker.location.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 mb-1\",\n                    children: marker.location.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 69\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [(_marker$location$lati = marker.location.latitude) === null || _marker$location$lati === void 0 ? void 0 : _marker$location$lati.toFixed(4), \", \", (_marker$location$long = marker.location.longitude) === null || _marker$location$long === void 0 ? void 0 : _marker$location$long.toFixed(4)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 33\n              }, this)\n            }, marker.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this);\n          })]\n        }, \"map-container\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\",\n          onClick: () => setSidebarOpen(!sidebarOpen),\n          children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 9\n  }, this);\n}\n_s2(FindVetClinics, \"58QbVpY4JZ+bmHXuTNO6ND53YLY=\");\n_c = FindVetClinics;\nvar _c;\n$RefreshReg$(_c, \"FindVetClinics\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","useMemo","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","Search","MapPin","ChevronLeft","ChevronRight","Button","Input","Card","CardContent","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","clinicIcon","iconSize","iconAnchor","popupAnchor","shadowSize","FindVetClinics","_s2","_s","$RefreshSig$","searchAddress","setSearchAddress","clinics","setClinics","clinicLocations","setClinicLocations","loading","setLoading","error","setError","mapCenter","setMapCenter","zoomLevel","setZoomLevel","sidebarOpen","setSidebarOpen","selectedClinic","setSelectedClinic","searchRadius","setSearchRadius","searchQuery","setSearchQuery","mapRef","API_BASE_URL","clinicMarkers","markers","Object","entries","forEach","clinicName","location","index","latitude","longitude","console","warn","lat","Number","lng","isNaN","push","key","position","log","length","radiusToLatLngDegrees","radiusKm","calculateBoundingBox","centerLat","centerLng","radiusDegrees","latMin","latMax","lonMin","lonMax","geocodeClinicNames","clinicNames","locations","name","response","fetch","encodeURIComponent","data","json","addressParts","match","addressQuery","result","parseFloat","lon","address","display_name","Error","Promise","resolve","setTimeout","randomOffset","Math","random","fallbackLat","fallbackLng","fetchNearbyClinics","query","boundingBox","requestBody","method","headers","body","JSON","stringify","credentials","ok","errorMessage","status","errorData","message","e","debouncedSearch","timeoutId","clearTimeout","searchByAddress","preventDefault","trim","newLat","newLng","current","setView","err","MapController","map","moveend","center","getCenter","newCenter","newZoom","getZoom","abs","click","centerMapOnClinic","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","min","max","step","_clinicLocations$clin","_clinicLocations$clin2","toFixed","zoom","url","attribution","marker","_marker$location$lati","_marker$location$long","icon","eventHandlers","_c","$RefreshReg$"],"sources":["C:/Users/Cristina Aghei/facultate/licenta/parteaPractica/animals-shelter-app/src/components/find-clinics.js"],"sourcesContent":["import { useState, useEffect, useCallback, useRef, useMemo } from \"react\"\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\"\r\nimport \"leaflet/dist/leaflet.css\"\r\nimport L from \"leaflet\"\r\nimport { Search, MapPin, ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport Button from \"./ui/Button\"\r\nimport Input from \"./ui/Input\"\r\nimport { Card, CardContent } from \"./ui/Card\"\r\n\r\n// Fix Leaflet icon issues more thoroughly\r\ndelete L.Icon.Default.prototype._getIconUrl\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\r\n    iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n})\r\n\r\n// Create clinic icon once and reuse it\r\nconst clinicIcon = new L.Icon({\r\n    iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41],\r\n})\r\n\r\nexport default function FindVetClinics() {\r\n    const [searchAddress, setSearchAddress] = useState(\"\")\r\n    const [clinics, setClinics] = useState([])\r\n    const [clinicLocations, setClinicLocations] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]) // București\r\n    const [zoomLevel, setZoomLevel] = useState(13)\r\n    const [sidebarOpen, setSidebarOpen] = useState(true)\r\n    const [selectedClinic, setSelectedClinic] = useState(null)\r\n    const [searchRadius, setSearchRadius] = useState(5) // Default 5km radius\r\n    const [searchQuery, setSearchQuery] = useState(\"clinica veterinara\") // Default search query\r\n    const mapRef = useRef(null)\r\n    const API_BASE_URL = \"http://localhost:8083\"\r\n\r\n    // Memoize the clinic markers to prevent unnecessary re-renders\r\n    const clinicMarkers = useMemo(() => {\r\n        const markers = []\r\n\r\n        Object.entries(clinicLocations).forEach(([clinicName, location], index) => {\r\n            if (!location || !location.latitude || !location.longitude) {\r\n                console.warn(`Skipping marker for \"${clinicName}\" - invalid location:`, location)\r\n                return\r\n            }\r\n\r\n            // Validate coordinates\r\n            const lat = Number(location.latitude)\r\n            const lng = Number(location.longitude)\r\n\r\n            if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\r\n                console.warn(`Invalid coordinates for \"${clinicName}\":`, { lat, lng })\r\n                return\r\n            }\r\n\r\n            markers.push({\r\n                key: `${clinicName}-${index}`, // Stable key\r\n                position: [lat, lng],\r\n                clinicName,\r\n                location,\r\n            })\r\n        })\r\n\r\n        console.log(`Generated ${markers.length} valid markers`)\r\n        return markers\r\n    }, [clinicLocations])\r\n\r\n    // Convert radius in kilometers to lat/lng degrees (approximate)\r\n    const radiusToLatLngDegrees = (radiusKm) => {\r\n        // Rough conversion: 1 degree ≈ 111 km\r\n        return radiusKm / 111\r\n    }\r\n\r\n    // Calculate bounding box from center point and radius\r\n    const calculateBoundingBox = (centerLat, centerLng, radiusKm) => {\r\n        const radiusDegrees = radiusToLatLngDegrees(radiusKm)\r\n\r\n        return {\r\n            latMin: centerLat - radiusDegrees,\r\n            latMax: centerLat + radiusDegrees,\r\n            lonMin: centerLng - radiusDegrees,\r\n            lonMax: centerLng + radiusDegrees,\r\n        }\r\n    }\r\n\r\n\r\n    // Enhanced function to geocode clinic names with better error handling\r\n    const geocodeClinicNames = async (clinicNames) => {\r\n        const locations = {}\r\n        console.log(\"Starting geocoding for clinics:\", clinicNames)\r\n\r\n        for (const name of clinicNames) {\r\n            try {\r\n                console.log(`Geocoding clinic: \"${name}\"`)\r\n\r\n                // Strategy 1: Search for the exact clinic name\r\n                let response = await fetch(\r\n                    `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=5`,\r\n                )\r\n                let data = await response.json()\r\n\r\n                // Strategy 2: If no results, try with \"veterinar\" appended\r\n                if (!data || data.length === 0) {\r\n                    response = await fetch(\r\n                        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=5`,\r\n                    )\r\n                    data = await response.json()\r\n                }\r\n\r\n                // Strategy 3: If still no results, try searching just the address part\r\n                if (!data || data.length === 0) {\r\n                    const addressParts = name.match(/(Strada|Șoseaua|Bulevardul|Calea|Piața)\\s+[^,]+/gi)\r\n                    if (addressParts && addressParts.length > 0) {\r\n                        const addressQuery = addressParts[0] + \", București, România\"\r\n                        response = await fetch(\r\n                            `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(addressQuery)}&countrycodes=ro&limit=5`,\r\n                        )\r\n                        data = await response.json()\r\n                    }\r\n                }\r\n\r\n                if (data && data.length > 0) {\r\n                    const result = data[0]\r\n                    const lat = Number.parseFloat(result.lat)\r\n                    const lng = Number.parseFloat(result.lon)\r\n\r\n                    // Validate coordinates before storing\r\n                    if (!isNaN(lat) && !isNaN(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\r\n                        locations[name] = {\r\n                            latitude: lat,\r\n                            longitude: lng,\r\n                            address: result.display_name,\r\n                        }\r\n                        console.log(`Successfully geocoded \"${name}\":`, locations[name])\r\n                    } else {\r\n                        console.warn(`Invalid coordinates returned for \"${name}\":`, { lat, lng })\r\n                        throw new Error(\"Invalid coordinates\")\r\n                    }\r\n                } else {\r\n                    throw new Error(\"No geocoding results\")\r\n                }\r\n\r\n                // Add a delay to be respectful to the geocoding service\r\n                await new Promise((resolve) => setTimeout(resolve, 300))\r\n            } catch (error) {\r\n                console.error(`Error geocoding clinic \"${name}\":`, error)\r\n                // Fallback location in Bucharest with validation\r\n                const randomOffset = () => (Math.random() - 0.5) * 0.02 // ~1km radius\r\n                const fallbackLat = 44.4268 + randomOffset()\r\n                const fallbackLng = 26.1025 + randomOffset()\r\n\r\n                locations[name] = {\r\n                    latitude: fallbackLat,\r\n                    longitude: fallbackLng,\r\n                    address: name + \" (locație aproximativă)\",\r\n                }\r\n                console.log(`Using fallback location for \"${name}\":`, locations[name])\r\n            }\r\n        }\r\n\r\n        console.log(\"Final geocoded locations:\", locations)\r\n        return locations\r\n    }\r\n\r\n    const fetchNearbyClinics = useCallback(\r\n        async (lat, lng, radiusKm, query) => {\r\n            setLoading(true)\r\n            setError(\"\")\r\n\r\n            try {\r\n                console.log(`Searching for clinics with radius: ${radiusKm}km at [${lat}, ${lng}] with query: \"${query}\"`)\r\n\r\n                // Calculate bounding box\r\n                const boundingBox = calculateBoundingBox(lat, lng, radiusKm)\r\n                console.log(\"Calculated bounding box:\", boundingBox)\r\n\r\n                const requestBody = {\r\n                    latMin: boundingBox.latMin,\r\n                    latMax: boundingBox.latMax,\r\n                    lonMin: boundingBox.lonMin,\r\n                    lonMax: boundingBox.lonMax,\r\n                    query: query,\r\n                }\r\n\r\n                const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(requestBody),\r\n                    credentials: \"include\",\r\n                })\r\n\r\n                if (!response.ok) {\r\n                    let errorMessage = `Failed to fetch nearby clinics: ${response.status}`\r\n                    try {\r\n                        const errorData = await response.json()\r\n                        errorMessage = errorData?.message || errorData?.[0] || errorMessage\r\n                    } catch (e) {\r\n                        // If response is not JSON, use the default error message\r\n                    }\r\n                    throw new Error(errorMessage)\r\n                }\r\n\r\n                const clinicNames = await response.json()\r\n                console.log(\"Received clinic names:\", clinicNames)\r\n\r\n                if (clinicNames && clinicNames.length > 0) {\r\n                    setClinics(clinicNames)\r\n\r\n                    // Geocode clinic names to get their locations\r\n                    console.log(\"Starting geocoding process...\")\r\n                    const locations = await geocodeClinicNames(clinicNames)\r\n                    setClinicLocations(locations)\r\n\r\n                    console.log(`Found ${clinicNames.length} clinics`)\r\n                } else {\r\n                    console.log(\"No clinics found\")\r\n                    setClinics([])\r\n                    setClinicLocations({})\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching nearby clinics:\", error)\r\n                setError(`A apărut o eroare la căutare: ${error.message || error}.`)\r\n                setClinics([])\r\n                setClinicLocations({})\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        },\r\n        [API_BASE_URL],\r\n    )\r\n\r\n    // Debounced search to prevent too many API calls\r\n    const debouncedSearch = useCallback(\r\n        (() => {\r\n            let timeoutId\r\n            return (lat, lng, radiusKm, query) => {\r\n                clearTimeout(timeoutId)\r\n                timeoutId = setTimeout(() => {\r\n                    fetchNearbyClinics(lat, lng, radiusKm, query)\r\n                }, 500) // 500ms delay\r\n            }\r\n        })(),\r\n        [fetchNearbyClinics],\r\n    )\r\n\r\n    useEffect(() => {\r\n        // Use debounced search for automatic updates\r\n        debouncedSearch(mapCenter[0], mapCenter[1], searchRadius, searchQuery)\r\n    }, [debouncedSearch, mapCenter, searchRadius, searchQuery])\r\n\r\n    const searchByAddress = async (e) => {\r\n        e.preventDefault()\r\n        if (!searchAddress.trim()) return\r\n\r\n        setLoading(true)\r\n        try {\r\n            const response = await fetch(\r\n                `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`,\r\n            )\r\n            const data = await response.json()\r\n\r\n            if (data && data.length > 0) {\r\n                const { lat, lon } = data[0]\r\n                const newLat = Number.parseFloat(lat)\r\n                const newLng = Number.parseFloat(lon)\r\n\r\n                if (!isNaN(newLat) && !isNaN(newLng)) {\r\n                    setMapCenter([newLat, newLng])\r\n                    if (mapRef.current) {\r\n                        mapRef.current.setView([newLat, newLng], zoomLevel)\r\n                    }\r\n                    // Use immediate search for manual address search\r\n                    fetchNearbyClinics(newLat, newLng, searchRadius, searchQuery)\r\n                } else {\r\n                    setError(\"Coordonate invalide pentru adresa specificată\")\r\n                }\r\n            } else {\r\n                setError(\"Adresa nu a putut fi găsită\")\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error searching address:\", err)\r\n            setError(\"Eroare la căutarea adresei\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const MapController = () => {\r\n        const map = useMap()\r\n        mapRef.current = map\r\n\r\n        useMapEvents({\r\n            moveend: () => {\r\n                const center = map.getCenter()\r\n                const newCenter = [center.lat, center.lng]\r\n                const newZoom = map.getZoom()\r\n\r\n                // Only update if there's a significant change\r\n                if (\r\n                    Math.abs(newCenter[0] - mapCenter[0]) > 0.005 ||\r\n                    Math.abs(newCenter[1] - mapCenter[1]) > 0.005 ||\r\n                    newZoom !== zoomLevel\r\n                ) {\r\n                    setMapCenter(newCenter)\r\n                    setZoomLevel(newZoom)\r\n                }\r\n            },\r\n            click: () => {\r\n                setSelectedClinic(null)\r\n            },\r\n        })\r\n\r\n        return null\r\n    }\r\n\r\n    const centerMapOnClinic = (clinicName) => {\r\n        const location = clinicLocations[clinicName]\r\n        if (!location || !location.latitude || !location.longitude) return\r\n\r\n        const lat = Number(location.latitude)\r\n        const lng = Number(location.longitude)\r\n\r\n        if (!isNaN(lat) && !isNaN(lng)) {\r\n            if (mapRef.current) {\r\n                mapRef.current.setView([lat, lng], 15)\r\n            }\r\n            setSelectedClinic(clinicName)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-screen flex flex-col\">\r\n            <header className=\"border-b bg-white z-10\">\r\n                <div className=\"container flex h-16 items-center justify-between px-4\">\r\n                    <div className=\"flex items-center\">\r\n                        <button\r\n                            className=\"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\"\r\n                            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                        >\r\n                            {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                        </button>\r\n                        <h1 className=\"text-xl font-bold\">Găsește Clinici Veterinare în apropiere</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"flex flex-1 overflow-hidden\">\r\n                {/* Sidebar */}\r\n                <div\r\n                    className={`${\r\n                        sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"\r\n                    } bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`}\r\n                >\r\n                    <div className=\"p-4 border-b space-y-3\">\r\n                        {/* Address search */}\r\n                        <form onSubmit={searchByAddress} className=\"flex gap-2\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Caută o adresă...\"\r\n                                value={searchAddress}\r\n                                onChange={(e) => setSearchAddress(e.target.value)}\r\n                                className=\"flex-grow\"\r\n                            />\r\n                            <Button type=\"submit\" disabled={loading} className=\"px-3\">\r\n                                <Search className=\"h-4 w-4\" />\r\n                            </Button>\r\n                        </form>\r\n\r\n                        {/* Search radius control */}\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <label className=\"text-sm font-medium whitespace-nowrap\">Raza:</label>\r\n                            <Input\r\n                                type=\"range\"\r\n                                min=\"1\"\r\n                                max=\"20\"\r\n                                step=\"1\"\r\n                                value={searchRadius}\r\n                                onChange={(e) => setSearchRadius(Number(e.target.value))}\r\n                                className=\"flex-grow\"\r\n                            />\r\n                            <span className=\"text-sm text-gray-600 whitespace-nowrap\">{searchRadius} km</span>\r\n                        </div>\r\n\r\n                        {/* Search query control */}\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <label className=\"text-sm font-medium whitespace-nowrap\">Căutare:</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"clinica veterinara\"\r\n                                value={searchQuery}\r\n                                onChange={(e) => setSearchQuery(e.target.value)}\r\n                                className=\"flex-grow text-sm\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 overflow-y-auto\">\r\n                        <div className=\"p-4\">\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                                <h2 className=\"text-lg font-semibold\">Rezultate ({clinics.length})</h2>\r\n                                {loading && <span className=\"text-sm text-gray-500\">Se încarcă...</span>}\r\n                            </div>\r\n\r\n                            {error && (\r\n                                <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">{error}</div>\r\n                            )}\r\n\r\n                            {!loading && clinics.length === 0 && !error && (\r\n                                <div className=\"text-center py-8\">\r\n                                    <MapPin className=\"h-12 w-12 mx-auto text-gray-400 mb-2\" />\r\n                                    <p className=\"text-gray-500\">Nu s-au găsit clinici veterinare în această zonă.</p>\r\n                                    <p className=\"text-gray-500 text-sm mt-2\">\r\n                                        Încercați să măriți raza de căutare sau să schimbați termenul de căutare.\r\n                                    </p>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"space-y-4\">\r\n                                {clinics.map((clinicName, index) => (\r\n                                    <Card\r\n                                        key={`clinic-${index}-${clinicName}`}\r\n                                        className={`overflow-hidden cursor-pointer hover:shadow-md transition-shadow ${\r\n                                            selectedClinic === clinicName ? \"border-blue-500 border-2\" : \"\"\r\n                                        }`}\r\n                                        onClick={() => centerMapOnClinic(clinicName)}\r\n                                    >\r\n                                        <CardContent className=\"p-4\">\r\n                                            <div className=\"flex items-start\">\r\n                                                <MapPin className=\"h-5 w-5 mr-2 mt-0.5 text-blue-500 flex-shrink-0\" />\r\n                                                <div className=\"flex-1\">\r\n                                                    <h3 className=\"font-bold text-lg\">{clinicName}</h3>\r\n                                                    {clinicLocations[clinicName] && clinicLocations[clinicName].address && (\r\n                                                        <p className=\"text-gray-600 text-sm mt-1\">{clinicLocations[clinicName].address}</p>\r\n                                                    )}\r\n                                                    {clinicLocations[clinicName] && (\r\n                                                        <p className=\"text-xs text-gray-500 mt-1\">\r\n                                                            Lat: {clinicLocations[clinicName].latitude?.toFixed(4)}, Lng:{\" \"}\r\n                                                            {clinicLocations[clinicName].longitude?.toFixed(4)}\r\n                                                        </p>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-3 border-t text-xs text-gray-500 text-center\">\r\n                        Raza de căutare: {searchRadius} km | Query: \"{searchQuery}\"\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Map container */}\r\n                <div className=\"flex-grow relative\">\r\n                    <MapContainer\r\n                        center={mapCenter}\r\n                        zoom={zoomLevel}\r\n                        className=\"h-full w-full\"\r\n                        key=\"map-container\" // Stable key to prevent remounting\r\n                    >\r\n                        <TileLayer\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                        />\r\n                        <MapController />\r\n\r\n                        {/* Render clinic markers using memoized data */}\r\n                        {clinicMarkers.map((marker) => (\r\n                            <Marker\r\n                                key={marker.key}\r\n                                position={marker.position}\r\n                                icon={clinicIcon}\r\n                                eventHandlers={{\r\n                                    click: () => setSelectedClinic(marker.clinicName),\r\n                                }}\r\n                            >\r\n                                <Popup>\r\n                                    <div className=\"text-center max-w-xs\">\r\n                                        <h2 className=\"text-xl font-semibold mb-2\">{marker.clinicName}</h2>\r\n                                        {marker.location.address && <p className=\"text-gray-600 mb-1\">{marker.location.address}</p>}\r\n                                        <p className=\"text-xs text-gray-500\">\r\n                                            {marker.location.latitude?.toFixed(4)}, {marker.location.longitude?.toFixed(4)}\r\n                                        </p>\r\n                                    </div>\r\n                                </Popup>\r\n                            </Marker>\r\n                        ))}\r\n                    </MapContainer>\r\n\r\n                    <button\r\n                        className=\"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\"\r\n                        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                    >\r\n                        {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}