{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina Aghei\\\\facultate\\\\licenta\\\\parteaPractica\\\\animals-shelter-app\\\\src\\\\components\\\\find-clinics.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { Search, MapPin, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport Button from \"./ui/Button\";\nimport Input from \"./ui/Input\";\nimport { Card, CardContent } from \"./ui/Card\";\n\n// Fix Leaflet icon issues\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\"\n});\n\n// Custom icon for vet clinics - using a simple red marker\nconst clinicIcon = new L.Icon({\n  iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nexport default function FindVetClinics() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchAddress, setSearchAddress] = useState(\"\");\n  const [clinics, setClinics] = useState([]);\n  const [clinicLocations, setClinicLocations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]); // București\n  const [zoomLevel, setZoomLevel] = useState(13);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [selectedClinic, setSelectedClinic] = useState(null);\n  const mapRef = useRef(null);\n  const API_BASE_URL = \"http://localhost:8083\";\n  const calculateRadius = zoom => {\n    return Math.max(0.5, 50 / Math.pow(1.5, zoom - 5));\n  };\n\n  // Enhanced function to geocode clinic names with multiple search strategies\n  const geocodeClinicNames = async clinicNames => {\n    const locations = {};\n    console.log(\"Starting geocoding for clinics:\", clinicNames);\n    for (const name of clinicNames) {\n      try {\n        console.log(`Geocoding clinic: \"${name}\"`);\n\n        // Strategy 1: Search for the exact clinic name\n        let response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=5`);\n        let data = await response.json();\n        console.log(`Strategy 1 results for \"${name}\":`, data);\n\n        // Strategy 2: If no results, try with \"veterinar\" appended\n        if (!data || data.length === 0) {\n          console.log(`Strategy 1 failed, trying with \"veterinar\" for \"${name}\"`);\n          response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=5`);\n          data = await response.json();\n          console.log(`Strategy 2 results for \"${name}\":`, data);\n        }\n\n        // Strategy 3: If still no results, try searching just the address part if it contains street info\n        if (!data || data.length === 0) {\n          // Extract address parts from the clinic name (looking for street names, sectors, etc.)\n          const addressParts = name.match(/(Strada|Șoseaua|Bulevardul|Calea|Piața)\\s+[^,]+/gi);\n          if (addressParts && addressParts.length > 0) {\n            const addressQuery = addressParts[0] + \", București, România\";\n            console.log(`Strategy 3: Searching for address \"${addressQuery}\"`);\n            response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(addressQuery)}&countrycodes=ro&limit=5`);\n            data = await response.json();\n            console.log(`Strategy 3 results for \"${name}\":`, data);\n          }\n        }\n\n        // Strategy 4: If still no results, try searching for the sector/area\n        if (!data || data.length === 0) {\n          const sectorMatch = name.match(/Sector\\s+\\d+/i);\n          if (sectorMatch) {\n            const sectorQuery = `${sectorMatch[0]}, București, România`;\n            console.log(`Strategy 4: Searching for sector \"${sectorQuery}\"`);\n            response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(sectorQuery)}&countrycodes=ro&limit=5`);\n            data = await response.json();\n            console.log(`Strategy 4 results for \"${name}\":`, data);\n          }\n        }\n        if (data && data.length > 0) {\n          const result = data[0];\n          locations[name] = {\n            latitude: Number.parseFloat(result.lat),\n            longitude: Number.parseFloat(result.lon),\n            address: result.display_name\n          };\n          console.log(`Successfully geocoded \"${name}\":`, locations[name]);\n        } else {\n          console.warn(`Failed to geocode clinic \"${name}\" with all strategies`);\n          // As a fallback, place it somewhere in Bucharest with a small random offset\n          const randomOffset = () => (Math.random() - 0.5) * 0.02; // ~1km radius\n          locations[name] = {\n            latitude: 44.4268 + randomOffset(),\n            longitude: 26.1025 + randomOffset(),\n            address: name + \" (locație aproximativă)\"\n          };\n          console.log(`Using fallback location for \"${name}\":`, locations[name]);\n        }\n\n        // Add a small delay to be respectful to the geocoding service\n        await new Promise(resolve => setTimeout(resolve, 200));\n      } catch (error) {\n        console.error(`Error geocoding clinic \"${name}\":`, error);\n        // Fallback location in Bucharest\n        const randomOffset = () => (Math.random() - 0.5) * 0.02;\n        locations[name] = {\n          latitude: 44.4268 + randomOffset(),\n          longitude: 26.1025 + randomOffset(),\n          address: name + \" (locație aproximativă)\"\n        };\n      }\n    }\n    console.log(\"Final geocoded locations:\", locations);\n    return locations;\n  };\n  const fetchNearbyClinics = useCallback(async (lat, lng, zoom) => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const radius = calculateRadius(zoom);\n      console.log(`Searching for clinics with radius: ${radius}km at [${lat}, ${lng}]`);\n      const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          latitude: lat,\n          longitude: lng\n        }),\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        const errorMessage = (errorData === null || errorData === void 0 ? void 0 : errorData.message) || `Failed to fetch nearby clinics: ${response.status}`;\n        throw new Error(errorMessage);\n      }\n      const clinicNames = await response.json();\n      console.log(\"Received clinic names:\", clinicNames);\n      if (clinicNames && clinicNames.length > 0) {\n        setClinics(clinicNames);\n\n        // Geocode clinic names to get their locations\n        console.log(\"Starting geocoding process...\");\n        const locations = await geocodeClinicNames(clinicNames);\n        setClinicLocations(locations);\n        console.log(`Found ${clinicNames.length} clinics:`, clinicNames);\n        console.log(\"Final geocoded locations:\", locations);\n      } else {\n        console.log(\"No clinics found\");\n        setClinics([]);\n        setClinicLocations({});\n      }\n    } catch (error) {\n      console.error(\"Error fetching nearby clinics:\", error);\n      setError(`A apărut o eroare la căutare: ${error.message || error}.`);\n      setClinics([]);\n      setClinicLocations({});\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE_URL]);\n  useEffect(() => {\n    // Fetch clinics when component mounts or map center changes\n    fetchNearbyClinics(mapCenter[0], mapCenter[1], zoomLevel);\n  }, [fetchNearbyClinics, mapCenter, zoomLevel]);\n  const searchByAddress = async e => {\n    e.preventDefault();\n    if (!searchAddress.trim()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        const {\n          lat,\n          lon\n        } = data[0];\n        setMapCenter([Number.parseFloat(lat), Number.parseFloat(lon)]);\n        if (mapRef.current) {\n          mapRef.current.setView([Number.parseFloat(lat), Number.parseFloat(lon)], zoomLevel);\n        }\n        fetchNearbyClinics(Number.parseFloat(lat), Number.parseFloat(lon), zoomLevel);\n      } else {\n        setError(\"Adresa nu a putut fi găsită\");\n      }\n    } catch (err) {\n      console.error(\"Error searching address:\", err);\n      setError(\"Eroare la căutarea adresei\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const MapController = () => {\n    _s();\n    const map = useMap();\n    mapRef.current = map;\n    useMapEvents({\n      moveend: () => {\n        const center = map.getCenter();\n        const newCenter = [center.lat, center.lng];\n        const newZoom = map.getZoom();\n        if (Math.abs(newCenter[0] - mapCenter[0]) > 0.01 || Math.abs(newCenter[1] - mapCenter[1]) > 0.01 || newZoom !== zoomLevel) {\n          setMapCenter(newCenter);\n          setZoomLevel(newZoom);\n          fetchNearbyClinics(center.lat, center.lng, newZoom);\n        }\n      },\n      click: () => {\n        setSelectedClinic(null);\n      }\n    });\n    return null;\n  };\n  _s(MapController, \"tmcOhplWkk/SgX5HNxHxB5dt97g=\", false, function () {\n    return [useMap, useMapEvents];\n  });\n  const centerMapOnClinic = clinicName => {\n    const location = clinicLocations[clinicName];\n    if (!location || !location.latitude || !location.longitude) return;\n    if (mapRef.current) {\n      mapRef.current.setView([location.latitude, location.longitude], 15);\n    }\n    setSelectedClinic(clinicName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b bg-white z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex h-16 items-center justify-between px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\",\n            onClick: () => setSidebarOpen(!sidebarOpen),\n            children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl font-bold\",\n            children: \"G\\u0103se\\u0219te Clinici Veterinare \\xEEn apropiere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"} bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: searchByAddress,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Caut\\u0103 o adres\\u0103...\",\n              value: searchAddress,\n              onChange: e => setSearchAddress(e.target.value),\n              className: \"flex-grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: loading,\n              className: \"px-3\",\n              children: /*#__PURE__*/_jsxDEV(Search, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold\",\n                children: [\"Rezultate (\", clinics.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Se \\xEEncarc\\u0103...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this), !loading && clinics.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                className: \"h-12 w-12 mx-auto text-gray-400 mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"Nu s-au g\\u0103sit clinici veterinare \\xEEn aceast\\u0103 zon\\u0103.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-sm mt-2\",\n                children: \"\\xCEncerca\\u021Bi s\\u0103 m\\u0103ri\\u021Bi raza de c\\u0103utare sau s\\u0103 v\\u0103 deplasa\\u021Bi \\xEEn alt\\u0103 zon\\u0103.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: clinics.map((clinicName, index) => {\n                var _clinicLocations$clin, _clinicLocations$clin2;\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  className: `overflow-hidden cursor-pointer hover:shadow-md transition-shadow ${selectedClinic === clinicName ? \"border-blue-500 border-2\" : \"\"}`,\n                  onClick: () => centerMapOnClinic(clinicName),\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    className: \"p-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-start\",\n                      children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                        className: \"h-5 w-5 mr-2 mt-0.5 text-blue-500 flex-shrink-0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"font-bold text-lg\",\n                          children: clinicName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 339,\n                          columnNumber: 53\n                        }, this), clinicLocations[clinicName] && clinicLocations[clinicName].address && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-600 text-sm mt-1\",\n                          children: clinicLocations[clinicName].address\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 341,\n                          columnNumber: 57\n                        }, this), clinicLocations[clinicName] && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-500 mt-1\",\n                          children: [\"Lat: \", (_clinicLocations$clin = clinicLocations[clinicName].latitude) === null || _clinicLocations$clin === void 0 ? void 0 : _clinicLocations$clin.toFixed(4), \", Lng:\", \" \", (_clinicLocations$clin2 = clinicLocations[clinicName].longitude) === null || _clinicLocations$clin2 === void 0 ? void 0 : _clinicLocations$clin2.toFixed(4)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 41\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-t text-xs text-gray-500 text-center\",\n          children: [\"Raza de c\\u0103utare: ~\", calculateRadius(zoomLevel).toFixed(1), \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow relative\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoomLevel,\n          className: \"h-full w-full\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MapController, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this), Object.entries(clinicLocations).map(([clinicName, location], index) => {\n            var _location$latitude, _location$longitude;\n            if (!location || !location.latitude || !location.longitude) {\n              console.warn(`Skipping marker for \"${clinicName}\" - invalid location:`, location);\n              return null;\n            }\n            console.log(`Rendering marker for \"${clinicName}\" at [${location.latitude}, ${location.longitude}]`);\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: [location.latitude, location.longitude],\n              icon: clinicIcon,\n              eventHandlers: {\n                click: () => setSelectedClinic(clinicName)\n              },\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center max-w-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-xl font-semibold mb-2\",\n                    children: clinicName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 45\n                  }, this), location.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 mb-1\",\n                    children: location.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 66\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [(_location$latitude = location.latitude) === null || _location$latitude === void 0 ? void 0 : _location$latitude.toFixed(4), \", \", (_location$longitude = location.longitude) === null || _location$longitude === void 0 ? void 0 : _location$longitude.toFixed(4)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\",\n          onClick: () => setSidebarOpen(!sidebarOpen),\n          children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n}\n_s2(FindVetClinics, \"7BAc9ep2xmXJ9bPNsDjxb2/3akw=\");\n_c = FindVetClinics;\nvar _c;\n$RefreshReg$(_c, \"FindVetClinics\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","Search","MapPin","ChevronLeft","ChevronRight","Button","Input","Card","CardContent","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","clinicIcon","iconSize","iconAnchor","popupAnchor","shadowSize","FindVetClinics","_s2","_s","$RefreshSig$","searchAddress","setSearchAddress","clinics","setClinics","clinicLocations","setClinicLocations","loading","setLoading","error","setError","mapCenter","setMapCenter","zoomLevel","setZoomLevel","sidebarOpen","setSidebarOpen","selectedClinic","setSelectedClinic","mapRef","API_BASE_URL","calculateRadius","zoom","Math","max","pow","geocodeClinicNames","clinicNames","locations","console","log","name","response","fetch","encodeURIComponent","data","json","length","addressParts","match","addressQuery","sectorMatch","sectorQuery","result","latitude","Number","parseFloat","lat","longitude","lon","address","display_name","warn","randomOffset","random","Promise","resolve","setTimeout","fetchNearbyClinics","lng","radius","method","headers","body","JSON","stringify","credentials","ok","errorData","errorMessage","message","status","Error","searchByAddress","e","preventDefault","trim","current","setView","err","MapController","map","moveend","center","getCenter","newCenter","newZoom","getZoom","abs","click","centerMapOnClinic","clinicName","location","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","index","_clinicLocations$clin","_clinicLocations$clin2","toFixed","url","attribution","Object","entries","_location$latitude","_location$longitude","position","icon","eventHandlers","_c","$RefreshReg$"],"sources":["C:/Users/Cristina Aghei/facultate/licenta/parteaPractica/animals-shelter-app/src/components/find-clinics.js"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from \"react\"\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\"\r\nimport \"leaflet/dist/leaflet.css\"\r\nimport L from \"leaflet\"\r\nimport { Search, MapPin, ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport Button from \"./ui/Button\"\r\nimport Input from \"./ui/Input\"\r\nimport { Card, CardContent } from \"./ui/Card\"\r\n\r\n// Fix Leaflet icon issues\r\ndelete L.Icon.Default.prototype._getIconUrl\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\r\n    iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n})\r\n\r\n// Custom icon for vet clinics - using a simple red marker\r\nconst clinicIcon = new L.Icon({\r\n    iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41],\r\n})\r\n\r\nexport default function FindVetClinics() {\r\n    const [searchAddress, setSearchAddress] = useState(\"\")\r\n    const [clinics, setClinics] = useState([])\r\n    const [clinicLocations, setClinicLocations] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]) // București\r\n    const [zoomLevel, setZoomLevel] = useState(13)\r\n    const [sidebarOpen, setSidebarOpen] = useState(true)\r\n    const [selectedClinic, setSelectedClinic] = useState(null)\r\n    const mapRef = useRef(null)\r\n    const API_BASE_URL = \"http://localhost:8083\"\r\n\r\n    const calculateRadius = (zoom) => {\r\n        return Math.max(0.5, 50 / Math.pow(1.5, zoom - 5))\r\n    }\r\n\r\n    // Enhanced function to geocode clinic names with multiple search strategies\r\n    const geocodeClinicNames = async (clinicNames) => {\r\n        const locations = {}\r\n        console.log(\"Starting geocoding for clinics:\", clinicNames)\r\n\r\n        for (const name of clinicNames) {\r\n            try {\r\n                console.log(`Geocoding clinic: \"${name}\"`)\r\n\r\n                // Strategy 1: Search for the exact clinic name\r\n                let response = await fetch(\r\n                    `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=5`,\r\n                )\r\n                let data = await response.json()\r\n                console.log(`Strategy 1 results for \"${name}\":`, data)\r\n\r\n                // Strategy 2: If no results, try with \"veterinar\" appended\r\n                if (!data || data.length === 0) {\r\n                    console.log(`Strategy 1 failed, trying with \"veterinar\" for \"${name}\"`)\r\n                    response = await fetch(\r\n                        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=5`,\r\n                    )\r\n                    data = await response.json()\r\n                    console.log(`Strategy 2 results for \"${name}\":`, data)\r\n                }\r\n\r\n                // Strategy 3: If still no results, try searching just the address part if it contains street info\r\n                if (!data || data.length === 0) {\r\n                    // Extract address parts from the clinic name (looking for street names, sectors, etc.)\r\n                    const addressParts = name.match(/(Strada|Șoseaua|Bulevardul|Calea|Piața)\\s+[^,]+/gi)\r\n                    if (addressParts && addressParts.length > 0) {\r\n                        const addressQuery = addressParts[0] + \", București, România\"\r\n                        console.log(`Strategy 3: Searching for address \"${addressQuery}\"`)\r\n                        response = await fetch(\r\n                            `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(addressQuery)}&countrycodes=ro&limit=5`,\r\n                        )\r\n                        data = await response.json()\r\n                        console.log(`Strategy 3 results for \"${name}\":`, data)\r\n                    }\r\n                }\r\n\r\n                // Strategy 4: If still no results, try searching for the sector/area\r\n                if (!data || data.length === 0) {\r\n                    const sectorMatch = name.match(/Sector\\s+\\d+/i)\r\n                    if (sectorMatch) {\r\n                        const sectorQuery = `${sectorMatch[0]}, București, România`\r\n                        console.log(`Strategy 4: Searching for sector \"${sectorQuery}\"`)\r\n                        response = await fetch(\r\n                            `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(sectorQuery)}&countrycodes=ro&limit=5`,\r\n                        )\r\n                        data = await response.json()\r\n                        console.log(`Strategy 4 results for \"${name}\":`, data)\r\n                    }\r\n                }\r\n\r\n                if (data && data.length > 0) {\r\n                    const result = data[0]\r\n                    locations[name] = {\r\n                        latitude: Number.parseFloat(result.lat),\r\n                        longitude: Number.parseFloat(result.lon),\r\n                        address: result.display_name,\r\n                    }\r\n                    console.log(`Successfully geocoded \"${name}\":`, locations[name])\r\n                } else {\r\n                    console.warn(`Failed to geocode clinic \"${name}\" with all strategies`)\r\n                    // As a fallback, place it somewhere in Bucharest with a small random offset\r\n                    const randomOffset = () => (Math.random() - 0.5) * 0.02 // ~1km radius\r\n                    locations[name] = {\r\n                        latitude: 44.4268 + randomOffset(),\r\n                        longitude: 26.1025 + randomOffset(),\r\n                        address: name + \" (locație aproximativă)\",\r\n                    }\r\n                    console.log(`Using fallback location for \"${name}\":`, locations[name])\r\n                }\r\n\r\n                // Add a small delay to be respectful to the geocoding service\r\n                await new Promise((resolve) => setTimeout(resolve, 200))\r\n            } catch (error) {\r\n                console.error(`Error geocoding clinic \"${name}\":`, error)\r\n                // Fallback location in Bucharest\r\n                const randomOffset = () => (Math.random() - 0.5) * 0.02\r\n                locations[name] = {\r\n                    latitude: 44.4268 + randomOffset(),\r\n                    longitude: 26.1025 + randomOffset(),\r\n                    address: name + \" (locație aproximativă)\",\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"Final geocoded locations:\", locations)\r\n        return locations\r\n    }\r\n\r\n    const fetchNearbyClinics = useCallback(\r\n        async (lat, lng, zoom) => {\r\n            setLoading(true)\r\n            setError(\"\")\r\n\r\n            try {\r\n                const radius = calculateRadius(zoom)\r\n                console.log(`Searching for clinics with radius: ${radius}km at [${lat}, ${lng}]`)\r\n\r\n                const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        latitude: lat,\r\n                        longitude: lng,\r\n                    }),\r\n                    credentials: \"include\",\r\n                })\r\n\r\n                if (!response.ok) {\r\n                    const errorData = await response.json()\r\n                    const errorMessage = errorData?.message || `Failed to fetch nearby clinics: ${response.status}`\r\n                    throw new Error(errorMessage)\r\n                }\r\n\r\n                const clinicNames = await response.json()\r\n                console.log(\"Received clinic names:\", clinicNames)\r\n\r\n                if (clinicNames && clinicNames.length > 0) {\r\n                    setClinics(clinicNames)\r\n\r\n                    // Geocode clinic names to get their locations\r\n                    console.log(\"Starting geocoding process...\")\r\n                    const locations = await geocodeClinicNames(clinicNames)\r\n                    setClinicLocations(locations)\r\n\r\n                    console.log(`Found ${clinicNames.length} clinics:`, clinicNames)\r\n                    console.log(\"Final geocoded locations:\", locations)\r\n                } else {\r\n                    console.log(\"No clinics found\")\r\n                    setClinics([])\r\n                    setClinicLocations({})\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching nearby clinics:\", error)\r\n                setError(`A apărut o eroare la căutare: ${error.message || error}.`)\r\n                setClinics([])\r\n                setClinicLocations({})\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        },\r\n        [API_BASE_URL],\r\n    )\r\n\r\n    useEffect(() => {\r\n        // Fetch clinics when component mounts or map center changes\r\n        fetchNearbyClinics(mapCenter[0], mapCenter[1], zoomLevel)\r\n    }, [fetchNearbyClinics, mapCenter, zoomLevel])\r\n\r\n    const searchByAddress = async (e) => {\r\n        e.preventDefault()\r\n        if (!searchAddress.trim()) return\r\n\r\n        setLoading(true)\r\n        try {\r\n            const response = await fetch(\r\n                `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`,\r\n            )\r\n            const data = await response.json()\r\n\r\n            if (data && data.length > 0) {\r\n                const { lat, lon } = data[0]\r\n                setMapCenter([Number.parseFloat(lat), Number.parseFloat(lon)])\r\n                if (mapRef.current) {\r\n                    mapRef.current.setView([Number.parseFloat(lat), Number.parseFloat(lon)], zoomLevel)\r\n                }\r\n                fetchNearbyClinics(Number.parseFloat(lat), Number.parseFloat(lon), zoomLevel)\r\n            } else {\r\n                setError(\"Adresa nu a putut fi găsită\")\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error searching address:\", err)\r\n            setError(\"Eroare la căutarea adresei\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const MapController = () => {\r\n        const map = useMap()\r\n        mapRef.current = map\r\n\r\n        useMapEvents({\r\n            moveend: () => {\r\n                const center = map.getCenter()\r\n                const newCenter = [center.lat, center.lng]\r\n                const newZoom = map.getZoom()\r\n\r\n                if (\r\n                    Math.abs(newCenter[0] - mapCenter[0]) > 0.01 ||\r\n                    Math.abs(newCenter[1] - mapCenter[1]) > 0.01 ||\r\n                    newZoom !== zoomLevel\r\n                ) {\r\n                    setMapCenter(newCenter)\r\n                    setZoomLevel(newZoom)\r\n                    fetchNearbyClinics(center.lat, center.lng, newZoom)\r\n                }\r\n            },\r\n            click: () => {\r\n                setSelectedClinic(null)\r\n            },\r\n        })\r\n\r\n        return null\r\n    }\r\n\r\n    const centerMapOnClinic = (clinicName) => {\r\n        const location = clinicLocations[clinicName]\r\n        if (!location || !location.latitude || !location.longitude) return\r\n\r\n        if (mapRef.current) {\r\n            mapRef.current.setView([location.latitude, location.longitude], 15)\r\n        }\r\n        setSelectedClinic(clinicName)\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-screen flex flex-col\">\r\n            <header className=\"border-b bg-white z-10\">\r\n                <div className=\"container flex h-16 items-center justify-between px-4\">\r\n                    <div className=\"flex items-center\">\r\n                        <button\r\n                            className=\"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\"\r\n                            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                        >\r\n                            {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                        </button>\r\n                        <h1 className=\"text-xl font-bold\">Găsește Clinici Veterinare în apropiere</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"flex flex-1 overflow-hidden\">\r\n                {/* Sidebar */}\r\n                <div\r\n                    className={`${\r\n                        sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"\r\n                    } bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`}\r\n                >\r\n                    <div className=\"p-4 border-b\">\r\n                        <form onSubmit={searchByAddress} className=\"flex gap-2\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Caută o adresă...\"\r\n                                value={searchAddress}\r\n                                onChange={(e) => setSearchAddress(e.target.value)}\r\n                                className=\"flex-grow\"\r\n                            />\r\n                            <Button type=\"submit\" disabled={loading} className=\"px-3\">\r\n                                <Search className=\"h-4 w-4\" />\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 overflow-y-auto\">\r\n                        <div className=\"p-4\">\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                                <h2 className=\"text-lg font-semibold\">Rezultate ({clinics.length})</h2>\r\n                                {loading && <span className=\"text-sm text-gray-500\">Se încarcă...</span>}\r\n                            </div>\r\n\r\n                            {error && (\r\n                                <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">{error}</div>\r\n                            )}\r\n\r\n                            {!loading && clinics.length === 0 && !error && (\r\n                                <div className=\"text-center py-8\">\r\n                                    <MapPin className=\"h-12 w-12 mx-auto text-gray-400 mb-2\" />\r\n                                    <p className=\"text-gray-500\">Nu s-au găsit clinici veterinare în această zonă.</p>\r\n                                    <p className=\"text-gray-500 text-sm mt-2\">\r\n                                        Încercați să măriți raza de căutare sau să vă deplasați în altă zonă.\r\n                                    </p>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"space-y-4\">\r\n                                {clinics.map((clinicName, index) => (\r\n                                    <Card\r\n                                        key={index}\r\n                                        className={`overflow-hidden cursor-pointer hover:shadow-md transition-shadow ${\r\n                                            selectedClinic === clinicName ? \"border-blue-500 border-2\" : \"\"\r\n                                        }`}\r\n                                        onClick={() => centerMapOnClinic(clinicName)}\r\n                                    >\r\n                                        <CardContent className=\"p-4\">\r\n                                            <div className=\"flex items-start\">\r\n                                                <MapPin className=\"h-5 w-5 mr-2 mt-0.5 text-blue-500 flex-shrink-0\" />\r\n                                                <div className=\"flex-1\">\r\n                                                    <h3 className=\"font-bold text-lg\">{clinicName}</h3>\r\n                                                    {clinicLocations[clinicName] && clinicLocations[clinicName].address && (\r\n                                                        <p className=\"text-gray-600 text-sm mt-1\">{clinicLocations[clinicName].address}</p>\r\n                                                    )}\r\n                                                    {clinicLocations[clinicName] && (\r\n                                                        <p className=\"text-xs text-gray-500 mt-1\">\r\n                                                            Lat: {clinicLocations[clinicName].latitude?.toFixed(4)}, Lng:{\" \"}\r\n                                                            {clinicLocations[clinicName].longitude?.toFixed(4)}\r\n                                                        </p>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-3 border-t text-xs text-gray-500 text-center\">\r\n                        Raza de căutare: ~{calculateRadius(zoomLevel).toFixed(1)} km\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Map container */}\r\n                <div className=\"flex-grow relative\">\r\n                    <MapContainer center={mapCenter} zoom={zoomLevel} className=\"h-full w-full\">\r\n                        <TileLayer\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                        />\r\n                        <MapController />\r\n\r\n                        {/* Clinic markers */}\r\n                        {Object.entries(clinicLocations).map(([clinicName, location], index) => {\r\n                            if (!location || !location.latitude || !location.longitude) {\r\n                                console.warn(`Skipping marker for \"${clinicName}\" - invalid location:`, location)\r\n                                return null\r\n                            }\r\n\r\n                            console.log(`Rendering marker for \"${clinicName}\" at [${location.latitude}, ${location.longitude}]`)\r\n                            return (\r\n                                <Marker\r\n                                    key={index}\r\n                                    position={[location.latitude, location.longitude]}\r\n                                    icon={clinicIcon}\r\n                                    eventHandlers={{\r\n                                        click: () => setSelectedClinic(clinicName),\r\n                                    }}\r\n                                >\r\n                                    <Popup>\r\n                                        <div className=\"text-center max-w-xs\">\r\n                                            <h2 className=\"text-xl font-semibold mb-2\">{clinicName}</h2>\r\n                                            {location.address && <p className=\"text-gray-600 mb-1\">{location.address}</p>}\r\n                                            <p className=\"text-xs text-gray-500\">\r\n                                                {location.latitude?.toFixed(4)}, {location.longitude?.toFixed(4)}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Popup>\r\n                                </Marker>\r\n                            )\r\n                        })}\r\n                    </MapContainer>\r\n\r\n                    <button\r\n                        className=\"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\"\r\n                        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                    >\r\n                        {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}