{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Cristina Aghei\\\\facultate\\\\licenta\\\\parteaPractica\\\\animals-shelter-app\\\\src\\\\components\\\\find-clinics.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { Search, MapPin, ChevronLeft, ChevronRight, Loader2 } from \"lucide-react\";\nimport Button from \"./ui/Button\";\nimport Input from \"./ui/Input\";\nimport { Card, CardContent } from \"./ui/Card\";\n\n// Fix Leaflet icon issues more thoroughly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\n  iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\"\n});\n\n// Create clinic icon once and reuse it\nconst clinicIcon = new L.Icon({\n  iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Create selected clinic icon (different color)\nconst selectedClinicIcon = new L.Icon({\n  iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\",\n  shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n  iconSize: [30, 49],\n  iconAnchor: [15, 49],\n  popupAnchor: [1, -34],\n  shadowSize: [49, 49]\n});\nexport default function FindVetClinics() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [searchAddress, setSearchAddress] = useState(\"\");\n  const [clinics, setClinics] = useState([]);\n  const [clinicLocations, setClinicLocations] = useState({});\n  const [geocodingProgress, setGeocodingProgress] = useState({\n    current: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]); // București\n  const [zoomLevel, setZoomLevel] = useState(13);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [selectedClinic, setSelectedClinic] = useState(null);\n  const mapRef = useRef(null);\n  const API_BASE_URL = \"http://localhost:8083\";\n  const SEARCH_QUERY = \"clinica veterinara\"; // Fixed search query\n\n  // Dynamic radius calculation based on zoom level (same as in ShelterMap)\n  const calculateRadius = zoom => {\n    // Invert the logic: lower zoom = larger radius, higher zoom = smaller radius\n    // This makes sense because when zoomed out, you want to see clinics in a larger area\n    return Math.max(1, 100 / Math.pow(1.2, zoom - 8));\n  };\n\n  // Memoize the clinic markers - only show markers for clinics that have valid locations\n  const clinicMarkers = useMemo(() => {\n    const markers = [];\n\n    // Only create markers for clinics that are in the current search results AND have valid locations\n    clinics.forEach((clinicName, index) => {\n      const location = clinicLocations[clinicName];\n      if (!location || !location.latitude || !location.longitude) {\n        return; // Skip if no location data\n      }\n\n      // Validate coordinates\n      const lat = Number(location.latitude);\n      const lng = Number(location.longitude);\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        console.warn(`Invalid coordinates for \"${clinicName}\":`, {\n          lat,\n          lng\n        });\n        return;\n      }\n      markers.push({\n        key: `${clinicName}-${index}`,\n        // Stable key\n        position: [lat, lng],\n        clinicName,\n        location,\n        isSelected: selectedClinic === clinicName\n      });\n    });\n    console.log(`Generated ${markers.length} valid markers for ${clinics.length} clinics`);\n    return markers;\n  }, [clinics, clinicLocations, selectedClinic]);\n\n  // Convert radius in kilometers to lat/lng degrees (approximate)\n  const radiusToLatLngDegrees = radiusKm => {\n    // Rough conversion: 1 degree ≈ 111 km\n    return radiusKm / 111;\n  };\n\n  // Calculate bounding box from center point and radius\n  const calculateBoundingBox = (centerLat, centerLng, radiusKm) => {\n    const radiusDegrees = radiusToLatLngDegrees(radiusKm);\n    return {\n      latMin: centerLat - radiusDegrees,\n      latMax: centerLat + radiusDegrees,\n      lonMin: centerLng - radiusDegrees,\n      lonMax: centerLng + radiusDegrees\n    };\n  };\n\n  // Enhanced function to geocode clinic names with progress tracking\n  const geocodeClinicNames = async clinicNames => {\n    const locations = {};\n    const total = clinicNames.length;\n    console.log(\"Starting geocoding for clinics:\", clinicNames);\n    setGeocodingProgress({\n      current: 0,\n      total\n    });\n    for (let i = 0; i < clinicNames.length; i++) {\n      const name = clinicNames[i];\n      setGeocodingProgress({\n        current: i + 1,\n        total\n      });\n      try {\n        console.log(`Geocoding clinic ${i + 1}/${total}: \"${name}\"`);\n\n        // Strategy 1: Search for the exact clinic name\n        let response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=5`);\n        let data = await response.json();\n\n        // Strategy 2: If no results, try with \"veterinar\" appended\n        if (!data || data.length === 0) {\n          response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=5`);\n          data = await response.json();\n        }\n\n        // Strategy 3: If still no results, try searching just the address part\n        if (!data || data.length === 0) {\n          const addressParts = name.match(/(Strada|Șoseaua|Bulevardul|Calea|Piața)\\s+[^,]+/gi);\n          if (addressParts && addressParts.length > 0) {\n            const addressQuery = addressParts[0] + \", București, România\";\n            response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(addressQuery)}&countrycodes=ro&limit=5`);\n            data = await response.json();\n          }\n        }\n        if (data && data.length > 0) {\n          const result = data[0];\n          const lat = Number.parseFloat(result.lat);\n          const lng = Number.parseFloat(result.lon);\n\n          // Validate coordinates before storing\n          if (!isNaN(lat) && !isNaN(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\n            locations[name] = {\n              latitude: lat,\n              longitude: lng,\n              address: result.display_name\n            };\n            console.log(`✓ Successfully geocoded \"${name}\"`);\n          } else {\n            console.warn(`Invalid coordinates returned for \"${name}\":`, {\n              lat,\n              lng\n            });\n            throw new Error(\"Invalid coordinates\");\n          }\n        } else {\n          throw new Error(\"No geocoding results\");\n        }\n\n        // Add a delay to be respectful to the geocoding service\n        await new Promise(resolve => setTimeout(resolve, 300));\n      } catch (error) {\n        console.error(`✗ Error geocoding clinic \"${name}\":`, error);\n        // Fallback location in Bucharest with validation\n        const randomOffset = () => (Math.random() - 0.5) * 0.02; // ~1km radius\n        const fallbackLat = 44.4268 + randomOffset();\n        const fallbackLng = 26.1025 + randomOffset();\n        locations[name] = {\n          latitude: fallbackLat,\n          longitude: fallbackLng,\n          address: name + \" (locație aproximativă)\"\n        };\n        console.log(`⚠ Using fallback location for \"${name}\"`);\n      }\n    }\n    setGeocodingProgress({\n      current: 0,\n      total: 0\n    }); // Reset progress\n    console.log(`Geocoding complete: ${Object.keys(locations).length}/${total} locations found`);\n    return locations;\n  };\n  const fetchNearbyClinics = useCallback(async (lat, lng, zoom = zoomLevel) => {\n    setLoading(true);\n    setError(\"\");\n    setSelectedClinic(null); // Clear selection when searching\n\n    try {\n      // Calculate dynamic radius based on current zoom level\n      const searchRadius = calculateRadius(zoom);\n      console.log(`Searching for clinics with radius: ${searchRadius.toFixed(1)}km at [${lat}, ${lng}] with query: \"${SEARCH_QUERY}\"`);\n\n      // Calculate bounding box using dynamic radius\n      const boundingBox = calculateBoundingBox(lat, lng, searchRadius);\n      const requestBody = {\n        latMin: boundingBox.latMin,\n        latMax: boundingBox.latMax,\n        lonMin: boundingBox.lonMin,\n        lonMax: boundingBox.lonMax,\n        query: SEARCH_QUERY\n      };\n      const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody),\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        let errorMessage = `Failed to fetch nearby clinics: ${response.status}`;\n        try {\n          const errorData = await response.json();\n          errorMessage = (errorData === null || errorData === void 0 ? void 0 : errorData.message) || (errorData === null || errorData === void 0 ? void 0 : errorData[0]) || errorMessage;\n        } catch (e) {\n          // If response is not JSON, use the default error message\n        }\n        throw new Error(errorMessage);\n      }\n      const clinicNames = await response.json();\n      console.log(\"Received clinic names:\", clinicNames);\n      if (clinicNames && clinicNames.length > 0) {\n        // First set the clinics (this will clear old markers)\n        setClinics(clinicNames);\n\n        // Then start geocoding (this will add new markers as locations are found)\n        console.log(\"Starting geocoding process...\");\n        const locations = await geocodeClinicNames(clinicNames);\n        setClinicLocations(locations);\n        console.log(`✓ Search complete: ${clinicNames.length} clinics found`);\n      } else {\n        console.log(\"No clinics found\");\n        setClinics([]);\n        setClinicLocations({});\n      }\n    } catch (error) {\n      console.error(\"Error fetching nearby clinics:\", error);\n      setError(`A apărut o eroare la căutare: ${error.message || error}.`);\n      setClinics([]);\n      setClinicLocations({});\n    } finally {\n      setLoading(false);\n    }\n  }, [API_BASE_URL, zoomLevel]);\n\n  // Debounced search to prevent too many API calls\n  const debouncedSearch = useCallback((() => {\n    let timeoutId;\n    return (lat, lng, zoom) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        fetchNearbyClinics(lat, lng, zoom);\n      }, 500); // 500ms delay\n    };\n  })(), [fetchNearbyClinics]);\n  useEffect(() => {\n    // Use debounced search for automatic updates\n    debouncedSearch(mapCenter[0], mapCenter[1], zoomLevel);\n  }, [debouncedSearch, mapCenter, zoomLevel]);\n  const searchByAddress = async e => {\n    e.preventDefault();\n    if (!searchAddress.trim()) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        const {\n          lat,\n          lon\n        } = data[0];\n        const newLat = Number.parseFloat(lat);\n        const newLng = Number.parseFloat(lon);\n        if (!isNaN(newLat) && !isNaN(newLng)) {\n          setMapCenter([newLat, newLng]);\n          if (mapRef.current) {\n            mapRef.current.setView([newLat, newLng], zoomLevel);\n          }\n          // Use immediate search for manual address search\n          fetchNearbyClinics(newLat, newLng, zoomLevel);\n        } else {\n          setError(\"Coordonate invalide pentru adresa specificată\");\n        }\n      } else {\n        setError(\"Adresa nu a putut fi găsită\");\n      }\n    } catch (err) {\n      console.error(\"Error searching address:\", err);\n      setError(\"Eroare la căutarea adresei\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const MapController = () => {\n    _s();\n    const map = useMap();\n    mapRef.current = map;\n    useMapEvents({\n      moveend: () => {\n        const center = map.getCenter();\n        const newCenter = [center.lat, center.lng];\n        const newZoom = map.getZoom();\n\n        // Only update if there's a significant change\n        if (Math.abs(newCenter[0] - mapCenter[0]) > 0.005 || Math.abs(newCenter[1] - mapCenter[1]) > 0.005 || newZoom !== zoomLevel) {\n          setMapCenter(newCenter);\n          setZoomLevel(newZoom);\n        }\n      },\n      click: () => {\n        setSelectedClinic(null);\n      }\n    });\n    return null;\n  };\n  _s(MapController, \"tmcOhplWkk/SgX5HNxHxB5dt97g=\", false, function () {\n    return [useMap, useMapEvents];\n  });\n  const centerMapOnClinic = clinicName => {\n    const location = clinicLocations[clinicName];\n    if (!location || !location.latitude || !location.longitude) return;\n    const lat = Number(location.latitude);\n    const lng = Number(location.longitude);\n    if (!isNaN(lat) && !isNaN(lng)) {\n      if (mapRef.current) {\n        mapRef.current.setView([lat, lng], 15);\n      }\n      setSelectedClinic(clinicName);\n    }\n  };\n  const handleMarkerClick = clinicName => {\n    setSelectedClinic(clinicName);\n    // Scroll to the clinic in the sidebar\n    const clinicElement = document.getElementById(`clinic-card-${clinicName}`);\n    if (clinicElement) {\n      clinicElement.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"border-b bg-white z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container flex h-16 items-center justify-between px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-3 p-2 rounded-full hover:bg-gray-100 transition-colors\",\n            onClick: () => window.history.back(),\n            title: \"\\xCEnapoi\",\n            children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20,\n              className: \"text-gray-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\",\n            onClick: () => setSidebarOpen(!sidebarOpen),\n            children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl font-bold\",\n            children: \"G\\u0103se\\u0219te Clinici Veterinare \\xEEn apropiere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"} bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: searchByAddress,\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Caut\\u0103 o adres\\u0103...\",\n              value: searchAddress,\n              onChange: e => setSearchAddress(e.target.value),\n              className: \"flex-grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: loading,\n              className: \"px-3\",\n              children: /*#__PURE__*/_jsxDEV(Search, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold\",\n                children: [\"Rezultate (\", clinics.length, \")\", clinicMarkers.length !== clinics.length && clinics.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-500 ml-1\",\n                  children: [\"(\", clinicMarkers.length, \" pe hart\\u0103)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 33\n              }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-500\",\n                children: \"Se \\xEEncarc\\u0103...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 29\n            }, this), geocodingProgress.total > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 p-3 bg-blue-50 border border-blue-200 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                  className: \"h-4 w-4 animate-spin text-blue-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-blue-700\",\n                  children: [\"Localizez clinicile: \", geocodingProgress.current, \"/\", geocodingProgress.total]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 w-full bg-blue-200 rounded-full h-2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n                  style: {\n                    width: `${geocodingProgress.current / geocodingProgress.total * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 33\n            }, this), !loading && clinics.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                className: \"h-12 w-12 mx-auto text-gray-400 mb-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"Nu s-au g\\u0103sit clinici veterinare \\xEEn aceast\\u0103 zon\\u0103.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-sm mt-2\",\n                children: \"\\xCEncerca\\u021Bi s\\u0103 c\\u0103uta\\u021Bi o alt\\u0103 adres\\u0103 sau s\\u0103 v\\u0103 deplasa\\u021Bi pe hart\\u0103.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: clinics.map((clinicName, index) => {\n                var _hasLocation$latitude, _hasLocation$longitud;\n                const hasLocation = clinicLocations[clinicName];\n                const isSelected = selectedClinic === clinicName;\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  id: `clinic-card-${clinicName}`,\n                  className: `overflow-hidden cursor-pointer hover:shadow-md transition-all duration-200 ${isSelected ? \"border-blue-500 border-2 bg-blue-50\" : \"\"} ${!hasLocation ? \"opacity-60\" : \"\"}`,\n                  onClick: () => centerMapOnClinic(clinicName),\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    className: \"p-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-start\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center mr-2 mt-0.5\",\n                        children: hasLocation ? /*#__PURE__*/_jsxDEV(MapPin, {\n                          className: `h-5 w-5 flex-shrink-0 ${isSelected ? \"text-blue-600\" : \"text-red-500\"}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 493,\n                          columnNumber: 61\n                        }, this) : /*#__PURE__*/_jsxDEV(Loader2, {\n                          className: \"h-4 w-4 animate-spin text-gray-400 flex-shrink-0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 497,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 491,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: `font-bold text-lg ${isSelected ? \"text-blue-700\" : \"\"}`,\n                          children: clinicName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 501,\n                          columnNumber: 57\n                        }, this), hasLocation && hasLocation.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-600 text-sm mt-1\",\n                          children: hasLocation.address\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 503,\n                          columnNumber: 61\n                        }, this), hasLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-500 mt-1\",\n                          children: [\"Lat: \", (_hasLocation$latitude = hasLocation.latitude) === null || _hasLocation$latitude === void 0 ? void 0 : _hasLocation$latitude.toFixed(4), \", Lng: \", (_hasLocation$longitud = hasLocation.longitude) === null || _hasLocation$longitud === void 0 ? void 0 : _hasLocation$longitud.toFixed(4)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 506,\n                          columnNumber: 61\n                        }, this), !hasLocation && /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-xs text-gray-400 mt-1\",\n                          children: \"Se localizeaz\\u0103...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 510,\n                          columnNumber: 74\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 45\n                  }, this)\n                }, `clinic-${index}-${clinicName}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-t text-xs text-gray-500 text-center\",\n          children: [\"Raza de c\\u0103utare: \", calculateRadius(zoomLevel).toFixed(1), \" km | Pinuri: \", clinicMarkers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow relative\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoomLevel,\n          className: \"h-full w-full\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MapController, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 25\n          }, this), clinicMarkers.map(marker => {\n            var _marker$location$lati, _marker$location$long;\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: marker.position,\n              icon: marker.isSelected ? selectedClinicIcon : clinicIcon,\n              eventHandlers: {\n                click: () => handleMarkerClick(marker.clinicName)\n              },\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center max-w-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"text-xl font-semibold mb-2\",\n                    children: marker.clinicName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 41\n                  }, this), marker.location.address && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600 mb-1\",\n                    children: marker.location.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 69\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-500\",\n                    children: [(_marker$location$lati = marker.location.latitude) === null || _marker$location$lati === void 0 ? void 0 : _marker$location$lati.toFixed(4), \", \", (_marker$location$long = marker.location.longitude) === null || _marker$location$long === void 0 ? void 0 : _marker$location$long.toFixed(4)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 33\n              }, this)\n            }, marker.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this);\n          })]\n        }, \"map-container\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\",\n          onClick: () => setSidebarOpen(!sidebarOpen),\n          children: sidebarOpen ? /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 9\n  }, this);\n}\n_s2(FindVetClinics, \"92FJf+ofTv2m1j4mRn9R4qsWUVI=\");\n_c = FindVetClinics;\nvar _c;\n$RefreshReg$(_c, \"FindVetClinics\");","map":{"version":3,"names":["_jsxFileName","_s2","$RefreshSig$","useState","useEffect","useCallback","useRef","useMemo","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","Search","MapPin","ChevronLeft","ChevronRight","Loader2","Button","Input","Card","CardContent","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","clinicIcon","iconSize","iconAnchor","popupAnchor","shadowSize","selectedClinicIcon","FindVetClinics","_s","searchAddress","setSearchAddress","clinics","setClinics","clinicLocations","setClinicLocations","geocodingProgress","setGeocodingProgress","current","total","loading","setLoading","error","setError","mapCenter","setMapCenter","zoomLevel","setZoomLevel","sidebarOpen","setSidebarOpen","selectedClinic","setSelectedClinic","mapRef","API_BASE_URL","SEARCH_QUERY","calculateRadius","zoom","Math","max","pow","clinicMarkers","markers","forEach","clinicName","index","location","latitude","longitude","lat","Number","lng","isNaN","console","warn","push","key","position","isSelected","log","length","radiusToLatLngDegrees","radiusKm","calculateBoundingBox","centerLat","centerLng","radiusDegrees","latMin","latMax","lonMin","lonMax","geocodeClinicNames","clinicNames","locations","i","name","response","fetch","encodeURIComponent","data","json","addressParts","match","addressQuery","result","parseFloat","lon","address","display_name","Error","Promise","resolve","setTimeout","randomOffset","random","fallbackLat","fallbackLng","Object","keys","fetchNearbyClinics","searchRadius","toFixed","boundingBox","requestBody","query","method","headers","body","JSON","stringify","credentials","ok","errorMessage","status","errorData","message","e","debouncedSearch","timeoutId","clearTimeout","searchByAddress","preventDefault","trim","newLat","newLng","setView","err","MapController","map","moveend","center","getCenter","newCenter","newZoom","getZoom","abs","click","centerMapOnClinic","handleMarkerClick","clinicElement","document","getElementById","scrollIntoView","behavior","block","className","children","onClick","window","history","back","title","size","fileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","style","width","_hasLocation$latitude","_hasLocation$longitud","hasLocation","id","url","attribution","marker","_marker$location$lati","_marker$location$long","icon","eventHandlers","_c","$RefreshReg$"],"sources":["C:/Users/Cristina Aghei/facultate/licenta/parteaPractica/animals-shelter-app/src/components/find-clinics.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect, useCallback, useRef, useMemo } from \"react\"\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from \"react-leaflet\"\r\nimport \"leaflet/dist/leaflet.css\"\r\nimport L from \"leaflet\"\r\nimport { Search, MapPin, ChevronLeft, ChevronRight, Loader2 } from \"lucide-react\"\r\nimport Button from \"./ui/Button\"\r\nimport Input from \"./ui/Input\"\r\nimport { Card, CardContent } from \"./ui/Card\"\r\n\r\n// Fix Leaflet icon issues more thoroughly\r\ndelete L.Icon.Default.prototype._getIconUrl\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png\",\r\n    iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n})\r\n\r\n// Create clinic icon once and reuse it\r\nconst clinicIcon = new L.Icon({\r\n    iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41],\r\n})\r\n\r\n// Create selected clinic icon (different color)\r\nconst selectedClinicIcon = new L.Icon({\r\n    iconUrl: \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\",\r\n    shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\r\n    iconSize: [30, 49],\r\n    iconAnchor: [15, 49],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [49, 49],\r\n})\r\n\r\nexport default function FindVetClinics() {\r\n    const [searchAddress, setSearchAddress] = useState(\"\")\r\n    const [clinics, setClinics] = useState([])\r\n    const [clinicLocations, setClinicLocations] = useState({})\r\n    const [geocodingProgress, setGeocodingProgress] = useState({ current: 0, total: 0 })\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [mapCenter, setMapCenter] = useState([44.4268, 26.1025]) // București\r\n    const [zoomLevel, setZoomLevel] = useState(13)\r\n    const [sidebarOpen, setSidebarOpen] = useState(true)\r\n    const [selectedClinic, setSelectedClinic] = useState(null)\r\n    const mapRef = useRef(null)\r\n    const API_BASE_URL = \"http://localhost:8083\"\r\n\r\n    const SEARCH_QUERY = \"clinica veterinara\" // Fixed search query\r\n\r\n    // Dynamic radius calculation based on zoom level (same as in ShelterMap)\r\n    const calculateRadius = (zoom) => {\r\n        // Invert the logic: lower zoom = larger radius, higher zoom = smaller radius\r\n        // This makes sense because when zoomed out, you want to see clinics in a larger area\r\n        return Math.max(1, 100 / Math.pow(1.2, zoom - 8))\r\n    }\r\n\r\n    // Memoize the clinic markers - only show markers for clinics that have valid locations\r\n    const clinicMarkers = useMemo(() => {\r\n        const markers = []\r\n\r\n        // Only create markers for clinics that are in the current search results AND have valid locations\r\n        clinics.forEach((clinicName, index) => {\r\n            const location = clinicLocations[clinicName]\r\n\r\n            if (!location || !location.latitude || !location.longitude) {\r\n                return // Skip if no location data\r\n            }\r\n\r\n            // Validate coordinates\r\n            const lat = Number(location.latitude)\r\n            const lng = Number(location.longitude)\r\n\r\n            if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\r\n                console.warn(`Invalid coordinates for \"${clinicName}\":`, { lat, lng })\r\n                return\r\n            }\r\n\r\n            markers.push({\r\n                key: `${clinicName}-${index}`, // Stable key\r\n                position: [lat, lng],\r\n                clinicName,\r\n                location,\r\n                isSelected: selectedClinic === clinicName,\r\n            })\r\n        })\r\n\r\n        console.log(`Generated ${markers.length} valid markers for ${clinics.length} clinics`)\r\n        return markers\r\n    }, [clinics, clinicLocations, selectedClinic])\r\n\r\n    // Convert radius in kilometers to lat/lng degrees (approximate)\r\n    const radiusToLatLngDegrees = (radiusKm) => {\r\n        // Rough conversion: 1 degree ≈ 111 km\r\n        return radiusKm / 111\r\n    }\r\n\r\n    // Calculate bounding box from center point and radius\r\n    const calculateBoundingBox = (centerLat, centerLng, radiusKm) => {\r\n        const radiusDegrees = radiusToLatLngDegrees(radiusKm)\r\n\r\n        return {\r\n            latMin: centerLat - radiusDegrees,\r\n            latMax: centerLat + radiusDegrees,\r\n            lonMin: centerLng - radiusDegrees,\r\n            lonMax: centerLng + radiusDegrees,\r\n        }\r\n    }\r\n\r\n    // Enhanced function to geocode clinic names with progress tracking\r\n    const geocodeClinicNames = async (clinicNames) => {\r\n        const locations = {}\r\n        const total = clinicNames.length\r\n\r\n        console.log(\"Starting geocoding for clinics:\", clinicNames)\r\n        setGeocodingProgress({ current: 0, total })\r\n\r\n        for (let i = 0; i < clinicNames.length; i++) {\r\n            const name = clinicNames[i]\r\n            setGeocodingProgress({ current: i + 1, total })\r\n\r\n            try {\r\n                console.log(`Geocoding clinic ${i + 1}/${total}: \"${name}\"`)\r\n\r\n                // Strategy 1: Search for the exact clinic name\r\n                let response = await fetch(\r\n                    `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name)}&countrycodes=ro&limit=5`,\r\n                )\r\n                let data = await response.json()\r\n\r\n                // Strategy 2: If no results, try with \"veterinar\" appended\r\n                if (!data || data.length === 0) {\r\n                    response = await fetch(\r\n                        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(name + \" veterinar\")}&countrycodes=ro&limit=5`,\r\n                    )\r\n                    data = await response.json()\r\n                }\r\n\r\n                // Strategy 3: If still no results, try searching just the address part\r\n                if (!data || data.length === 0) {\r\n                    const addressParts = name.match(/(Strada|Șoseaua|Bulevardul|Calea|Piața)\\s+[^,]+/gi)\r\n                    if (addressParts && addressParts.length > 0) {\r\n                        const addressQuery = addressParts[0] + \", București, România\"\r\n                        response = await fetch(\r\n                            `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(addressQuery)}&countrycodes=ro&limit=5`,\r\n                        )\r\n                        data = await response.json()\r\n                    }\r\n                }\r\n\r\n                if (data && data.length > 0) {\r\n                    const result = data[0]\r\n                    const lat = Number.parseFloat(result.lat)\r\n                    const lng = Number.parseFloat(result.lon)\r\n\r\n                    // Validate coordinates before storing\r\n                    if (!isNaN(lat) && !isNaN(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {\r\n                        locations[name] = {\r\n                            latitude: lat,\r\n                            longitude: lng,\r\n                            address: result.display_name,\r\n                        }\r\n                        console.log(`✓ Successfully geocoded \"${name}\"`)\r\n                    } else {\r\n                        console.warn(`Invalid coordinates returned for \"${name}\":`, { lat, lng })\r\n                        throw new Error(\"Invalid coordinates\")\r\n                    }\r\n                } else {\r\n                    throw new Error(\"No geocoding results\")\r\n                }\r\n\r\n                // Add a delay to be respectful to the geocoding service\r\n                await new Promise((resolve) => setTimeout(resolve, 300))\r\n            } catch (error) {\r\n                console.error(`✗ Error geocoding clinic \"${name}\":`, error)\r\n                // Fallback location in Bucharest with validation\r\n                const randomOffset = () => (Math.random() - 0.5) * 0.02 // ~1km radius\r\n                const fallbackLat = 44.4268 + randomOffset()\r\n                const fallbackLng = 26.1025 + randomOffset()\r\n\r\n                locations[name] = {\r\n                    latitude: fallbackLat,\r\n                    longitude: fallbackLng,\r\n                    address: name + \" (locație aproximativă)\",\r\n                }\r\n                console.log(`⚠ Using fallback location for \"${name}\"`)\r\n            }\r\n        }\r\n\r\n        setGeocodingProgress({ current: 0, total: 0 }) // Reset progress\r\n        console.log(`Geocoding complete: ${Object.keys(locations).length}/${total} locations found`)\r\n        return locations\r\n    }\r\n\r\n    const fetchNearbyClinics = useCallback(\r\n        async (lat, lng, zoom = zoomLevel) => {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            setSelectedClinic(null) // Clear selection when searching\r\n\r\n            try {\r\n                // Calculate dynamic radius based on current zoom level\r\n                const searchRadius = calculateRadius(zoom)\r\n\r\n                console.log(\r\n                    `Searching for clinics with radius: ${searchRadius.toFixed(1)}km at [${lat}, ${lng}] with query: \"${SEARCH_QUERY}\"`,\r\n                )\r\n\r\n                // Calculate bounding box using dynamic radius\r\n                const boundingBox = calculateBoundingBox(lat, lng, searchRadius)\r\n\r\n                const requestBody = {\r\n                    latMin: boundingBox.latMin,\r\n                    latMax: boundingBox.latMax,\r\n                    lonMin: boundingBox.lonMin,\r\n                    lonMax: boundingBox.lonMax,\r\n                    query: SEARCH_QUERY,\r\n                }\r\n\r\n                const response = await fetch(`${API_BASE_URL}/nearbyClinics`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(requestBody),\r\n                    credentials: \"include\",\r\n                })\r\n\r\n                if (!response.ok) {\r\n                    let errorMessage = `Failed to fetch nearby clinics: ${response.status}`\r\n                    try {\r\n                        const errorData = await response.json()\r\n                        errorMessage = errorData?.message || errorData?.[0] || errorMessage\r\n                    } catch (e) {\r\n                        // If response is not JSON, use the default error message\r\n                    }\r\n                    throw new Error(errorMessage)\r\n                }\r\n\r\n                const clinicNames = await response.json()\r\n                console.log(\"Received clinic names:\", clinicNames)\r\n\r\n                if (clinicNames && clinicNames.length > 0) {\r\n                    // First set the clinics (this will clear old markers)\r\n                    setClinics(clinicNames)\r\n\r\n                    // Then start geocoding (this will add new markers as locations are found)\r\n                    console.log(\"Starting geocoding process...\")\r\n                    const locations = await geocodeClinicNames(clinicNames)\r\n                    setClinicLocations(locations)\r\n\r\n                    console.log(`✓ Search complete: ${clinicNames.length} clinics found`)\r\n                } else {\r\n                    console.log(\"No clinics found\")\r\n                    setClinics([])\r\n                    setClinicLocations({})\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching nearby clinics:\", error)\r\n                setError(`A apărut o eroare la căutare: ${error.message || error}.`)\r\n                setClinics([])\r\n                setClinicLocations({})\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        },\r\n        [API_BASE_URL, zoomLevel],\r\n    )\r\n\r\n    // Debounced search to prevent too many API calls\r\n    const debouncedSearch = useCallback(\r\n        (() => {\r\n            let timeoutId\r\n            return (lat, lng, zoom) => {\r\n                clearTimeout(timeoutId)\r\n                timeoutId = setTimeout(() => {\r\n                    fetchNearbyClinics(lat, lng, zoom)\r\n                }, 500) // 500ms delay\r\n            }\r\n        })(),\r\n        [fetchNearbyClinics],\r\n    )\r\n\r\n    useEffect(() => {\r\n        // Use debounced search for automatic updates\r\n        debouncedSearch(mapCenter[0], mapCenter[1], zoomLevel)\r\n    }, [debouncedSearch, mapCenter, zoomLevel])\r\n\r\n    const searchByAddress = async (e) => {\r\n        e.preventDefault()\r\n        if (!searchAddress.trim()) return\r\n\r\n        setLoading(true)\r\n        try {\r\n            const response = await fetch(\r\n                `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchAddress)}&countrycodes=ro`,\r\n            )\r\n            const data = await response.json()\r\n\r\n            if (data && data.length > 0) {\r\n                const { lat, lon } = data[0]\r\n                const newLat = Number.parseFloat(lat)\r\n                const newLng = Number.parseFloat(lon)\r\n\r\n                if (!isNaN(newLat) && !isNaN(newLng)) {\r\n                    setMapCenter([newLat, newLng])\r\n                    if (mapRef.current) {\r\n                        mapRef.current.setView([newLat, newLng], zoomLevel)\r\n                    }\r\n                    // Use immediate search for manual address search\r\n                    fetchNearbyClinics(newLat, newLng, zoomLevel)\r\n                } else {\r\n                    setError(\"Coordonate invalide pentru adresa specificată\")\r\n                }\r\n            } else {\r\n                setError(\"Adresa nu a putut fi găsită\")\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error searching address:\", err)\r\n            setError(\"Eroare la căutarea adresei\")\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const MapController = () => {\r\n        const map = useMap()\r\n        mapRef.current = map\r\n\r\n        useMapEvents({\r\n            moveend: () => {\r\n                const center = map.getCenter()\r\n                const newCenter = [center.lat, center.lng]\r\n                const newZoom = map.getZoom()\r\n\r\n                // Only update if there's a significant change\r\n                if (\r\n                    Math.abs(newCenter[0] - mapCenter[0]) > 0.005 ||\r\n                    Math.abs(newCenter[1] - mapCenter[1]) > 0.005 ||\r\n                    newZoom !== zoomLevel\r\n                ) {\r\n                    setMapCenter(newCenter)\r\n                    setZoomLevel(newZoom)\r\n                }\r\n            },\r\n            click: () => {\r\n                setSelectedClinic(null)\r\n            },\r\n        })\r\n\r\n        return null\r\n    }\r\n\r\n    const centerMapOnClinic = (clinicName) => {\r\n        const location = clinicLocations[clinicName]\r\n        if (!location || !location.latitude || !location.longitude) return\r\n\r\n        const lat = Number(location.latitude)\r\n        const lng = Number(location.longitude)\r\n\r\n        if (!isNaN(lat) && !isNaN(lng)) {\r\n            if (mapRef.current) {\r\n                mapRef.current.setView([lat, lng], 15)\r\n            }\r\n            setSelectedClinic(clinicName)\r\n        }\r\n    }\r\n\r\n    const handleMarkerClick = (clinicName) => {\r\n        setSelectedClinic(clinicName)\r\n        // Scroll to the clinic in the sidebar\r\n        const clinicElement = document.getElementById(`clinic-card-${clinicName}`)\r\n        if (clinicElement) {\r\n            clinicElement.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-screen flex flex-col\">\r\n            <header className=\"border-b bg-white z-10\">\r\n                <div className=\"container flex h-16 items-center justify-between px-4\">\r\n                    <div className=\"flex items-center\">\r\n                        {/* Back arrow button */}\r\n                        <button\r\n                            className=\"mr-3 p-2 rounded-full hover:bg-gray-100 transition-colors\"\r\n                            onClick={() => window.history.back()}\r\n                            title=\"Înapoi\"\r\n                        >\r\n                            <ChevronLeft size={20} className=\"text-gray-600\" />\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"mr-2 p-2 rounded-full hover:bg-gray-100 lg:hidden\"\r\n                            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                        >\r\n                            {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                        </button>\r\n                        <h1 className=\"text-xl font-bold\">Găsește Clinici Veterinare în apropiere</h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"flex flex-1 overflow-hidden\">\r\n                {/* Sidebar */}\r\n                <div\r\n                    className={`${\r\n                        sidebarOpen ? \"w-full lg:w-96\" : \"w-0\"\r\n                    } bg-white border-r overflow-hidden transition-all duration-300 flex flex-col`}\r\n                >\r\n                    <div className=\"p-4 border-b\">\r\n                        {/* Address search - simplified */}\r\n                        <form onSubmit={searchByAddress} className=\"flex gap-2\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Caută o adresă...\"\r\n                                value={searchAddress}\r\n                                onChange={(e) => setSearchAddress(e.target.value)}\r\n                                className=\"flex-grow\"\r\n                            />\r\n                            <Button type=\"submit\" disabled={loading} className=\"px-3\">\r\n                                <Search className=\"h-4 w-4\" />\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"flex-1 overflow-y-auto\">\r\n                        <div className=\"p-4\">\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                                <h2 className=\"text-lg font-semibold\">\r\n                                    Rezultate ({clinics.length})\r\n                                    {clinicMarkers.length !== clinics.length && clinics.length > 0 && (\r\n                                        <span className=\"text-sm text-gray-500 ml-1\">({clinicMarkers.length} pe hartă)</span>\r\n                                    )}\r\n                                </h2>\r\n                                {loading && <span className=\"text-sm text-gray-500\">Se încarcă...</span>}\r\n                            </div>\r\n\r\n                            {/* Geocoding progress */}\r\n                            {geocodingProgress.total > 0 && (\r\n                                <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Loader2 className=\"h-4 w-4 animate-spin text-blue-600\" />\r\n                                        <span className=\"text-sm text-blue-700\">\r\n                      Localizez clinicile: {geocodingProgress.current}/{geocodingProgress.total}\r\n                    </span>\r\n                                    </div>\r\n                                    <div className=\"mt-2 w-full bg-blue-200 rounded-full h-2\">\r\n                                        <div\r\n                                            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                                            style={{ width: `${(geocodingProgress.current / geocodingProgress.total) * 100}%` }}\r\n                                        ></div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {error && (\r\n                                <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">{error}</div>\r\n                            )}\r\n\r\n                            {!loading && clinics.length === 0 && !error && (\r\n                                <div className=\"text-center py-8\">\r\n                                    <MapPin className=\"h-12 w-12 mx-auto text-gray-400 mb-2\" />\r\n                                    <p className=\"text-gray-500\">Nu s-au găsit clinici veterinare în această zonă.</p>\r\n                                    <p className=\"text-gray-500 text-sm mt-2\">\r\n                                        Încercați să căutați o altă adresă sau să vă deplasați pe hartă.\r\n                                    </p>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"space-y-4\">\r\n                                {clinics.map((clinicName, index) => {\r\n                                    const hasLocation = clinicLocations[clinicName]\r\n                                    const isSelected = selectedClinic === clinicName\r\n\r\n                                    return (\r\n                                        <Card\r\n                                            key={`clinic-${index}-${clinicName}`}\r\n                                            id={`clinic-card-${clinicName}`}\r\n                                            className={`overflow-hidden cursor-pointer hover:shadow-md transition-all duration-200 ${\r\n                                                isSelected ? \"border-blue-500 border-2 bg-blue-50\" : \"\"\r\n                                            } ${!hasLocation ? \"opacity-60\" : \"\"}`}\r\n                                            onClick={() => centerMapOnClinic(clinicName)}\r\n                                        >\r\n                                            <CardContent className=\"p-4\">\r\n                                                <div className=\"flex items-start\">\r\n                                                    <div className=\"flex items-center mr-2 mt-0.5\">\r\n                                                        {hasLocation ? (\r\n                                                            <MapPin\r\n                                                                className={`h-5 w-5 flex-shrink-0 ${isSelected ? \"text-blue-600\" : \"text-red-500\"}`}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <Loader2 className=\"h-4 w-4 animate-spin text-gray-400 flex-shrink-0\" />\r\n                                                        )}\r\n                                                    </div>\r\n                                                    <div className=\"flex-1\">\r\n                                                        <h3 className={`font-bold text-lg ${isSelected ? \"text-blue-700\" : \"\"}`}>{clinicName}</h3>\r\n                                                        {hasLocation && hasLocation.address && (\r\n                                                            <p className=\"text-gray-600 text-sm mt-1\">{hasLocation.address}</p>\r\n                                                        )}\r\n                                                        {hasLocation && (\r\n                                                            <p className=\"text-xs text-gray-500 mt-1\">\r\n                                                                Lat: {hasLocation.latitude?.toFixed(4)}, Lng: {hasLocation.longitude?.toFixed(4)}\r\n                                                            </p>\r\n                                                        )}\r\n                                                        {!hasLocation && <p className=\"text-xs text-gray-400 mt-1\">Se localizează...</p>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-3 border-t text-xs text-gray-500 text-center\">\r\n                        Raza de căutare: {calculateRadius(zoomLevel).toFixed(1)} km | Pinuri: {clinicMarkers.length}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Map container */}\r\n                <div className=\"flex-grow relative\">\r\n                    <MapContainer\r\n                        center={mapCenter}\r\n                        zoom={zoomLevel}\r\n                        className=\"h-full w-full\"\r\n                        key=\"map-container\" // Stable key to prevent remounting\r\n                    >\r\n                        <TileLayer\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                        />\r\n                        <MapController />\r\n\r\n                        {/* Render clinic markers - synchronized with sidebar results */}\r\n                        {clinicMarkers.map((marker) => (\r\n                            <Marker\r\n                                key={marker.key}\r\n                                position={marker.position}\r\n                                icon={marker.isSelected ? selectedClinicIcon : clinicIcon}\r\n                                eventHandlers={{\r\n                                    click: () => handleMarkerClick(marker.clinicName),\r\n                                }}\r\n                            >\r\n                                <Popup>\r\n                                    <div className=\"text-center max-w-xs\">\r\n                                        <h2 className=\"text-xl font-semibold mb-2\">{marker.clinicName}</h2>\r\n                                        {marker.location.address && <p className=\"text-gray-600 mb-1\">{marker.location.address}</p>}\r\n                                        <p className=\"text-xs text-gray-500\">\r\n                                            {marker.location.latitude?.toFixed(4)}, {marker.location.longitude?.toFixed(4)}\r\n                                        </p>\r\n                                    </div>\r\n                                </Popup>\r\n                            </Marker>\r\n                        ))}\r\n                    </MapContainer>\r\n\r\n                    <button\r\n                        className=\"absolute top-4 left-4 z-[1000] bg-white p-2 rounded-full shadow-md lg:hidden\"\r\n                        onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                    >\r\n                        {sidebarOpen ? <ChevronLeft size={20} /> : <ChevronRight size={20} />}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}